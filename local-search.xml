<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Intro to LLM in a Non-Technical Perspective</title>
    <link href="/2023/11/27/Intro-to-LLM-in-a-Non-Technical-Perspective/"/>
    <url>/2023/11/27/Intro-to-LLM-in-a-Non-Technical-Perspective/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Intro-to-LLM-in-a-Non-Technical-Perspective"><a class="header-anchor" href="#Intro-to-LLM-in-a-Non-Technical-Perspective">¬∂</a>Intro to LLM in a Non-Technical Perspective</h1><p>This is a summary note of the talk presented by Andrej Karpathy at <a href="https://www.youtube.com/watch?v=zjkBMFhNj_g"> 1hr-talk Intro to Large Language Models</a>.</p><iframe width="560" height="315"src="https://www.youtube.com/embed/zjkBMFhNj_g" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="Architecture-in-Simple-Form"><a class="header-anchor" href="#Architecture-in-Simple-Form">¬∂</a>Architecture in Simple Form</h2><p>We can think of all Large Language Model as two files:</p><ol><li>parameters file (e.g. llama-2-70b 140 GB)  <u>why 140GB? 2B (float16) * 70b = 140GB</u></li><li>run.c  (500 lines of C Code)</li></ol><p>No network is required in this simplest setting. <code>run.c</code> will use the param file as inputs for text generation.</p><h2 id="Pre-Training-How-Do-We-Get-Parameters-File"><a class="header-anchor" href="#Pre-Training-How-Do-We-Get-Parameters-File">¬∂</a>Pre-Training: How Do We Get Parameters File?</h2><p>Chunk of the internet (~10TB of text) -&gt; 6000GPUs for 12 days, ~$2M ~1e24 FLOPS -&gt; ~140GB file</p><p>We can think of the 140 GB file as a compressed ZIP file, we get a lossy compression of the raw data (meaning the raw data cannot be recovered fully from the compressed file).</p><h2 id="Neural-Network-What-Do-We-Get-from-Training"><a class="header-anchor" href="#Neural-Network-What-Do-We-Get-from-Training">¬∂</a>Neural Network: What Do We Get from Training</h2><p>This neural network will simply predict the next word in the sequence<br><strong>An Example with context of 5 words</strong>:</p><figure class="highlight vim"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs vim">promp<span class="hljs-variable">t:</span> <span class="hljs-keyword">cat</span> sat <span class="hljs-keyword">on</span> <span class="hljs-keyword">a</span><br>prediction: <span class="hljs-keyword">mat</span> (<span class="hljs-number">97</span>%)<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/image-20231127163339667.png" alt="image-20231127163339667"></p><p>More about the network:</p><ul><li><p>The objective of predicting the next word given a prompt is not an easy task.</p></li><li><p><strong>Hallucination:</strong> The network make up (parrot) incorrect contents in mimic of some real world content.</p></li></ul><h2 id="How-Does-Network-Work"><a class="header-anchor" href="#How-Does-Network-Work">¬∂</a>How Does Network Work?</h2><p>We do not know how exactly the network works as</p><ul><li>Billon of params are dispersed thru the network</li><li>We only know how to iteratively adjust them to make better prediction</li><li>We don‚Äôt really know how the billions of params collaborate to do it.</li></ul><blockquote><p>Think of LLM as the mostly inscrutable artifact in opposite of any engineering discipline.</p></blockquote><p>Now we mostly treat LLM as a empirical artifact in which if we want to use it correctly, sophisticated evaluation is required.</p><h2 id="Fine-Tuning-Targeting-on-More-Specific-Task"><a class="header-anchor" href="#Fine-Tuning-Targeting-on-More-Specific-Task">¬∂</a>Fine-Tuning: Targeting on More Specific Task</h2><p>To target on a more specific task such as training a AI assistant (like Chat GPT), we do:</p><ol><li>Use the same pre-trained model</li><li>Swap the dataset (question answer dataset)</li><li>Continue training</li></ol><p>In contrast to the pre-training (low quality, large quantity), in this stage, we prefer higher quality over quantity.</p><p>Empirically, we found that LLM can learn the formatting of the expected answer from the dataset and utilize the knowledge learned from pre-training phase and fine-tuning phase to build up the answer.</p><h3 id="How-to-Train-Your-ChatGPT"><a class="header-anchor" href="#How-to-Train-Your-ChatGPT">¬∂</a>How to Train Your ChatGPT</h3><ol><li><strong>Stage 1: Pre-training (done ~ every year)</strong><ol><li>Download ~10TB of text</li><li>Get a cluster of ~6,000 GPUs</li><li>Compress the text into a neural network, pay ~2M$, wait ~12 days</li><li>Obtain the base model</li></ol></li><li><strong>Stage 2: Fine-tuning (done ~ week)</strong><ol><li>Write labeling instructions</li><li>Hire people, collect 100K high quality ideal Q&amp;A dataset</li><li>Fine-tune base model on this data, wait ~1 day.</li><li>Obtain assistant model</li><li>Run a lot of Evaluations</li><li>Deploy</li><li>Monitor, collect misbehaviors, go to step 1.</li></ol></li><li>Potentilly Stage 3:<ol><li>Reinforcement Learning from Human Feedback (RLHF)</li><li>Easier to do comparison than to generating one (select the better generated result from result candidates)</li></ol></li></ol><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/image-20231127163405242.png" alt="image-20231127163405242"></p><h2 id="LLM-Scaling-Laws"><a class="header-anchor" href="#LLM-Scaling-Laws">¬∂</a>LLM Scaling Laws</h2><p>Performance of LLMs is a smooth, well-bahaved, predictable function of :</p><ul><li>N: the number of parameters in this network</li><li>D: the amount of text we train on</li></ul><p>We observed that the trends do not show signs of ‚Äútopping out‚Äù, meaning that we can expect more intelligence ‚Äúfor free‚Äù by scaling</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/image-20231127163436240.png" alt="image-20231127163436240"></p><p>Although we do not care about the next word accuracy in actual practice. in practice, we see that this accuracy is correlated to evaluations we care about.</p><p>Algorithmic progress is nice bonus but hard, but this scaling law provides a guaranteed path to success.</p><h2 id="LLM-Uses-Tools-just-like-Human-Do"><a class="header-anchor" href="#LLM-Uses-Tools-just-like-Human-Do">¬∂</a>LLM Uses Tools just like Human Do</h2><p>LLM can be equipped with tools such as browser, calculators to perform more complex task. Today‚Äôs ChatGPT already has some built-in tools it can invoke. some tools already available:</p><ol><li>Browser (Bing search)</li><li>Calculator</li><li>Python Interpreter (e.g. do tasks like plotting)</li><li>DALL-E Image Generation</li><li>Vision</li><li>Speech Communication</li></ol><p>This empowers LLM to accomplish sophisticate tasks, only requiring users to give tasks in any natural language.</p><p>Also, these tools allow ChatGPT to have <strong>multi-modality</strong> capabilities.</p><h2 id="Future-Challenges-Two-System-Self-improvment"><a class="header-anchor" href="#Future-Challenges-Two-System-Self-improvment">¬∂</a>Future Challenges: Two System &amp; Self-improvment</h2><p>From the book <strong>Thinking Fast And Slow</strong></p><p>Two types of brain systems are introduced:</p><ol><li>System 1: Quick, Instinctive, Automatic, No Effort, Emotion, Un-conscious (e.g. arithmetic 2+2)</li><li>System 2: Slow, Rational, Complex-Decision, Effortful, conscious (e.g. arithmetic 17 * 24)</li></ol><p>For now, current LLM is only capable of System 1, but not System 2.</p><p>How can we allow LLM to ‚Äúthink‚Äù? <strong>prefer accuracy over time</strong></p><p>AlphaGo is trained in two steps:</p><ol><li>Learn by imitating human players</li><li>Learn by self-improvement.</li></ol><p>What is the step 2 in the domain of LLM? There‚Äôs a lack of reward criterion.</p><h2 id="A-New-Perspective-of-LLM-OS"><a class="header-anchor" href="#A-New-Perspective-of-LLM-OS">¬∂</a>A New Perspective of LLM OS</h2><p>Think LLM as a new emerging kernel process, just like Linux, where it is coordinating with a lot of resources (memory, tools, peripheral devices, ethernet).</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/image-20231127163501801.png" alt="image-20231127163501801"></p><p>We can also see analogies of proprietary OS and open-source OS with today‚Äôs proprietary LLMs and open-source competitors.</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/image-20231127163518249.png" alt="image-20231127163518249"></p><h2 id="LLM-Security-Challenges"><a class="header-anchor" href="#LLM-Security-Challenges">¬∂</a>LLM Security Challenges</h2><p>Users can disguise the intention and jailbreaks LLM security in a lot of ways.</p><ul><li>Jailbreak attacks by the Grandmother prompt</li><li>Base 64 encoding prompt</li><li>Universal Transferable Suffix</li><li>Noise Pattern</li><li>Prompt Injection</li><li>Data poisoning/ Backdoor attacks</li><li>‚Ä¶</li></ul>]]></content>
    
    
    <categories>
      
      <category>LLM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LLM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetFlash Tutorial</title>
    <link href="/2022/05/12/tutorial-en/"/>
    <url>/2022/05/12/tutorial-en/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="What-is-LeetFlashü§î"><a href="#What-is-LeetFlashü§î" class="headerlink" title="What is LeetFlashü§î"></a>What is LeetFlashü§î</h2><span id="more"></span><div class="note note-success">            <p>‰∏≠ÊñáÊïôÁ®ãËØ∑<a href="https://lucheng.online/2022/04/14/leetflash">ÁÇπÂáªËøôÈáå</a></p>          </div><p>Last UpdateÔºö 2022/7/12 2.1.1 version</p><div class="note note-warning">            <p><strong>Old UsersÔºö Please enter Extension Dashboard and update the LeetFlashÔºÅ</strong></p>          </div><p>LeetFlash is a website based on the idea of <a href="https://en.wikipedia.org/wiki/Spaced_repetition">Spaced repetition</a> to efficiently review LeetCode algorithm problems. After downloading and linking the Chrome plug-in, <strong>LeetFlash will automatically record your question activities and provide fully automatic review time suggestions</strong>. Inspired by Anki, this app is very suitable for those who have just started to prepare for algorithm questions but are troubled by often forgetting their thought process. In order to facilitate the use of both LeetCode and LeetCode-CN users, LeetFlash supports both sites.</p><p>The core purpose of LeetFlash is to use a scientific interval review time to improve your mastery of algorithm knowledge points. <strong>Please note, LeetFlash does not advocate rote memorization of topics.</strong></p><h2 id="How-to-use-LeetFlash-üòé"><a href="#How-to-use-LeetFlash-üòé" class="headerlink" title="How to use LeetFlash üòé"></a>How to use LeetFlash üòé</h2><h3 id="How-to-download-‚¨áÔ∏è"><a href="#How-to-download-‚¨áÔ∏è" class="headerlink" title="How to download ‚¨áÔ∏è"></a>How to download ‚¨áÔ∏è</h3><ol><li><p>Go to <a href="https://leetflash.com/">https://leetflash.com</a> to register an account</p><p>Now it supports two login methods: Google and email registration.</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241526827.png" alt="Registration Page"></p></li><li><p>Open the settings page and copy the API Token.</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241535876.gif" alt="Copy Token"></p></li><li><p>Enter the Chrome Extension Store to download the LeetFlash plug-in:</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241538652.gif" alt="Adding Extension"></p></li><li><p>Paste the copied API Token on the pop-up options page and click save. After receiving the following two notifications, linking is successful.</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241543799.png" alt="Linking Success"></p></li><li><p>You can now start coding and submissions will be synced at LeetFlash.</p></li></ol><h3 id="How-to-use-üßê"><a href="#How-to-use-üßê" class="headerlink" title="How to use üßê"></a>How to use üßê</h3><h3 id="Workflow"><a href="#Workflow" class="headerlink" title="Workflow"></a>Workflow</h3><ol><li><p>Every time you submit a question successfully, you will receive a LeetFlash sync notification.</p><p>**If you don‚Äôt want to review the current question (for example, this question is too easy for you!), after version 2.1.0, you can choose to archive the current question directly in the Chrome notification in the lower right corner. Archiving means that the question will not appear in your Daily Review list. **</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241557581.gif" alt="Sync Question"></p></li><li><p><del>If you open the webpage (<a href="https://leetflash.com/">https://leetflash.com</a>) while submitting the question, you will receive one of the following three popup windows: New, Review, and Early Review. Please see the <strong>Popup window</strong> section below.</del> **To simplify workflow, this feature is temporarily disabled. That is, after each question is submitted, the next review time will be automatically updated. **</p></li><li><p>When <strong>a next repetition date comes</strong>, you can view the details through <strong>Daily Review</strong> (Note: Daily Review will only display the questions due today or before).</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241613252.gif" alt="Daily Review"></p></li><li><p>You can sync notes from LeetCode as well.</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241632839.gif" alt="Sync Notes"></p></li><li><p><del>After submitting the question, you can manually select the next review date or select the time through the pop-up window</del></p><p>**To simplify workflow, this feature is temporarily disabled. That is, after each question is submitted, the next review time will be automatically updated. **</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241636180.gif" alt="Review-Pop-up"></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241638274.gif" alt="Review-Manual"></p><p>The only difference between the two is that the pop-up window needs to be triggered by successfully submitting a question, and there is no trigger requirement for manual selection.</p><p>After completing all daily review questions, you can refresh the page, and you will be prompted that all the reviews have been completed today, good job! (‚óè‚Äô‚ó°‚Äô‚óè)</p></li><li><p>You can switch to open either LeetCode or LeetCode CN and switch the question language.</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241615228.gif" alt="Swtich Language"></p></li></ol><h3 id="More-Info"><a href="#More-Info" class="headerlink" title="More Info"></a>More Info</h3><h4 id="1Ô∏è‚É£Popup"><a href="#1Ô∏è‚É£Popup" class="headerlink" title="1Ô∏è‚É£Popup"></a>1Ô∏è‚É£Popup</h4><p><del>When you successfully log in, any page of the website will <strong>sync</strong> your practice activities, and a successful submission will pop up a window and ask your next review time.</del></p><p><del>Now the popup page of the website only allows <strong>one page</strong> (the lat est opened) of the same account to be synchronized.„ÄÇ</del></p><p>~~What each button represents:</p><ol><li><del>After the question is successfully submitted and passed, the website will record the current submission activity and set the next review date.</del></li><li><del><strong>(Early Review)</strong> If the next review time for the topic is in the future, the new submission will allow you to go directly to the next stage, and the default stage will not change.</del></li><li><del><strong>(Overdue review)</strong> If the next review time for the topic has passed, you can choose to review it tomorrow or three days later, and the default stage will not change.</del></li><li><del><strong>(Review in time)</strong> If the next review time for the topic is <strong>today</strong>, you can choose to review it tomorrow or go directly to the next stage. The default stage will not change.</del></li></ol><p><strong>Disabled from version 2.1.0</strong></p><h4 id="2Ô∏è‚É£Daily-Review"><a href="#2Ô∏è‚É£Daily-Review" class="headerlink" title="2Ô∏è‚É£Daily Review"></a>2Ô∏è‚É£Daily Review</h4><p>Under the Daily Review tab, you can browse the questions and notes with due dates on or before today. Here you can manually select:</p><ol><li>Review again tomorrow, staying at the current stage.</li><li>Go to the next stage.</li></ol><p>In this way, you can consider whether you need to consolidate your memory according to your understanding of each question.</p><p><del><strong>Notes</strong> are the notes you take using the notebook function in LeetCode. Taking into account some factors, now only the latest notes of a specific question (without distinguishing between CN and EN sites) will be synchronized.</del></p><h4 id="3Ô∏è‚É£DashBoard"><a href="#3Ô∏è‚É£DashBoard" class="headerlink" title="3Ô∏è‚É£DashBoard"></a>3Ô∏è‚É£DashBoard</h4><p>On this page you can see all the recorded questions, <strong>Version 2.1.1, you can click this icon to operate the question</strong></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202207122043892.png" alt="image-20220712204352777"></p><ol><li><strong>Only show questions that have not been archived</strong></li><li><strong>Archive multiple questions at once</strong></li><li><strong>Activate (re-enable) multiple issues at once</strong></li><li><strong>Reset multiple questions at once (re-enable and set question stage to initial value 1)</strong></li><li><strong>Delete multiple questions at once (delete all records for this question)</strong></li></ol><p>After selecting the operation you want, check the question, and the dashboard will be automatically updated after confirming</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202207122047588.png" alt="image-20220712204745515"></p><p>Features under development are:</p><ol><li>Allow filtering based on <code>Archive</code> and <code>Topic Tags</code>.</li><li>More and more are under discussion</li></ol><h1 id="About-LeetFlashüòä"><a href="#About-LeetFlashüòä" class="headerlink" title="About LeetFlashüòä"></a>About LeetFlashüòä</h1><p>DomainÔºö<a href="https://leetflash.com/">https://LeetFlash.com</a></p><p>LeetFlash is a free and open source website based on <a href="https://www.gnu.org/licenses/quick-guide-gplv3.html">GPLv3</a>. The core purpose is to help you review the questions more conveniently, efficiently.</p><p>If you are interested in development, welcome to pr! Source code warehouse address: <a href="https://github.com/q815101630/LeetFlash">GitHub</a></p><p>If you think LeetFlash is not bad, your donation is a huge encouragement to me, and it will also help the normal operation of the website~</p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204141458456.png" alt="" style="zoom: 50%;" />]]></content>
    
    
    <categories>
      
      <category>fullstack</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetflash</tag>
      
      <tag>react</tag>
      
      <tag>nestjs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetFlash ‰∏äÁ∫øÂï¶</title>
    <link href="/2022/04/14/leetflash/"/>
    <url>/2022/04/14/leetflash/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="LeetFlash-ÊòØ‰ªÄ‰πà-ü§î"><a href="#LeetFlash-ÊòØ‰ªÄ‰πà-ü§î" class="headerlink" title="LeetFlash ÊòØ‰ªÄ‰πà ü§î"></a>LeetFlash ÊòØ‰ªÄ‰πà ü§î</h2><span id="more"></span><div class="note note-success">            <p>View English Tutorial <a href="https://lucheng.online/2022/05/12/tutorial-en">Here</a></p>          </div><p>ÊúÄÂêéÊõ¥Êñ∞Êó•ÊúüÔºö 2022/7/12 2.1.1 version</p><div class="note note-warning">            <p><strong>ËÄÅÁî®Êà∑Ôºö ËØ∑ËøõÂÖ• extension È°µÈù¢Âπ∂‰∏îÈÄâÊã©Êõ¥Êñ∞Êèí‰ª∂ÔºÅ</strong></p><p><strong>ÁÆ°ÁêÜÊâ©Â±ïÁ®ãÂ∫è -&gt; Êõ¥Êñ∞ÔºàÂ∑¶‰∏äËßíÔºâ</strong></p>          </div><p>LeetFlash ÊòØ‰∏ÄÊ¨æÂü∫‰∫é<a href="https://en.wikipedia.org/wiki/Spaced_repetition">Spaced repetition</a>ÊÄùÊÉ≥ËÄåÂºÄÂèëÁöÑÈ´òÊïàÂ§ç‰π†ÁÆóÊ≥ïÈ¢òÁöÑÁΩëÁ´ô„ÄÇÂú®‰∏ãËΩΩÂπ∂ÈìæÊé•ÁΩëÁ´ôÊèí‰ª∂ÊàêÂäüÂêéÔºåÊèí‰ª∂‰ºöËá™Âä®ËÆ∞ÂΩï‰Ω†ÁöÑÂà∑È¢òÊ¥ªÂä®Âπ∂‰∏îÊèê‰æõÂÖ®Ëá™Âä®ÂåñÁöÑÂ§ç‰π†Êó∂Èó¥Âª∫ËÆÆ„ÄÇÂêØÂèë‰∫éÂêÑÁ±ªËÉåÂçïËØç APP, Êú¨ APP ÈùûÂ∏∏ÈÄÇÁî®‰∫é<strong>ÂàöÂàöÂºÄÂßãÂà∑È¢ò‰ΩÜËã¶ÊÅº‰∫éÁªèÂ∏∏ÂøòËÆ∞ÊÄùË∑ØÂíåÊ≠£Âú®‰∏∫Èù¢ËØïÂÜ≤Âà∫ÁöÑÂ∞è‰ºô‰º¥</strong>„ÄÇ‰∏∫‰∫ÜÊñπ‰æøÊµ∑Â§ñÂíåÂõΩÂÜÖÁöÑÂ∞è‰ºô‰º¥‰ΩøÁî®ÔºåLeetFlash ÂêåÊó∂ÊîØÊåÅ Ëã±ÊñáÂå∫ÂíåÂõΩÂå∫„ÄÇ</p><p>LeetFlash ÁöÑÊ†∏ÂøÉÁõÆÁöÑ‰∏∫Âà©Áî®ÁßëÂ≠¶ÁöÑÈó¥ÈöîÂ§ç‰π†Êó∂Èó¥ÊèêÂçá‰Ω†ÂØπÁÆóÊ≥ïÁü•ËØÜÁÇπÁöÑÊéåÊè°ËÉΩÂäõ„ÄÇ<strong>ËØ∑Ê≥®ÊÑè</strong>ÔºåLeetFlash Âπ∂‰∏çÂÄ°ÂØºÂØπÈ¢òÁõÆÁöÑÊ≠ªËÆ∞Á°¨ËÉå„ÄÇ</p><h2 id="ÊÄé‰πà‰ΩøÁî®-LeetFlash-üòé-ÂõæÊñáÊïôÁ®ã"><a href="#ÊÄé‰πà‰ΩøÁî®-LeetFlash-üòé-ÂõæÊñáÊïôÁ®ã" class="headerlink" title="ÊÄé‰πà‰ΩøÁî® LeetFlash üòé (ÂõæÊñáÊïôÁ®ã)"></a>ÊÄé‰πà‰ΩøÁî® LeetFlash üòé (ÂõæÊñáÊïôÁ®ã)</h2><h3 id="Â¶Ç‰Ωï‰∏ãËΩΩ-‚¨áÔ∏è"><a href="#Â¶Ç‰Ωï‰∏ãËΩΩ-‚¨áÔ∏è" class="headerlink" title="Â¶Ç‰Ωï‰∏ãËΩΩ ‚¨áÔ∏è"></a>Â¶Ç‰Ωï‰∏ãËΩΩ ‚¨áÔ∏è</h3><ol><li><p>ËøõÂÖ• <a href="https://leetflash.com/">https://leetflash.com</a> Ê≥®ÂÜåË¥¶Âè∑</p><p>Áé∞ÊîØÊåÅ‰∏§ÁßçÁôªÈôÜÊñπÂºèÔºöGoogle ÂíåÈÇÆÁÆ±Ê≥®ÂÜå</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241526827.png" alt="Ê≥®ÂÜåÁïåÈù¢"></p></li><li><p>ÊâìÂºÄËÆæÁΩÆÈ°µÈù¢ÔºåÂ§çÂà∂ API Token</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241535876.gif" alt="Â§çÂà∂Âè£‰ª§"></p></li><li><p>ËøõÂÖ• chrome Êèí‰ª∂ÂïÜÂ∫ó‰∏ãËΩΩ LeetFlash Êèí‰ª∂Ôºö<a href="https://chrome.google.com/webstore/detail/leetflash/gffjifokdnkmfcjihfgnalbabnghedjc">Âú∞ÂùÄ</a>Ôºå Âπ∂Âõ∫ÂÆöÊèí‰ª∂Âú®Âè≥‰∏äËßí</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241538652.gif" alt="Ê∑ªÂä†Êèí‰ª∂"></p></li><li><p>Âú®ÂºπÂá∫ÁöÑÈÄâÈ°πÈ°µÈù¢ÔºàÊàñÊâãÂä®Âè≥ÈîÆÊèí‰ª∂ÂõæÊ†áÔºâÁ≤òË¥¥Â§çÂà∂Â•ΩÁöÑ API TokenÔºåÁÇπÂáª save„ÄÇÊî∂Âà∞‰ª•‰∏ã‰∏§Êù°ÈÄöÁü•ÂêéÔºå‰æøËØ¥ÊòéÈìæÊé•ÊàêÂäü</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241543799.png" alt="ÈìæÊé•ÊàêÂäü‰ø°ÊÅØ"></p></li><li><p>ÈìæÊé•ÊàêÂäüÂêéÔºåÂà∑È¢òÊ¥ªÂä®Ôºà‰æãÂ¶ÇÊàêÂäüÊèê‰∫§Á≠îÊ°àÔºâ‰æø‰ºöË¢´Ëá™Âä®ÂêåÊ≠•Âà∞ÁΩëÁ´ôÔºÅ</p></li></ol><h3 id="Â¶Ç‰Ωï‰ΩøÁî®-üßê"><a href="#Â¶Ç‰Ωï‰ΩøÁî®-üßê" class="headerlink" title="Â¶Ç‰Ωï‰ΩøÁî® üßê"></a>Â¶Ç‰Ωï‰ΩøÁî® üßê</h3><h3 id="Â∑•‰ΩúÊµÅ"><a href="#Â∑•‰ΩúÊµÅ" class="headerlink" title="Â∑•‰ΩúÊµÅ"></a>Â∑•‰ΩúÊµÅ</h3><ol><li><p>Âú®ÈìæÊé•Â•ΩÁΩëÁ´ôÂíåÊèí‰ª∂ÂêéÔºåËøõË°åÊó•Â∏∏Âà∑È¢ò„ÄÇÊØèÊ¨°ÊàêÂäüÊèê‰∫§È¢òÁõÆÂêéÔºå‰ºöÊî∂Âà∞ LeetFlash ÂêåÊ≠•ÈÄöÁü•</p><p><strong>Â¶ÇÊûú‰Ω†Âπ∂‰∏çÊÉ≥Â§ç‰π†ÂΩìÂâçÈóÆÈ¢òÔºàÊØîÂ¶ÇËøôÈÅìÈ¢òÂØπ‰Ω†Êù•ËØ¥ÁÆÄÁõ¥Â§™ÁÆÄÂçï‰∫ÜÔºÅÔºâÔºåÂú® 2.1.0 ÁâàÊú¨ÂêéÔºå‰Ω†ÂèØ‰ª•Áõ¥Êé•Âú®Âè≥‰∏ãËßíÁöÑ Chrome ÈÄöÁü•ÈáåÈÄâÊã©ÊääÂΩìÂâçÈóÆÈ¢òÂΩíÊ°£„ÄÇÂΩíÊ°£ÊÑèÂë≥ÁùÄËøôÈÅìÈ¢òÁõÆÂ∞Ü‰∏ç‰ºöÂá∫Áé∞Âú®‰Ω†ÁöÑ Daily Review ÂàóË°®Èáå„ÄÇ</strong></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241557581.gif" alt="Ê∑ªÂä†ÈóÆÈ¢ò"></p></li><li><p><del>Â¶ÇÊûúÂú®Âà∑È¢òÂêåÊó∂ÊâìÂºÄÁùÄÁΩëÈ°µÔºà<a href="https://leetflash.com)Ôºå‰ºöÊî∂Âà∞‰ª•‰∏ã‰∏âÁßçPopupÂºπÂá∫Á™óÂè£ÔºöÊñ∞È¢òÁõÆÔºåÂ§ç‰π†È¢òÁõÆÔºåÂíåÊèêÂâçÂ§ç‰π†È¢òÁõÆ„ÄÇÂÖ∑‰ΩìÂàÜÂà´‰ª£Ë°®‰ªÄ‰πàÔºåËØ∑Êü•Áúã‰∏ãÈù¢**PopupÂºπÂá∫Á™óÂè£**ÊùøÂùó">https://leetflash.com)Ôºå‰ºöÊî∂Âà∞‰ª•‰∏ã‰∏âÁßçPopupÂºπÂá∫Á™óÂè£ÔºöÊñ∞È¢òÁõÆÔºåÂ§ç‰π†È¢òÁõÆÔºåÂíåÊèêÂâçÂ§ç‰π†È¢òÁõÆ„ÄÇÂÖ∑‰ΩìÂàÜÂà´‰ª£Ë°®‰ªÄ‰πàÔºåËØ∑Êü•Áúã‰∏ãÈù¢**PopupÂºπÂá∫Á™óÂè£**ÊùøÂùó</a></del> <strong>‰∏∫‰∫ÜÁÆÄÂåñÂ∑•‰ΩúÊµÅÔºåÁé∞Âú®ÊöÇÊó∂Á¶ÅÁî®Êéâ‰∫ÜËøô‰∏™ÂäüËÉΩ„ÄÇÂç≥ÊØèÊ¨°Êèê‰∫§È¢òÁõÆÂêéÔºå‰∏ã‰∏ÄÊ¨°Â§ç‰π†Êó∂Èó¥Â∞Ü‰ºöËá™Âä®Êõ¥Êñ∞„ÄÇ</strong></p></li><li><p>ÂΩì<strong>‰∏ÄÈÅìÈ¢òÁõÆÂà∞Â§ç‰π†Êó•ÊúüÊó∂(next repetition)<strong>ÔºåÂèØ‰ª•ÈÄöËøá</strong>Daily Review</strong> Êü•ÁúãËØ¶ÊÉÖ <strong>ÔºàÊ≥®ÊÑèÔºöDaily Review Âè™‰ºöÊòæÁ§∫ Next Repetition Âú®‰ªäÂ§©Êàñ‰πãÂâçÁöÑÈ¢òÁõÆÔºâ</strong></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241613252.gif" alt="ÊØèÊó•Â§ç‰π†"></p></li><li><p>LeetCode Áé∞Âú®ÊîØÊåÅÂØπÈóÆÈ¢òÊ∑ªÂä†Á¨îËÆ∞ÔºåÂú® LeetCode ‰∏äÁöÑÁ¨îËÆ∞‰πü‰ºöË¢´ LeetFlash ÂêåÊ≠•Âì¶„ÄÇ</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241632839.gif" alt="Ê∑ªÂä†Á¨îËÆ∞"></p></li><li><p><del>Êèê‰∫§È¢òÁõÆÂêéÔºåÂèØ‰ª•ÈÄöËøáÂºπÁ™óÈÄâÊã©Êó∂Èó¥</del> <strong>‰∏∫‰∫ÜÁÆÄÂåñÂ∑•‰ΩúÊµÅÔºåÁé∞Âú®ÊöÇÊó∂Á¶ÅÁî®Êéâ‰∫ÜËøô‰∏™ÂäüËÉΩ„ÄÇÂç≥ÊØèÊ¨°Êèê‰∫§È¢òÁõÆÂêéÔºå‰∏ã‰∏ÄÊ¨°Â§ç‰π†Êó∂Èó¥Â∞Ü‰ºöËá™Âä®Êõ¥Êñ∞„ÄÇ</strong></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241636180.gif" alt="Â§ç‰π†È¢òÁõÆ-ÂºπÁ™ó"></p><p><strong>Â¶ÇÊûú‰Ω†ÊáíÂæóÊâìÂºÄÁΩëÁ´ôÂÜçÂà∑‰∏ÄÈÅçÔºå‰Ω†ÂèØ‰ª•Áõ¥Êé•Âú®È°µÈù¢Âè≥‰∏ãËßíÊ†áËÆ∞ËøõÂÖ• Next Stage</strong></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241638274.gif" alt="Â§ç‰π†È¢òÁõÆ-ÊâãÂä®"></p><p>ÂÆåÊàêÊâÄÊúâ daily review È¢òÁõÆÂêéÔºåÂèØ‰ª•Âà∑Êñ∞È°µÈù¢Ôºå‰ºöÊèêÁ§∫‰ªäÂ§©ÊâÄÊúâÂ§ç‰π†Â∑≤ÂÆåÊàêÔºågood jobÔºÅ(‚óè‚Äô‚ó°‚Äô‚óè)</p></li><li><p>ÂèØ‰ª•ÈÄöËøá<strong>ÂàáÊç¢ËØ≠Ë®Ä</strong>ÂàáÊç¢ÊâìÂºÄÂõΩÂå∫ÊàñÂõΩÈôÖÂå∫ LeetCode ÁΩëÁ´ô</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204241615228.gif" alt="ÂàáÊç¢ËØ≠Ë®Ä"></p></li></ol><h3 id="ÂÖ∑‰Ωì‰ø°ÊÅØ"><a href="#ÂÖ∑‰Ωì‰ø°ÊÅØ" class="headerlink" title="ÂÖ∑‰Ωì‰ø°ÊÅØ"></a>ÂÖ∑‰Ωì‰ø°ÊÅØ</h3><h4 id="1Ô∏è‚É£-Daily-Review-ÊØèÊó•Â§ç‰π†"><a href="#1Ô∏è‚É£-Daily-Review-ÊØèÊó•Â§ç‰π†" class="headerlink" title="1Ô∏è‚É£ Daily Review ÊØèÊó•Â§ç‰π†"></a>1Ô∏è‚É£ Daily Review ÊØèÊó•Â§ç‰π†</h4><p>Âú®ÊØèÊó•Â§ç‰π† tab ‰∏ãÔºå‰Ω†ÂèØ‰ª•ÊµèËßàÂà∞Êà™Ê≠¢Êó•ÊúüÂú®‰ªäÂ§©Êàñ‰πãÂâçÁöÑÊâÄÊúâÈ¢òÁöÑÈ¢òÁõÆÂíåÁ¨îËÆ∞„ÄÇÂú®ËøôÈáå‰Ω†ÂèØ‰ª•ÊâãÂä®ÈÄâÊã©Ôºö</p><ol><li>ÊòéÂ§©ÂÜçÊ¨°Â§ç‰π†ÔºåÂÅúÁïôÂΩìÂâç stage„ÄÇ</li><li>ËøõÂÖ•‰∏ã‰∏Ä‰∏™ stage„ÄÇ</li><li>Archive ÂΩìÂâçÈóÆÈ¢ò</li></ol><p>ËøôÊ†∑‰Ω†ÂèØ‰ª•Ê†πÊçÆÂØπÊØèÈÅìÈ¢òÁöÑÊéåÊè°ËÉΩÂäõËÄÉËôëÊòØÂê¶ÈúÄË¶ÅÂ∑©Âõ∫‰∏ãËÆ∞ÂøÜ„ÄÇ</p><p>Á¨îËÆ∞‰∏∫‰Ω†Âú® LeetCodeÔºàÊîØÊåÅÂõΩÈôÖÂå∫ÂíåÂõΩÂå∫Ôºâ‰ΩøÁî®Á¨îËÆ∞Êú¨ÂäüËÉΩËÆ∞ÂΩïÁöÑÁ¨îËÆ∞„ÄÇËÄÉËôëÂà∞‰∏Ä‰∫õÂõ†Á¥†ÔºåÁé∞Âú®Âè™‰ºöÊ†πÊçÆÂÖ∑‰Ωì‰∏ÄÈÅìÈ¢òÁöÑÊúÄÊñ∞Á¨îËÆ∞Ôºà‰∏çÂå∫ÂàÜÂõΩÈôÖÂå∫ÂíåÂõΩÂå∫ÔºâËøõË°åÂêåÊ≠•„ÄÇ</p><p><del><em>Daily Review tab Âíå Popup ÁöÑÂå∫Âà´Âú®‰∫é Popup Âè™ÊúâÂú®ÊàêÂäüÊèê‰∫§È¢òÁõÆÊó∂Êâç‰ºöËß¶ÂèëÔºåÈªòËÆ§‰∏ç‰ºöÊîπÂèò stage</em></del></p><h4 id="2Ô∏è‚É£-DashBoard-Èù¢Êùø"><a href="#2Ô∏è‚É£-DashBoard-Èù¢Êùø" class="headerlink" title="2Ô∏è‚É£ DashBoard Èù¢Êùø"></a>2Ô∏è‚É£ DashBoard Èù¢Êùø</h4><p>Âú®Ëøô‰∏™È°µÈù¢‰Ω†ÂèØ‰ª•ÁúãÂà∞ÊâÄÊúâË¢´ËÆ∞ÂΩïÁöÑÈ¢òÁõÆÔºå<strong>2.1.1 ÂêéÔºå‰Ω†ÂèØ‰ª•ÁÇπÂáªËøô‰∏™ÂõæÊ†áÂØπÈóÆÈ¢òËøõË°åÊìç‰Ωú</strong></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202207122043892.png" alt="image-20220712204352777"></p><ol><li><strong>Âè™ÊòæÁ§∫Â∞öÊú™ archive ÁöÑÈóÆÈ¢ò</strong></li><li><strong>‰∏ÄÊ¨°ÊÄß archive Â§ö‰∏™ÈóÆÈ¢ò</strong></li><li><strong>‰∏ÄÊ¨°ÊÄß activateÔºàÈáçÊñ∞ÂêØÁî®ÔºâÂ§ö‰∏™ÈóÆÈ¢ò</strong></li><li><strong>‰∏ÄÊ¨°ÊÄß reset Â§ö‰∏™ÈóÆÈ¢òÔºàÈáçÊñ∞ÂêØÁî®Âπ∂ËÆæÁΩÆÈóÆÈ¢òÁöÑ stage Âà∞ÂàùÂßãÂÄº 1Ôºâ</strong></li><li><strong>‰∏ÄÊ¨°ÊÄßÂà†Èô§Â§ö‰∏™ÈóÆÈ¢òÔºàÂà†Èô§ÂØπÊ≠§È¢òÁöÑÊâÄÊúâËÆ∞ÂΩïÔºâ</strong></li></ol><p>ÈÄâÊã©‰Ω†ÊÉ≥Ë¶ÅÁöÑÊìç‰ΩúÂêéÔºåÂãæÈÄâÈóÆÈ¢òÔºåconfirm ÂêéÂ∞±‰ºöËá™Âä®Êõ¥Êñ∞ dashboard</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202207122047588.png" alt="image-20220712204745515"></p><p>Ê≠£Âú®ÂºÄÂèëÁöÑÂäüËÉΩÊúâÔºö</p><ol><li>ÂÖÅËÆ∏Ê†πÊçÆ<code>Archive</code> Âíå <code>Topic Tags</code> ËøõË°åÁ≠õÈÄâ„ÄÇ</li><li>Êõ¥Â§öÊõ¥Â§öÊ≠£Âú®ÁÉ≠ÁÉàËÆ®ËÆ∫‰∏≠</li></ol><h4 id="3Ô∏è‚É£-Popup-ÂºπÂá∫Á™óÂè£"><a href="#3Ô∏è‚É£-Popup-ÂºπÂá∫Á™óÂè£" class="headerlink" title="3Ô∏è‚É£ Popup ÂºπÂá∫Á™óÂè£"></a>3Ô∏è‚É£ <del>Popup ÂºπÂá∫Á™óÂè£</del></h4><p><del>ÂΩì‰Ω†ÊàêÂäüÁôªÈôÜÂêéÔºåÂú®ÁΩëÁ´ôÁöÑ‰ªª‰ΩïÈ°µÈù¢ÈÉΩ‰ºö<strong>ÂÆûÊó∂ÂêåÊ≠•</strong>‰Ω†ÁöÑÂà∑È¢òÊ¥ªÂä®ÔºåÊàêÂäüÁöÑÊèê‰∫§‰ºöÂºπÂá∫Á™óÂè£Âπ∂‰∏îËØ¢ÈóÆ‰Ω†ÁöÑ‰∏ã‰∏ÄÊ¨°Â§ç‰π†Êó∂Èó¥„ÄÇ</del></p><p><del>Áé∞Âú®ÁΩëÁ´ôÁöÑ Popup ÂäüËÉΩÂè™ÂÖÅËÆ∏ÂØπÂêå‰∏Ä‰∏™Ë¥¶Âè∑ÁöÑ<strong>‰∏Ä‰∏™È°µÈù¢</strong>ÔºàÊúÄÊñ∞ÊâìÂºÄÁöÑÔºâËøõË°åÂêåÊ≠•„ÄÇ</del></p><p><del>1. ÊàêÂäüÊèê‰∫§Á≠îÊ°àÂπ∂ÈÄöËøáÂêéÔºåÁΩëÁ´ô‰ºöËÆ∞ÂΩï‰∏ãÂΩìÂâçÁöÑÊèê‰∫§Ê¥ªÂä®ÔºåÂπ∂‰∏îËÆæÂÆö‰∏ãÊ¨°ÁöÑÂ§ç‰π†Êó•Êúü„ÄÇ</del></p><p><del>2. ÔºàÊèêÂâçÂ§ç‰π†ÔºâÂ¶ÇÊûúÈ¢òÁõÆÁöÑ‰∏ã‰∏ÄÊ¨°Â§ç‰π†Êó∂Èó¥ÊòØÂú®<strong>Êú™Êù•</strong>ÔºåÊñ∞ÁöÑÊèê‰∫§‰ºöÂÖÅËÆ∏‰Ω†Áõ¥Êé•ËøõÂÖ•‰∏ã‰∏Ä‰∏™ stageÔºåÈªòËÆ§ stage ‰∏ç‰ºöÊîπÂèò„ÄÇ</del><br><del>3. ÔºàOverdue Â§ç‰π†ÔºâÂ¶ÇÊûúÈ¢òÁõÆÁöÑ‰∏ã‰∏ÄÊ¨°Â§ç‰π†Êó∂Èó¥<strong>Â∑≤ÁªèËøáÂéª</strong>Ôºå‰Ω†ÂèØ‰ª•ÈÄâÊã©Âú®ÊòéÂ§©ÊàñËÄÖ‰∏âÂ§©ÂêéÂ§ç‰π†ÔºåÈªòËÆ§ stage ‰∏ç‰ºöÊîπÂèò„ÄÇ</del><br><del>4. ÔºàÂèäÊó∂Â§ç‰π†ÔºâÂ¶ÇÊûúÈ¢òÁõÆÁöÑ‰∏ã‰∏ÄÊ¨°Â§ç‰π†Êó∂Èó¥ÊòØÂú®<strong>‰ªäÂ§©</strong>Ôºå‰Ω†ÂèØ‰ª•ÈÄâÊã©Âú®ÊòéÂ§©Â§ç‰π†ÊàñËÄÖÁõ¥Êé•ËøõÂÖ•‰∏ã‰∏Ä‰∏™ stageÔºåÈªòËÆ§ stage ‰∏ç‰ºöÊîπÂèò„ÄÇ</del></p><p><strong>Âú®ÊúÄÊñ∞ÁâàÊú¨‰∏≠Á¶ÅÁî®‰∫ÜÂºπÂá∫Á™óÂè£</strong></p><h1 id="Change-Logs"><a href="#Change-Logs" class="headerlink" title="Change Logs"></a>Change Logs</h1><p>2022/7/9 2.1.0 version <strong>Allow users to archive questions from notification directly</strong></p><p>2022/7/12 2.1.1 version <strong>Allow users to archive/reset/delete/activate multiple questions from dashboard</strong></p><h1 id="ÂÖ≥‰∫é-LeetFlashüòä"><a href="#ÂÖ≥‰∫é-LeetFlashüòä" class="headerlink" title="ÂÖ≥‰∫é LeetFlashüòä"></a>ÂÖ≥‰∫é LeetFlashüòä</h1><p>‰∏ªÁ´ôÔºö<a href="https://leetflash.com/">https://LeetFlash.com</a></p><p>LeetFlash ÊòØ‰∏ÄÊ¨æÂü∫‰∫é<a href="https://www.gnu.org/licenses/quick-guide-gplv3.html">GPLv3</a>ÁöÑÂÖçË¥πÂºÄÊ∫êÁΩëÁ´ô„ÄÇÊ†∏ÂøÉÁõÆÁöÑÊòØÂ∏ÆÂä©Ê≠£Âú®Âà∑È¢òÁöÑ‰Ω†Êèê‰æõ‰∏Ä‰∏™Êõ¥Êñπ‰æøÔºåÈ´òÊïàÔºåËá™Âä®ÂåñÁöÑÂÆöÊúüÂ§ç‰π†È¢òÁõÆÁöÑÂ∞èÂ∏ÆÊâã~</p><p>Â¶ÇÊûú‰Ω†ÂØπÂºÄÂèëÊÑüÂÖ¥Ë∂£ÁöÑËØùÔºåÊ¨¢Ëøé prÔºÅÊ∫êÁ†Å‰ªìÂ∫ìÂú∞ÂùÄÔºö<a href="https://github.com/q815101630/LeetFlash">GitHub</a></p><p>Â¶ÇÊûú‰Ω†ËßâÂæó LeetFlash Ëøò‰∏çÈîôÔºå‰Ω†ÁöÑÊçêÂä©ÊòØÂØπÊàëÁöÑÂ∑®Â§ßÈºìÂä±Ôºå‰πü‰ºöÁªôÁΩëÁ´ôÁöÑÊ≠£Â∏∏Ëøê‰ΩúÂ∏¶Êù•Â∏ÆÂä©~</p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202204141458456.png" alt="" style="zoom: 50%;" />]]></content>
    
    
    <categories>
      
      <category>fullstack</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetflash</tag>
      
      <tag>react</tag>
      
      <tag>nestjs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C++ Advance Notes</title>
    <link href="/2022/03/23/c-advanced/"/>
    <url>/2022/03/23/c-advanced/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Some C++ Advanced Usage Example Notes</p><p>‰∏Ä‰∫õ‰∏™‰∫∫C++ÁöÑÂ≠¶‰π†Á¨îËÆ∞</p><span id="more"></span><p>ËøôÁØápost‰∏ªË¶ÅËÆ∞ÂΩïÂú®ÂÜôCS126‰ª£Á†ÅÊó∂ÂÄôÔºåÈÅáÂà∞ÁöÑ‰∏Ä‰∫õc++ÈóÆÈ¢òÔºåÁïô‰ª•ËÆ∞ÂΩï„ÄÇ</p><p>È¶ñÂÖàÂº∫Êé®Ëøô‰∏™Youtuber C++Á≥ªÂàóÔºåÈùûÂ∏∏Áõ¥ËßÇ+ÂæàÊúâÂ∏ÆÂä©Ôºö</p><p><a href="https://www.youtube.com/channel/UCQ-W1KE9EYfdxhL6S4twUNw">https://www.youtube.com/channel/UCQ-W1KE9EYfdxhL6S4twUNw</a></p><p>ËøôÁØápost‰∏ªË¶ÅÂõ¥ÁªïCS126 HW9 ÁöÑ‰∏ÄÁ≥ªÂàóÂ∞èÈóÆÈ¢òÂ±ïÂºÄ</p><h1 id="Pointers-and-References"><a class="header-anchor" href="#Pointers-and-References">¬∂</a>Pointers and References</h1><blockquote><p>You need to write a function swap two <code>int</code>s. You remember there are three ways to do it but unfortunately you can‚Äôt remember what the best way is. Why not try all three ways, then?</p><p>If a function is impossible to implement, return <code>false</code>. Otherwise, swap the numbers and return <code>true</code>.</p></blockquote><p><strong>Answer:</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">SwapByValue</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">SwapByPointer</span><span class="hljs-params">(<span class="hljs-keyword">int</span> *a, <span class="hljs-keyword">int</span> *b)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> temp =  *a;<br>    *a = *b;<br>    *b = temp;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">SwapByReference</span><span class="hljs-params">(<span class="hljs-keyword">int</span> &amp;a, <span class="hljs-keyword">int</span> &amp;b)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> temp = a;<br>    a = b;<br>    b = temp;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>Explanation:</strong></p><ol><li>Swap by Value ÊòØÊó†ÊïàÁöÑÔºåÂõ†‰∏∫‰∏§‰∏™ÂèÇÊï∞ÈÉΩÂè™ÊòØ‰∏§‰ªΩcopyÔºåÂéüÂèòÈáèÊó†‰ªª‰ΩïÂèòÂåñ„ÄÇ</li><li>Swap by Pointer ÂéüÂèòÈáèË¢´‰∏§‰∏™ÊåáÈíàÊåáÂêëÂπ∂‰∏î‰º†ÂÖ•ÂèÇÊï∞ÔºåÈÇ£‰πàÂè™ÈúÄË¶ÅDereferenceÂêéÂæóÂà∞AliasÔºå‰∫§Êç¢ÂÄºÂêé‰∏§‰∏™ÂèòÈáèÂÜÖÂ≠òÂú∞ÂùÄ‰∏äÁöÑÂÄºÂ∞±‰ºöË¢´‰∫§Êç¢.</li><li>Swap by ReferenceÔºö ReferenceÂ∞±ÊòØÂèòÈáèÁöÑAliasÔºåÊîπÂèòÁõ¥Êé•ÂèçÂ∫îÂà∞ÂèòÈáèÁöÑÂÜÖÂ≠òÂú∞ÂùÄ‰∏ä„ÄÇ</li></ol><h1 id="Iterators"><a class="header-anchor" href="#Iterators">¬∂</a>Iterators</h1><blockquote><p>You realize that Git uses linked lists internally, so you decide to implement your own version control system! This should be easy, right? Start by implementing the following iterator functions, so you can iterate over a list of commits.</p><p>When you‚Äôre done, your iterator should be able to be used in the following <code>for</code> loop:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c++">CommitHistory history;<br>history.Push(<span class="hljs-string">&quot;First commit&quot;</span>);<br>history.Push(<span class="hljs-string">&quot;Second commit&quot;</span>);<br><span class="hljs-comment">// ...</span><br><br><span class="hljs-keyword">for</span> (CommitHistory::Iterator it = history.begin(); it != history.end(); ++it) &#123;<br>    <span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span> message = *it;<br>    <span class="hljs-comment">// ...</span><br>&#125;<br></code></pre></td></tr></table></figure><p>For reference, the header file is included below:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> once</span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span><br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CommitHistory</span> &#123;</span><br>  <span class="hljs-keyword">public</span>:<br>    CommitHistory();<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Push</span><span class="hljs-params">(<span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span> message)</span></span>;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Iterator</span> &#123;</span><br>      <span class="hljs-keyword">public</span>:<br>        Iterator(Commit *curr);<br><br>        Iterator&amp; <span class="hljs-keyword">operator</span>++();<br>        <span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span>&amp; <span class="hljs-keyword">operator</span>*() <span class="hljs-keyword">const</span>;<br>        <span class="hljs-keyword">bool</span> <span class="hljs-keyword">operator</span>!=(<span class="hljs-keyword">const</span> Iterator&amp; other) <span class="hljs-keyword">const</span>;<br><br>      <span class="hljs-keyword">private</span>:<br>        Commit *curr_;<br>    &#125;;<br><br>    <span class="hljs-function">Iterator <span class="hljs-title">begin</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function">Iterator <span class="hljs-title">end</span><span class="hljs-params">()</span></span>;<br><br>  <span class="hljs-keyword">private</span>:<br>    <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Commit</span> &#123;</span><br>        <span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span> message_;<br>        Commit *next_;<br>    &#125;;<br><br>    Commit *head_;<br>&#125;;<br></code></pre></td></tr></table></figure><p>Hint: Each function should be roughly one line of code.</p></blockquote><p>**Answer: **</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;commit_history.h&quot;</span></span><br><br><br>CommitHistory::CommitHistory() &#123;<br>    head_ = <span class="hljs-literal">nullptr</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">CommitHistory::Push</span><span class="hljs-params">(<span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span> message)</span> </span>&#123;<br>    Commit *commit = <span class="hljs-keyword">new</span> Commit();<br>    commit-&gt;message_ = message;<br>    commit-&gt;next_ = head_;<br><br>    head_ = commit;<br>&#125;<br><br>CommitHistory::Iterator::Iterator(Commit *curr) &#123;<br>    curr_ = curr;<br>&#125;<br><br><span class="hljs-keyword">bool</span> CommitHistory::Iterator::<span class="hljs-keyword">operator</span>!=(<span class="hljs-keyword">const</span> Iterator&amp; other) <span class="hljs-keyword">const</span> &#123;<br>    <span class="hljs-keyword">return</span> curr_ != other.curr_;<br>&#125;<br><br>CommitHistory::Iterator&amp; CommitHistory::Iterator::<span class="hljs-keyword">operator</span>++() &#123;<br>    curr_ = curr_-&gt;next_;<br>    <span class="hljs-keyword">return</span> *<span class="hljs-keyword">this</span>;<br>&#125;<br><br><span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span>&amp; CommitHistory::Iterator::<span class="hljs-keyword">operator</span>*() <span class="hljs-keyword">const</span> &#123;<br>    <span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span>&amp; message = curr_-&gt;message_;<br>    <span class="hljs-keyword">return</span> message;<br>&#125;<br><br><span class="hljs-function">CommitHistory::Iterator <span class="hljs-title">CommitHistory::begin</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> CommitHistory::Iterator(head_);<br>&#125;<br><br><span class="hljs-function">CommitHistory::Iterator <span class="hljs-title">CommitHistory::end</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> CommitHistory::Iterator(<span class="hljs-literal">nullptr</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>ËøôÈáåËø≠‰ª£Âô®‰∏ªË¶ÅÂÆûÁé∞‰∫Ü6‰∏™methodÔºåÂàÜÂà´ÊòØÔºö</p><ol><li>Constructor <code> CommitHistory::Iterator::Iterator(Commit *curr)</code></li><li>operator!=    <code>bool CommitHistory::Iterator::operator!=(const Iterator&amp; other) const</code></li><li>operator++   <code>CommitHistory::Iterator&amp; CommitHistory::Iterator::operator++()</code></li><li>dereference operator   <code>std::string&amp; CommitHistory::Iterator::operator*() const</code></li><li>begin()       <code>CommitHistory::Iterator CommitHistory::begin() </code></li><li>end()          <code>CommitHistory::Iterator CommitHistory::end()</code></li></ol><h1 id="Templating"><a class="header-anchor" href="#Templating">¬∂</a>Templating</h1><blockquote><p>You‚Äôre writing a general-purpose geometry library, but‚Ä¶ it‚Äôs not general enough! Use templating to add support for <code>float</code>s, <code>long</code>s, and other numeric types in the <code>Rectangle</code> class.</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> once</span><br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Rectangle</span> &#123;</span><br>  <span class="hljs-keyword">public</span>:<br>    Rectangle(T w, T h);<br>    <span class="hljs-function">T <span class="hljs-title">CalculateArea</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function">T <span class="hljs-title">CalculatePerimeter</span><span class="hljs-params">()</span></span>;<br><br>  <span class="hljs-keyword">private</span>:<br>    T w_;<br>    T h_;<br>&#125;;<br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br>Rectangle&lt;T&gt;::Rectangle(T w, T h) &#123;<br>    w_ = w;<br>    h_ = h;<br>&#125;<br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br>T Rectangle&lt;T&gt;::CalculateArea() &#123;<br>    <span class="hljs-keyword">return</span> w_ * h_;<br>&#125;<br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br>T Rectangle&lt;T&gt;::CalculatePerimeter() &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">2</span> * w_ + <span class="hljs-number">2</span> * h_;<br>&#125;<br></code></pre></td></tr></table></figure><p>Templating ÁöÑÈáçÁÇπÂú®‰∫éÔºöÂú®ÂÆûÁé∞ÊØè‰∏™method Êó∂ÂÄôÔºå‰∏ç‰ªÖ‰ªÖÈúÄË¶ÅÁî®‰∏ä<code>template</code>Ôºå ÂêåÊó∂ÈúÄË¶ÅÊîæÂÖ•ÂØπÂ∫îÁöÑsignatureÂΩì‰∏≠„ÄÇ</p><h1 id="The-Big-5"><a class="header-anchor" href="#The-Big-5">¬∂</a>The Big 5</h1><blockquote><p>You want to write a backend program to keep track of this season‚Äôs Big 10 basketball games, so you can display live scores on your website. In your opinion, the only thing more exciting than the Big 10 conference is the Big 5 resource management functions, so you decide to implement them for the <code>Team</code> class.</p><ol><li>Destructor</li><li>Copy Constructor</li><li>Copy Assignment Operator</li><li>Move Constructor</li><li>Move Assignment Operator</li></ol><p>For reference, the header file is included below:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> once</span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span><br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Team</span> &#123;</span><br>  <span class="hljs-keyword">public</span>:<br>    Team();<br><br>    ~Team();<br>    Team(<span class="hljs-keyword">const</span> Team &amp;other);<br>    Team&amp; <span class="hljs-keyword">operator</span>=(<span class="hljs-keyword">const</span> Team&amp; other);<br>    Team(Team&amp;&amp; other) <span class="hljs-keyword">noexcept</span>;<br>    Team&amp; <span class="hljs-keyword">operator</span>=(Team&amp;&amp; other) <span class="hljs-keyword">noexcept</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">EditLineup</span><span class="hljs-params">(<span class="hljs-keyword">size_t</span> idx, <span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span> player)</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ShootFreeThrow</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ShootTwo</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ShootThree</span><span class="hljs-params">()</span></span>;<br><br>    <span class="hljs-function"><span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span>* <span class="hljs-title">lineup</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">score</span><span class="hljs-params">()</span></span>;<br><br>  <span class="hljs-keyword">private</span>:<br>    <span class="hljs-keyword">size_t</span> kLineupSize = <span class="hljs-number">5</span>;<br><br>    <span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span> *lineup_;<br>    <span class="hljs-keyword">int</span> score_;<br>&#125;;<br></code></pre></td></tr></table></figure></blockquote><p><strong>Answer:</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;team.h&quot;</span></span><br><br>Team::Team() &#123;<br>    lineup_ = <span class="hljs-keyword">new</span> <span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span>[kLineupSize];<br>    score_ = <span class="hljs-number">0</span>;<br>&#125;<br><br>Team::~Team() &#123;<br>    <span class="hljs-keyword">delete</span>[] lineup_;<br>&#125;<br><br>Team::Team(<span class="hljs-keyword">const</span> Team&amp; other) : score_(other.score_) &#123;<br>    lineup_ = <span class="hljs-keyword">new</span> <span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span>[kLineupSize];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">size_t</span> i = <span class="hljs-number">0</span>; i &lt; kLineupSize; ++i )&#123;<br>         lineup_[i] = other.lineup_[i];<br>    &#125;<br>&#125;<br><br>Team&amp; Team::<span class="hljs-keyword">operator</span>=(<span class="hljs-keyword">const</span> Team&amp; other) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span> != &amp;other)&#123;<br>        <br>        <span class="hljs-keyword">delete</span>[] lineup_;<br>        score_ = other.score_;<br>        lineup_ = <span class="hljs-keyword">new</span> <span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span>[kLineupSize];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">size_t</span> i = <span class="hljs-number">0</span>; i &lt; kLineupSize; ++i )&#123;<br>             lineup_[i] = other.lineup_[i];<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-keyword">return</span> *<span class="hljs-keyword">this</span>;<br>&#125;<br><br>Team::Team(Team&amp;&amp; other) <span class="hljs-keyword">noexcept</span> &#123;<br>    score_ = other.score_;<br>    lineup_ = other.lineup_;<br>    <br>    other.score_ = <span class="hljs-number">0</span>;<br>    other.lineup_ = <span class="hljs-literal">nullptr</span>;<br>    <br>&#125;<br><br>Team&amp; Team::<span class="hljs-keyword">operator</span>=(Team&amp;&amp; other) <span class="hljs-keyword">noexcept</span> &#123;<br>    <br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span> != &amp;other)&#123;<br>        <span class="hljs-keyword">delete</span>[] lineup_;<br>    <br>        score_ = other.score_;<br>        lineup_ = other.lineup_;<br>        <br>        other.score_ = <span class="hljs-number">0</span>;<br>        other.lineup_ = <span class="hljs-literal">nullptr</span>;<br>    &#125;<br>    <br>    <span class="hljs-keyword">return</span> *<span class="hljs-keyword">this</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Team::EditLineup</span><span class="hljs-params">(<span class="hljs-keyword">size_t</span> idx, <span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span> player)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (idx &gt;= <span class="hljs-number">0</span> &amp;&amp; idx &lt; kLineupSize) &#123;<br>        lineup_[idx] = player;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Team::ShootFreeThrow</span><span class="hljs-params">()</span> </span>&#123;<br>    score_++;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Team::ShootTwo</span><span class="hljs-params">()</span> </span>&#123;<br>    score_ += <span class="hljs-number">2</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Team::ShootThree</span><span class="hljs-params">()</span> </span>&#123;<br>    score_ += <span class="hljs-number">3</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">std</span>::<span class="hljs-built_in">string</span>* <span class="hljs-title">Team::lineup</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> lineup_;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Team::score</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> score_;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Destructor"><a class="header-anchor" href="#Destructor">¬∂</a>Destructor</h2><p>ÂΩìdestruct objectÊó∂Ôºådestructor‰ºöË¢´invokeÔºåÂ¶ÇÊûúÊàë‰ª¨Áî®‰∫Ü‰ªª‰Ωïheap spaceÔºåÈÇ£‰πàÊàë‰ª¨ÂèØ‰ª•Âú®destructor‰∏≠Ë∞ÉÁî®<code>delete</code> Áî®Êù• free heap space</p><h2 id="Copy-Constructor"><a class="header-anchor" href="#Copy-Constructor">¬∂</a>Copy Constructor</h2><p>Â¶ÇÊûúÊàë‰ª¨ÈúÄË¶Ådeep copyÔºåÂèØ‰ª•Ëá™Â∑±ÂÆö‰πâcopy constructor (ÈªòËÆ§ÁöÑËØùÊòØshallow copy)„ÄÇ</p><h2 id="Copy-Assignment-Operator"><a class="header-anchor" href="#Copy-Assignment-Operator">¬∂</a>Copy Assignment Operator</h2><p>Âú®ÂØπÂ∑≤ÁªèÂàÜÈÖçÁ©∫Èó¥ÂêéÁöÑÂØπË±°‰∏äÂÅöassignmentÔºåÂíåCopy Constructor ÈùûÂ∏∏Á±ª‰ººÔºå‰ΩÜÊòØÈúÄË¶Åcheck self-assignment Âπ∂‰∏îdelete‰∏çÈúÄË¶ÅÁöÑheap space„ÄÇ</p><h2 id="Move-Constructor"><a class="header-anchor" href="#Move-Constructor">¬∂</a>Move Constructor</h2><p>Â¶ÇÊûúÊàë‰ª¨ÂàùÂßãÂåñÂØπË±°ÁöÑÂèÇÊï∞Âè™ÊòØrvalueÔºåÂç≥Âè™ÊòØ‰∏¥Êó∂ÁöÑÔºåÊàë‰ª¨‰∏çÈúÄË¶Åcopy‰∏ÄÈÅçÂÜçÂàùÂßãÂåñÔºåËÄåÊòØÁõ¥Êé•move„ÄÇËÆ∞ÂæóÊääÂéüÊù•ÂèÇÊï∞ÊåáÂêë<code>nullptr</code>.</p><h2 id="Move-Assignment-Operator"><a class="header-anchor" href="#Move-Assignment-Operator">¬∂</a>Move Assignment Operator</h2><p>Âú®Â∑≤ÂàÜÈÖçÁ©∫Èó¥ÂêéÁöÑÂØπË±°‰∏äÂÅömove assignmentÔºåÂíåmove constructorÁ±ª‰ºº„ÄÇ</p><p>ËøôÈáå‰∏ªË¶ÅËÆ∞ÂΩïÊØè‰∏ÄÁßçÂØπÂ∫îÁöÑÊ¶ÇÂøµpracticeÔºå‰æõÊú™Êù•ÂèÇËÄÉ„ÄÇÂØπ‰∫éÊ¶ÇÂøµÊàëËßâÂæóÂºÄÂßãÊé®ÁöÑÈÇ£‰∏™Ê≤πÁÆ°‰∏ªËÆ≤ÁöÑÈùûÂ∏∏Â•ΩÔºåÂ¶ÇÊûúÁúã‰∏çÊòéÁôΩËøôÈáåÁöÑ‰ª£Á†ÅÔºåÂº∫Êé®‰ªñÁöÑc++Á≥ªÂàóËßÜÈ¢ëÔºÅ</p>]]></content>
    
    
    <categories>
      
      <category>c++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>c++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>How to Write Good Tests?</title>
    <link href="/2022/01/20/how-to-write-good-tests/"/>
    <url>/2022/01/20/how-to-write-good-tests/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>The banner image shows a picture of a bridge called ÂçóÊ°• (Nan Qiao, literally means the South Bridge.) This bridge is located at Dujiangyan, which is a small city 50km away from Chengdu, Sichuan, China. Since I had my high-school in Dujiangyan, I have a lot of precious memories there. I miss the people, inexpensive but delicious food, the way of living, and the memory when I rode a bike to travel between Chengdu and Dujiangyan with my best friends (around 100 km in total.)</p></blockquote><p>Recently I am reading a book called <a href="https://www.amazon.com/Art-Readable-Code-Practical-Techniques-ebook/dp/B0064CZ1XE">The Art of Readable Code</a> by Dustin Boswell. This is a textbook for a code-review class that I am taking. I think it is a good idea to share about some contents with you so that 1) I can deepen my understanding, 2) You can learn something from here!</p><h1 id="Chapter-14-Testing-and-Readability"><a class="header-anchor" href="#Chapter-14-Testing-and-Readability">¬∂</a>Chapter 14: Testing and Readability</h1><blockquote><p>KEY IDEA: Test code should be readable so that other coders are comfortable changing or adding tests.</p></blockquote><ol><li><p><strong>Test should be more readable</strong></p><ul><li>When writing a test, we should hide less important details.</li></ul></li><li><p><strong>Minimize the test statement</strong></p><ul><li>We should make the input/ expectation of a test <strong>clear</strong> so that it is very easy to add more tests.</li></ul></li><li><p><strong>Helper function</strong></p><ul><li>By extract some unimportant logics into a separate function, we can focus on the main implementation of the test itself.</li></ul></li><li><p><strong>Make error message readable</strong></p><ul><li><p>Utilize better assert in the language <code>assertEqual</code> in python, for example.</p></li><li><p>Create custom error message like:</p></li></ul></li></ol><figure class="highlight sas"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs sas">CheckScoresBeforeAfter() failed,<br><span class="hljs-meta">Input</span>: <span class="hljs-string">&quot;-5, 1, 4, -99998.7, 3&quot;</span><br>Expected <span class="hljs-meta">Output</span>: <span class="hljs-string">&quot;4, 3, 1&quot;</span><br>Actual <span class="hljs-meta">Output</span>: <span class="hljs-string">&quot;1, 3, 4&quot;</span><br></code></pre></td></tr></table></figure><ol start="5"><li><strong>Choose good input</strong></li></ol><blockquote><p>In general, you should pick the simplest set of inputs that completely exercise the code.</p></blockquote><ol start="6"><li><p><strong>Simplifying the Input Values</strong></p><ul><li>The simple test that achieves the purpose is the best!</li></ul></li><li><p><strong>Multiple tests</strong></p><ul><li>multiple tests for multiple purposes with clear input/expectation</li></ul></li><li><p><strong>Naming</strong></p><ul><li><p>Name the test as the description.</p></li><li><p><code> Test__&lt;FunctionName&gt;_&lt;Situation&gt;()</code></p></li></ul></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">void</span> <span class="hljs-function"><span class="hljs-title">Test_SortAndFilterDocs_BasicSorting</span>(<span class="hljs-params"></span>)</span> &#123;<br>...<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>For helper function, we can name it differently as ‚Äútest-unware‚Äù.</li></ul><blockquote><p>If you write your code knowing you‚Äôll be writing a test for it later, a funny thing happens: you start designing your code so that it‚Äôs easy to test! Fortunately, coding this way also means that you create better code in general. Test-friendly designs often lead naturally to wellorganized code, with separate parts to do separate things.</p></blockquote><div class="note note-success">            <p>‚ÄãI hope this helps, but I strongly recommend you to read this book because it contains a lot of examples of good/bad practices. It is concise and very helpful for me and you who want to be a professional programmer!</p>          </div><p>2022/1/21</p><h1 id="Some-add-on"><a class="header-anchor" href="#Some-add-on">¬∂</a>Some add-on</h1><p>Programs have to be written with two goals in mind:</p><ul><li>Communicating with computer</li><li>Communicating with people</li></ul><h1 id="Three-themes"><a class="header-anchor" href="#Three-themes">¬∂</a>Three themes:</h1><ol><li><strong>Safe from bugs</strong>:</li></ol><ul><li>Correctness</li><li>Defensiveness: correctness in future</li></ul><ol start="2"><li><strong>Easy to understand</strong>:<ul><li>communicate with future programmers</li><li>good design helps future you/maintainers</li></ul></li><li><strong>Ready to change</strong></li></ol><h1 id="Software-Engineering-is-not-Hacking"><a class="header-anchor" href="#Software-Engineering-is-not-Hacking">¬∂</a>Software Engineering is not Hacking</h1><p>Engineers are pessimists, so:</p><ol><li>write a little bit at a time, testing as you go.</li><li>document the assumptions that code depends on</li><li>defend code against carelessness.</li></ol><h1 id="Git-Commit-Message"><a class="header-anchor" href="#Git-Commit-Message">¬∂</a>Git Commit Message</h1><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201211709003.png" alt="image-20220121170914865"></p><p>We can use a concise and helpful commit message format such as :</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-params">&lt;type&gt;</span>: <span class="hljs-params">&lt;Message&gt;</span><br><span class="hljs-symbol">feat:</span> blablabla<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>general</category>
      
    </categories>
    
    
    <tags>
      
      <tag>test</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Microservice-Auth Service (3)</title>
    <link href="/2022/01/15/microservice-3/"/>
    <url>/2022/01/15/microservice-3/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Microservice-3"><a class="header-anchor" href="#Microservice-3">¬∂</a>Microservice (3)</h1><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201151709190.png" alt="Untitled"></p><ul><li>Setup tsconfig with <code>tsc ‚Äîinit</code></li><li><code>index.ts</code></li><li><code>Dockerfile</code> <code>Dockerignore</code></li><li><code>auth-depl.yaml</code></li><li><code>ingress-srv.yaml</code></li><li><code>skaffold.yml</code> <code>skaffold dev</code></li></ul><p>As we are using microservice architecture, we need to standardize the way of transmitting errors to clients.</p><p>We can create a specific error handler (with four params) to handle all errors!</p><figure class="highlight plain"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><pre><code class="hljs tsx">import &#123; ValidationError &#125; from &quot;express-validator&quot;;<br><br>export class RequestValidationError extends Error &#123;<br>  constructor(public errors: ValidationError[]) &#123;<br>      super();<br>      <br><br>      &#x2F;&#x2F;Only because we are extending a built in class<br>      Object.setPrototypeOf(this, RequestValidationError.prototype);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201151711817.png" alt="Untitled"></p><p>We can use abstract class that force the custom error class to implement several functionalities</p><div class="note note-warning">            <p>Check the code base for details</p>          </div><h2 id="MongoDB"><a class="header-anchor" href="#MongoDB">¬∂</a>MongoDB</h2><p>We will create <strong>One MongoDB for one service</strong></p><div class="note note-warning">            <p>ËøôÈáåÂíåmicroserviceÊ≤°Â§™Â§ßÂÖ≥Á≥ªÔºå ÂÖ∑‰ΩìÁúã‰ª£Á†Å</p>          </div><p>Ê≥®ÊÑèÔºåÊàë‰ª¨ÈúÄË¶ÅÁî®</p><p><code>import &quot;express-async-errors&quot;;</code> ‰∏çÁÑ∂Âú®expressÈáåÁöÑ <code>async</code>  ÂáΩÊï∞Êó†Ê≥ï<code>throw</code> errorÔºÅ</p><h2 id="Authentication"><a class="header-anchor" href="#Authentication">¬∂</a>Authentication</h2><p>How to authenticate can be a difficult problem in Microservices</p><ol><li><p>Sync request (No Event Bus) with a centralized auth service:</p><p><strong>BAD:</strong></p><ol><li><strong>coupling</strong></li><li><strong>single break point of the whole system</strong></li></ol></li><li><p>Each service have its own JWT/Cookie to check</p><p><strong>BAD:</strong></p><ol><li><strong>Hard to implement</strong></li><li>cannot instantly reflect the current status of a user in all services as user has 100% control of the token!</li></ol></li></ol><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201151711514.png" alt="Untitled"></p><p>Right now ,our strategy is as follow:</p><ol><li>user login through auth service, issued with a 15 mins of token</li><li>if a admin user sends a request to ban a user, a <code>UserBanned</code> event is emitted to Event Bus</li><li>all services will be listening to this event, and store the banned user into its own <code>redis</code> cache for 15 mins</li><li>If a user reached a service, service can know if it is allowed through <code>redis</code> !</li></ol><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201151711808.png" alt="Untitled"></p><h2 id="JWT-Cookie"><a class="header-anchor" href="#JWT-Cookie">¬∂</a>JWT/Cookie</h2><p>Cookie is sent through <code>Set-Cookie</code> and managed by the browser. Server side can normally be guaranteed requests will have to the access of the settled cookie</p><p>JWT is handled by client code but not the browser. JWT token is sent through <code>header</code> every time of the request.</p><p>Cookie‚Äôs expiration date can be ignored as it is handled by the browser.</p><p>JWT is a more common and easy to handle technique as it is understood by other languages easily.</p><div class="note note-warning">            <p>One important advantage to use microservice is that services can be implemented by different languages!</p>          </div><p>Because of server side rendering, the first time a user request to a URL cannot attach any authentication information as normal SPA can do. Therefore, we must store the JWT in cookie! JWT itself is not secret. However, we can use Signing key to check if a JWT is verified or not.</p><p>We need <code>cookie-session</code> to store session data in cookie! , JWT is naturally temper-resistant,</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201151711782.png" alt="Untitled"></p><div class="note note-warning">            <p>ÊâçÂèëÁé∞Ôºå<code>_id</code> ‰ºöË¢´ mongodb Ëá™Âä®ËΩ¨Âåñ‰∏∫ property <code>id</code>of string type</p>          </div><h2 id="Secrete-in-k8s"><a class="header-anchor" href="#Secrete-in-k8s">¬∂</a>Secrete in k8s</h2><p>Secret object can be created and share through pods</p><p>Secret object can then be treated as <code>env variable</code> for all pods.</p><p>Imperative approach to create a secret object!</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">kubectl</span> <span class="hljs-string">create</span> <span class="hljs-string">secret</span> <span class="hljs-string">generic</span> <span class="hljs-string">jwt-secret</span> <span class="hljs-string">--from-literal=JWT_KEY=asdf</span><br></code></pre></td></tr></table></figure><p>We then can put the secret into the container through the <code>Deployment</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">containers:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">auth</span><br>          <span class="hljs-attr">image:</span> <span class="hljs-string">hughqing/auth</span><br>          <span class="hljs-attr">env:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">JWT_KEY</span><br>              <span class="hljs-attr">valueFROM:</span><br>                <span class="hljs-attr">secretKeyRef:</span><br>                  <span class="hljs-attr">name:</span> <span class="hljs-string">jwt-secret</span> <span class="hljs-comment"># the name of the secret</span><br>                  <span class="hljs-attr">key:</span> <span class="hljs-string">JWT_KEY</span><br></code></pre></td></tr></table></figure><h2 id="id"><a class="header-anchor" href="#id">¬∂</a>_id</h2><p><code>JSON.stringify()</code> can be overwritten by <code>toJSON()</code> function in the object</p><h1 id="Testing"><a class="header-anchor" href="#Testing">¬∂</a>Testing</h1><p>Main quesstion: What‚Äôs the scope of our tests?</p><ul><li>Single middleware ‚Üí Unit test</li><li>Single pipe</li><li>The whole service</li><li>different services?</li></ul><p>Ê≤°ÂÜôËøôÔºåÂ¶ÇÊûúË¶ÅÁî®Áõ¥Êé•ÁúãËßÜÈ¢ëÂêß</p><p>We need to split the logic of <code>Express App</code> and <code>Start Up</code> into two files</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201151711194.png" alt="Untitled"></p><p>See code for details please!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tsx">it(&quot;returns a 400 with missing email or password&quot;, async () &#x3D;&gt; &#123;<br>  await request(app)<br>    .post(&quot;&#x2F;api&#x2F;users&#x2F;signup&quot;)<br>    .send(&#123;<br>      password: &quot;testple@ad.com&quot;,<br>    &#125;)<br>    .expect(400);<br><br>  return request(app)<br>    .post(&quot;&#x2F;api&#x2F;users&#x2F;signup&quot;)<br>    .send(&#123;<br>      email: &quot;testple@ad.com&quot;,<br>    &#125;)<br>    .expect(400);<br>&#125;);<br></code></pre></td></tr></table></figure><div class="note note-success">            <p>ÊÄªÁªì‰ª•‰∏ãÊú¨Â∞èÁªìÔºö</p><ul><li><p>One MongoDB for each service!</p></li><li><p><code>import &quot;express-async-errors&quot;;</code> ‰∏çÁÑ∂Âú®expressÈáåÁöÑ <code>async</code>  ÂáΩÊï∞Êó†Ê≥ï<code>throw</code> errorÔºÅ</p></li><li><p>Authentication can be difficult:</p><ul><li>Sync request (No Event Bus) with a centralized auth service:<ul><li><strong>coupling</strong></li><li><strong>single break point of the whole system</strong></li></ul></li><li>Each service have its own JWT/Cookie to check<ul><li><strong>Hard to implement</strong></li><li>cannot instantly reflect the current status of a user in all services as user has 100% control of the token</li></ul></li></ul></li><li><p>Our stategy:</p><p>Right now ,our strategy is as follow:</p><ol><li>user login through auth service, issued with a 15 mins of token</li><li>if a admin user sends a request to ban a user, a <code>UserBanned</code> event is emitted to Event Bus</li><li>all services will be listening to this event, and store the banned user into its own <code>redis</code> cache for 15 mins</li><li>If a user reached a service, service can know if it is allowed through <code>redis</code> !</li></ol></li><li><p><code>JSON.stringify()</code> can be overwritten by <code>toJSON()</code> function in the object</p></li><li><p>ÊâçÂèëÁé∞Ôºå<code>_id</code> ‰ºöË¢´ mongodb Ëá™Âä®ËΩ¨Âåñ‰∏∫ property <code>id</code>of string type</p></li><li><p>Test Áúã‰ª£Á†Å</p></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>backend</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>react</tag>
      
      <tag>microservice</tag>
      
      <tag>node.js</tag>
      
      <tag>express.js</tag>
      
      <tag>k8s</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Microservice - Deploy with K8s (2)</title>
    <link href="/2022/01/13/microservice-kube/"/>
    <url>/2022/01/13/microservice-kube/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>MicroService Deployment with Docker + Kubernetes + Skaffold</p><p>This one is pretty long but very helpful to understand what is going on with Kubernetes and how different pods get connected with each other!</p><span id="more"></span><blockquote><p>The banner image is Dao Cheng (Á®ªÂüé), which is a famous natural reserve in Sichuan province. I have never been there but always heard it. I have to say that Sichuan province is gifted as it has so many natural sceneries that cannot be missed. Really wish to visit there after I back there! btw, really missing Sichuan hometown food~~</p></blockquote><h1 id="Microservice-Deployment"><a class="header-anchor" href="#Microservice-Deployment">¬∂</a>Microservice - Deployment</h1><h1 id="Kubernetes-Docker"><a class="header-anchor" href="#Kubernetes-Docker">¬∂</a>Kubernetes + Docker</h1><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201131950966.png" alt="Untitled"></p><p>We will have a common message channel that routes events to each node separately!</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201131956685.png" alt="Untitled"></p><blockquote><p>Windows:</p><p><code>minikube start --vm=true</code></p><p><code>minikube start --driver=hyperv</code></p><p><code>minikube start --driver=virtualbox</code></p></blockquote><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201131956865.png" alt="Untitled"></p><p>Service is a general API that handle access to a running container</p><figure class="highlight yaml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Pod</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">posts</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">containers:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">posts</span><br>      <span class="hljs-attr">image:</span> <span class="hljs-string">hughqing/posts:0.0.1</span><br></code></pre></td></tr></table></figure><p><code>kubectl apply -f posts.yaml</code></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201131956796.png" alt="Untitled"></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201131956092.png" alt="Untitled"></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201131956210.png" alt="Untitled"></p><h2 id="Deployment"><a class="header-anchor" href="#Deployment">¬∂</a>Deployment</h2><p>Deployment controls a set of same-type pods for updating, re-creating new pods‚Ä¶etc</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">kubectl</span> <span class="hljs-string">delete</span> <span class="hljs-string">deployment</span> <span class="hljs-string">&lt;name&gt;</span><br><span class="hljs-string">kubectl</span> <span class="hljs-string">apply</span> <span class="hljs-string">-f</span> <span class="hljs-string">deployment</span> <span class="hljs-string">./posts-depl.yaml</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">posts-depl</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app:</span> <span class="hljs-string">posts</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">posts</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">containers:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">posts</span><br>          <span class="hljs-attr">image:</span> <span class="hljs-string">hughqing/posts:0.0.1</span><br></code></pre></td></tr></table></figure><h1 id="Update-Make-Change-to-Deployment"><a class="header-anchor" href="#Update-Make-Change-to-Deployment">¬∂</a>Update - Make Change to Deployment</h1><p>use <code>latest</code> in <code>posts-depl.yaml</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsx">kubectl rollout restart deployment [depl_name]<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201131956115.png" alt="Untitled"></p><h1 id="Service"><a class="header-anchor" href="#Service">¬∂</a>Service</h1><p>Between each pod, Service is used to communicate between each other</p><p>Service is used as a general API of the pods.</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201131956165.png" alt="Untitled"></p><ul><li>Within each pod, we use Cluster IP</li><li>In the Dev stage, we can use the port to connect with the web browser</li><li>In the Prod stage, Load Balancer is used</li></ul><p>For now, we use Node Port for fun</p><p><img src="C:/Users/q8151/Desktop/Microservice%20-%20Deployment%2014accbc294f842c7990a4c25b9347f6e/Untitled%208.png" alt="Untitled"></p><p><code>nodePort</code> is a randomly assigned port to access the service outside of the <code>Node</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx">kubectl apply -f posts-srv.yaml<br>kubectl get services<br></code></pre></td></tr></table></figure><p>One type of pod will get one service</p><p>To communicate from Event-Bus to another pod, we are basically communicating from  <code>posts-clusterip-srv</code> and <code>event-bus-srv</code></p><p>Here a <code>cluster</code> is a set of same-type <code>service</code></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201131956075.png" alt="Untitled"></p><h3 id="A-general-procedure-of-creating-a-deployment-service"><a class="header-anchor" href="#A-general-procedure-of-creating-a-deployment-service">¬∂</a>A general procedure of creating a deployment+service</h3><ol><li>Build an image for the Service ( event bus, in this step)</li><li>Push the image to Docker Hub</li><li>Create a deployment for Event Bus</li><li>Create a cluster IP service for event bus and posts</li><li>Wire them up</li></ol><p>We can write <code>deployment config</code> and <code>service config</code> in one config file</p><p>I <code>type: ClusterIP</code> in <code>spec</code> will be the default</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">event-bus-depl</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app:</span> <span class="hljs-string">event-bus</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">event-bus</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">containers:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">event-bus</span> <br>          <span class="hljs-attr">image:</span> <span class="hljs-string">hughqing/event-bus</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">event-bus-srv</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">ClusterIP</span>  <span class="hljs-comment">#defualt</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">event-bus</span><br>  <span class="hljs-attr">ports:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">event-bus</span><br>      <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span><br>      <span class="hljs-attr">port:</span> <span class="hljs-number">4005</span><br>      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">4005</span><br></code></pre></td></tr></table></figure><p>‚Äã</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201131956820.png" alt="Untitled"></p><p>Once <code>ClusterIp</code> service is setted up, it can directly communicate within cluster with</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">http://&lt;service_name&gt;:&lt;port&gt;</span><br></code></pre></td></tr></table></figure><p>This finishes our last step of wiring up.</p><p>We then do the similar steps from</p><ul><li>Build container image</li><li>Push</li><li>Create deployment file</li><li><code>kubectl apply -f .</code></li><li>wire them in <code>event-bus</code></li><li><code>kubectl rollout restart deployment &lt;name&gt;</code> if need</li></ul><h1 id="Load-Balancer-Nginx-Ingress"><a class="header-anchor" href="#Load-Balancer-Nginx-Ingress">¬∂</a>Load Balancer - Nginx/ Ingress</h1><p><strong>Load Balancer Service:</strong> A config file for a LoadBalancer Service is to let Cloud platform provision a Load Balancer outside of a cluster so that traffic can be routed into cluster.</p><p><strong>Ingress:</strong> A pod with a set of routing rules to distribute traffic to other services</p><p><a href="https://kubernetes.github.io/ingress-nginx/deploy/#quick-start">https://kubernetes.github.io/ingress-nginx/deploy/#quick-start</a></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201131956175.png" alt="Untitled"></p><blockquote><p>Nginx ingress controller uses LoadBalancer type service actually as entrypoint to the cluster. Then is checks ingress rules and distributes the load.</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ingress-srv.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">networking.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Ingress</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">ingress-srv</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">kubernetes.io/ingress.class:</span> <span class="hljs-string">nginx</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">rules:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">host:</span> <span class="hljs-string">posts.com</span><br>      <span class="hljs-attr">http:</span><br>        <span class="hljs-attr">paths:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-attr">path:</span> <span class="hljs-string">/posts</span><br>            <span class="hljs-attr">pathType:</span> <span class="hljs-string">Prefix</span><br>            <span class="hljs-attr">backend:</span><br>              <span class="hljs-attr">service:</span><br>                <span class="hljs-attr">name:</span> <span class="hljs-string">posts-clusterip-srv</span>      <span class="hljs-comment"># service name</span><br>                <span class="hljs-attr">port:</span><br>                  <span class="hljs-attr">number:</span> <span class="hljs-number">4000</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201131956085.png" alt="Untitled"></p><h1 id="Skaffold"><a class="header-anchor" href="#Skaffold">¬∂</a>Skaffold</h1><p>As the process of deploying app so annoying, we can use this tool to expedite our development.</p><p>ËøôÈáåÂÖ∑‰ΩìÁúã‰ª£Á†Å</p><div class="note note-success">            <p>Áªà‰∫éÊêûÂÆåËøô‰∏™‰∫ÜÔºåÂ≠¶Âà∞‰∫ÜÂá†ÁÇπÔºö</p><ol><li>The way of interactions between micro-services is by HTTP requests (or we can use gRPC in future.</li><li>Each service will send event to <code>Event Bus</code> , which is pretty similar to how REDUX works.</li><li>Each service will have a event listener as well.</li><li>Each service will need <code>Deployment</code> , <code>ClusterIP Service</code> to communicate within a cluster.</li><li>A <code>ingress-nginx</code> pod is created to match different routes to specific ports based on route rules. (through nginx)</li><li>A <code>LoadBalancer type</code> Service is automatically initialized with <code>ingress-nginx</code>. It is solely responsible to communicate with <code>ingress-nginx</code> pod.</li><li>Skaffold is able to detech changes made inside  source files by connecting <code>depl.yml, Dockerfile, skaffold.yml</code>Note that we need to use <code>nodemon, star:dev</code> to allow for hot reload.</li></ol>          </div>]]></content>
    
    
    <categories>
      
      <category>backend</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>react</tag>
      
      <tag>microservice</tag>
      
      <tag>node.js</tag>
      
      <tag>express.js</tag>
      
      <tag>k8s</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Microservice Basic - Blog (1)</title>
    <link href="/2022/01/12/microservice-basic/"/>
    <url>/2022/01/12/microservice-basic/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>MicroService Basic + Blog Example</p><p>Quite interested at learning new things‚Ä¶ Thus, why not start learning Microservice from now?</p><span id="more"></span><blockquote><p>The banner image shows a traditional snack ÂÜ∞Á≤â (bing fen) that I used to have almost every day in my home city. It has both a sour and sweet taste with ice underneath. Different vendors have their different recipes with what items you can put into, but they all share items such as watermelon, bing fen (the transparent, jellyfish-like thing.)<br>My memory about bingfen always comes with the mid-summer where there is no better dessert compared to a bowl of bingfen that can cool me down. In fact, it is not hard to make bingfen at home. Even here in the states, I found there is bingfen powder in Asian supermarkets that allows you to directly make it in your kitchen. Interestingly, the origin of bingfen is seeds of the shoo-fly plant, which is also called the apple of Peru originated from South America.</p></blockquote><h1 id="Microservice-Basic"><a class="header-anchor" href="#Microservice-Basic">¬∂</a>Microservice Basic</h1><h1 id="Basics-Post-Example"><a class="header-anchor" href="#Basics-Post-Example">¬∂</a>Basics + Post Example</h1><p>What is microservice</p><h3 id="Monolithic-Server"><a class="header-anchor" href="#Monolithic-Server">¬∂</a>Monolithic Server</h3><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201121208549.png" alt="Untitled"></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201121207335.png" alt="Untitled"></p><h3 id="Microservice"><a class="header-anchor" href="#Microservice">¬∂</a>Microservice</h3><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201121208702.png" alt="Untitled"></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201121208903.png" alt="Untitled"></p><p><strong>Each service is self-contained!</strong></p><p>In summary: A single microservice contains all</p><ul><li>Routing</li><li>Middlewares</li><li>Business Logic</li><li>Database access</li></ul><p>to implement one feature of our app</p><h3 id="Data-Management-Problem"><a class="header-anchor" href="#Data-Management-Problem">¬∂</a>Data Management Problem</h3><p>Microservice has a problem of <strong>data management between services</strong></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201121208380.png" alt="Untitled"></p><p>Note:</p><ol><li>Each service has its own database (<strong>database per service)</strong></li><li>Service will <strong>never</strong> reach into another service‚Äôs database<ol><li><strong>good scale capability</strong></li><li><strong>low coupling (less dependency, more reliability, no single point of failure)</strong></li><li>optimize by choosing the best-fitted database</li></ol></li></ol><blockquote><p>In monolithic design, adding new service is easy as it only access to a single DB</p></blockquote><p>In microservice, it is really hard!</p><blockquote></blockquote><h2 id="General-strategy-to-solve-data-communication-problem"><a class="header-anchor" href="#General-strategy-to-solve-data-communication-problem">¬∂</a>General strategy to solve data communication problem</h2><ul><li>Sync<ul><li>direct requests between services</li><li><strong>drawback</strong>:<ul><li>dependency between services, forming <strong>net of dependency</strong></li><li>single point of failure!</li><li>slowest request is determinant</li></ul></li></ul></li><li>Async<ul><li>events driven<ul><li>all services wire to Event Bus, let Event Bus handle what should each service do in response to event</li><li><strong>drawback:</strong><ul><li>almost same as Sync service</li></ul></li></ul></li><li>let the additional service has its own database<ul><li>other service can emit events to event bus so that other can listen to it and update DB accordingly.</li><li><strong>Good:</strong><ul><li>No dependency</li><li>Extremely fast</li></ul></li><li>Drawback:<ul><li>data duplication (extra storage, however, is relatively free nowadays)</li><li>hard to understand</li></ul></li></ul></li></ul></li></ul><div class="note note-info">            <p>Êé•‰∫Ü‰∏Ä‰∏™ ‰∏âÂ∞èÊó∂Â§öÁöÑ hands-on app <code>blog</code> ü•≤ Â•ΩÈïø</p><p><a href="https://github.com/q815101630/microservice-simple-blog">https://github.com/q815101630/microservice-simple-blog</a></p>          </div><h2 id="Async-Event-Driven-Fetch-Posts-Comments"><a class="header-anchor" href="#Async-Event-Driven-Fetch-Posts-Comments">¬∂</a>Async Event Driven Fetch Posts+Comments</h2><p>We see that to achieve the purpose of GET+POST, we need to do multiple requests to the same route, which is not efficient at all.</p><p>We can introduce a Query Service that assembles all of the blogs + comments into an efficient data structure.</p><p>When other services emit the event, Query service receives and does thing regarding it</p><p>‚Üí Send event</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201121208332.png" alt="Untitled"></p><p>‚Üí Create a post (in query service)</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201121208648.png" alt="Untitled"></p><p>‚Üí Send event</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201121208008.png" alt="Untitled"></p><p>‚Üí Create comments (in query service)</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201121208876.png" alt="Untitled"></p><p>This type of solution</p><ul><li>Good: has no dependency</li><li>Good: query service is very fast</li><li>Bad: duplicate data</li><li>Bad: hard to hard</li></ul><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201121208916.png" alt="Untitled"></p><h1 id="Event-Bus"><a class="header-anchor" href="#Event-Bus">¬∂</a>Event Bus</h1><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201121208063.png" alt="Untitled"></p><p>Event bus did what events should be emit to other services</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201121208969.png" alt="Untitled"></p><h2 id="Comment-Moderation"><a class="header-anchor" href="#Comment-Moderation">¬∂</a>Comment Moderation</h2><p>In a comment moderation service, the best approach is to let moderation handled by the comment service and emits a generic event <code>CommentUpdated</code> . We do not want too many types that require each service to handle!</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201121208298.png" alt="Untitled"></p><p>Therefore, the overall data flows like:</p><ol><li>User submit comments</li><li>Event <code>CommentCreated</code> event to Event Bus</li><li>Moderation and Query service received this event</li><li>Moderation Emit <code>CommentModerated</code> with a updated event</li><li>Comments service received the event and change status to <code>Approved</code></li><li>Emit <code>CommentUpdated</code> event to Event Bus</li><li>Query Service update the comments based on event</li></ol><h2 id="Exceptions"><a class="header-anchor" href="#Exceptions">¬∂</a>Exceptions</h2><p>If one of the service is lost, how do we handle it?</p><ol><li><strong>Sync Requests,</strong> fetching posts/comments from query service at all time and sync with its local DB</li><li><strong>Direct DB Access,</strong> sync service‚Äôs local database with each other once a event is emitted.</li><li><strong>Store Event</strong>, Store events in a Event Bus Data Store.</li></ol><p>See the third approach in the example code base!</p><div class="note note-success">            <p>Thank you for reading along this article</p>          </div><h2 id="Ref"><a class="header-anchor" href="#Ref">¬∂</a>Ref</h2><p><a href="https://github.com/q815101630/microservice-simple-blog">https://github.com/q815101630/microservice-simple-blog</a></p>]]></content>
    
    
    <categories>
      
      <category>backend</category>
      
    </categories>
    
    
    <tags>
      
      <tag>react</tag>
      
      <tag>microservice</tag>
      
      <tag>node.js</tag>
      
      <tag>express.js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ÂæÆ‰ø°ÈÄöÁü•TwikooÊñ∞Ê∂àÊÅØÊèêÈÜíÔºàVercelÁâàÊú¨Ôºâ</title>
    <link href="/2022/01/09/wechat-message-vercel/"/>
    <url>/2022/01/09/wechat-message-vercel/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Âú®ÊåâÁÖß‰∏äÈù¢ÊñáÁ´†ÂÆûÁé∞ÂæÆ‰ø°ÈÄöÁü•twikooÊñ∞Ê∂àÊÅØÊèêÈÜíÊó∂ÔºåÂõ†‰∏∫ÊàëÊòØÂà©Áî®VercelÈÉ®ÁΩ≤ÁöÑTwikooÔºåÂèëÁé∞ÂíåÊïôÁ®ãÊúâ‰∏Ä‰∫õÂá∫ÂÖ•ÔºåÁâπÊ≠§ÂÜô‰∏Ä‰∏ãÂ¶Ç‰ΩïÁî®Vercel ÂàõÂª∫‰∫ëÂáΩÊï∞„ÄÇ</p><div class="note note-info">            <p>Êú¨ÊïôÁ®ãÂü∫‰∫éhttps://guole.fun/posts/626/</p>          </div><h2 id="ÂàõÂª∫Vercel-‰∫ëÂáΩÊï∞"><a class="header-anchor" href="#ÂàõÂª∫Vercel-‰∫ëÂáΩÊï∞">¬∂</a>ÂàõÂª∫Vercel ‰∫ëÂáΩÊï∞</h2><p>‰πãÂâçÂàõÂª∫‰ºÅ‰∏öÂæÆ‰ø°ÁöÑÊ≠•È™§Ë∑ü‰∏äÈù¢ÊñáÁ´†Ëµ∞Â∞±Ë°å„ÄÇÂú®ÂàõÂª∫API‰∫ëÂáΩÊï∞Êó∂ÂÄôÔºåÈ¶ñÂÖàÊâæÂà∞‰Ω†ÈÉ®ÁΩ≤twikooÂà∞Vercel ÁöÑÊñá‰ª∂Â§πÔºàÂ¶ÇÊûúËøòÊ≤°ÊúâcloneÂà∞Êú¨Âú∞ËøáÂ∞±ÂÖàclone‰∏ÄÈÅç„ÄÇÔºâ</p><p>ËøõÂÖ•Â∫îÁî®Êñá‰ª∂Â§π„ÄÇÂú®Ê≠§Êñá‰ª∂Â§π‰∏ã <code>pipenv install requests</code> (Â¶ÇÊûúËøòÊ≤°‰∏ãËΩΩËøápipenv ÁöÑÂÖà‰∏ãËΩΩpipenv)</p><p>ËøõÂÖ•<code>/api</code> Êñá‰ª∂Â§πÔºåÂàõÂª∫‰∏Ä‰∏™Âêç‰∏∫<code>python.py</code> ÁöÑÊñá‰ª∂Âπ∂Ë¥¥ÂÖ•‰ª•‰∏ã‰ª£Á†Å</p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> http.server <span class="hljs-keyword">import</span> BaseHTTPRequestHandler<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> parse_qs<br><span class="hljs-comment"># -*- coding: utf8 -*-</span><br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">handler</span>(<span class="hljs-params">BaseHTTPRequestHandler</span>):</span><br>    <br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">do_GET</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getTocken</span>(<span class="hljs-params"><span class="hljs-built_in">id</span>, secert, msg, agentId</span>):</span><br>            url = <span class="hljs-string">&quot;https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=&quot;</span> + \<br>                <span class="hljs-built_in">id</span> + <span class="hljs-string">&quot;&amp;corpsecret=&quot;</span> + secert<br><br>            r = requests.get(url)<br>            tocken_json = json.loads(r.text)<br>            <span class="hljs-comment"># print(tocken_json[&#x27;access_token&#x27;])</span><br>            sendText(tocken=tocken_json[<span class="hljs-string">&#x27;access_token&#x27;</span>], agentId=agentId, msg=msg)<br><br>        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sendText</span>(<span class="hljs-params">tocken, agentId, msg</span>):</span><br>            sendUrl = <span class="hljs-string">&quot;https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=&quot;</span> + tocken<br>            <span class="hljs-comment"># print(sendUrl)</span><br>            data = json.dumps(&#123;<br>                <span class="hljs-string">&quot;safe&quot;</span>: <span class="hljs-number">0</span>,<br>                <span class="hljs-string">&quot;touser&quot;</span>: <span class="hljs-string">&quot;@all&quot;</span>,<br>                <span class="hljs-string">&quot;msgtype&quot;</span>: <span class="hljs-string">&quot;text&quot;</span>,<br>                <span class="hljs-string">&quot;agentid&quot;</span>: agentId,<br>                <span class="hljs-string">&quot;text&quot;</span>: &#123;<br>                    <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-built_in">str</span>(msg)<br>                &#125;<br>            &#125;)<br>            requests.post(sendUrl, data)<br>            <br>        <span class="hljs-keyword">try</span>:<br>            params = parse_qs(self.path[<span class="hljs-number">12</span>:])<br>            apiid = params[<span class="hljs-string">&#x27;id&#x27;</span>][<span class="hljs-number">0</span>]<br>            apisecert = params[<span class="hljs-string">&#x27;secert&#x27;</span>][<span class="hljs-number">0</span>]<br>            apiagentId = params[<span class="hljs-string">&#x27;agentId&#x27;</span>][<span class="hljs-number">0</span>]<br>            apimsg = params[<span class="hljs-string">&#x27;msg&#x27;</span>][<span class="hljs-number">0</span>]<br>        <span class="hljs-keyword">except</span>:<br>            apimsg = self.path<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-comment">#try:</span><br>            <span class="hljs-comment"># ÊâßË°å‰∏ªÁ®ãÂ∫è</span><br>            getTocken(<span class="hljs-built_in">id</span>=apiid, secert=apisecert,<br>                        msg=apimsg, agentId=apiagentId)<br>            <span class="hljs-comment">#except:</span><br>            <span class="hljs-comment">#    status = 1</span><br>            <span class="hljs-comment">#    apimsg = &#x27;‰∏ªÁ®ãÂ∫èËøêË°åÊó∂Âá∫Áé∞ÈîôËØØÔºåËØ∑Ê£ÄÊü•ÂèÇÊï∞ÊòØÂê¶Â°´ÂÜôÊ≠£Á°Æ„ÄÇËØ¶ÊÉÖÂèØ‰ª•ÂèÇÈòÖÔºöhttps://blog.zhheo.com/p/1e9f35bc.html&#x27;</span><br>            <span class="hljs-comment">#else:</span><br>            <span class="hljs-comment">#    status = 0</span><br>        <span class="hljs-comment"># print(event)</span><br>        <span class="hljs-comment"># print(&quot;Received event: &quot; + json.dumps(event, indent = 2))</span><br>        <span class="hljs-comment"># print(&quot;Received context: &quot; + str(context))</span><br>        <span class="hljs-comment"># print(&quot;Hello world&quot;)</span><br><br>        self.send_response(<span class="hljs-number">200</span>)<br>        self.send_header(<span class="hljs-string">&#x27;Content-type&#x27;</span>, <span class="hljs-string">&#x27;text/plain&#x27;</span>)<br>        self.end_headers()<br>        self.wfile.write(apimsg)<br>        <span class="hljs-keyword">return</span><br><br></code></pre></td></tr></table></figure><p>Ê≠§‰ª£Á†ÅÊòØ‰øÆÊîπ‰∫é‰∏äÁØáÊñáÁ´†ÁöÑ‰∫ëÂáΩÊï∞‰ª£Á†ÅÔºåÊâÄ‰ª•Âè™Êîπ‰∫ÜÂøÖË¶ÅÊîπÁöÑÂú∞ÊñπÔºåÊ≥®Èáä‰∫Ü‰∏çÈúÄË¶ÅÁöÑÂú∞Êñπ„ÄÇÊú¨Êù•ÊÉ≥Áî®JS ÈáçÂÜô‰∏Ä‰∏ã‰ΩÜÊòØÊÉ≥ÁùÄËÉΩÁî®Â∞±Ë°å„ÄÇ</p><p>pushÂΩìÂâçÁöÑÊõ¥Êîπ‰πãÂêéÔºåÂΩìVercelÂÆåÊàêÈÉ®ÁΩ≤ÂêéÔºå‰Ω†ÂèØ‰ª•Âà∞</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">https:<span class="hljs-string">//</span>&lt; vercel_app_address&gt;<span class="hljs-string">/api/python</span>?id=&lt;ww.<span class="hljs-string">...</span>&gt;&amp;secert=&lt;secret.<span class="hljs-string">..</span>&gt;&amp;agentId=&lt;agentId.<span class="hljs-string">..</span>&gt;&amp;msg=ÊµãËØï‰∏Ä‰∏ãÂêß<br></code></pre></td></tr></table></figure><p>ÊµãËØï‰Ω†ÁöÑËÆøÈóÆË∑ØÂæÑÊòØÂê¶ÊúâÊïà ÔºàÂú®ÂØπÂ∫îÁöÑ‰ΩçÁΩÆÂ°´ÂÖ•‰Ω†ÁöÑ‰ø°ÊÅØÔºâ„ÄÇ</p><p>Â¶ÇÊûúÊàêÂäüÁöÑËØù‰Ω†ÁöÑÊâãÊú∫‰ºöÊé•Êî∂Âà∞ÂØπÂ∫îÁöÑÊé®ÈÄÅÔºàÂ¶ÇÊûú‰Ω†ÁöÑ‰ºÅ‰∏öÂæÆ‰ø°Ê≥®ÂÜåÊàêÂäü‰∏îÊâÄÂ°´‰ø°ÊÅØÊ≠£Á°ÆÔºâ„ÄÇ</p><p>Ê≥®ÊÑèÊñá‰ª∂ÂêçÂëΩÂêçÂøÖÈ°ªÊòØ<code>python.py</code> Âê¶Âàô‰Ω†ÂèØËÉΩÈúÄË¶ÅÊõ¥Êîπ Ëé∑Âèñquery parameters ÈÉ®ÂàÜÁöÑ‰ª£Á†Å„ÄÇ</p><p>‰πãÂêéÂè™ÈúÄË¶ÅÂõûÂà∞‰∏äÁØáÊñáÁ´†ÂÜçÂÅöTwikooÈÖçÁΩÆÂπ∂‰∏îÂÖ≥ËÅîÂà∞ÂæÆ‰ø°Â∞±Â§ßÂäüÂëäÊàêÔºÅ</p><p>ÊúâÈóÆÈ¢òÂèØ‰ª•‰∏ãÈù¢ËØÑËÆ∫ÂëäËØâÊàë„ÄÇHappy coding!</p>]]></content>
    
    
    <categories>
      
      <category>general</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git Review Basics</title>
    <link href="/2022/01/07/Git-Review-Basic/"/>
    <url>/2022/01/07/Git-Review-Basic/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Git-Review-Basic"><a href="#Git-Review-Basic" class="headerlink" title="Git Review Basic"></a>Git Review Basic</h1><span id="more"></span><p><a href="https://learngitbranching.js.org/?locale=en_US">https://learngitbranching.js.org/?locale=en_US</a></p><p><a href="https://github.com/pcottle/learnGitBranching">https://github.com/pcottle/learnGitBranching</a></p><p>A way of learning git with visualization.</p><div class="note note-warning">            <p>Since this blog post, I will bring some of my personal life into the site to make it more vivid. </p>          </div><blockquote><p>This index page image is one of the famous sceneries in my hometown ‚ÄìChengdu, Sichuan, China. The mixture of green bamboo, red walls, and emerald tiles depict a beautiful, peaceful Chinese garden painting in a traditional Chinese style. It is reminiscent of my childhood in summer where I played with my friends in a park (called Ê¢®Âõ≠ Liyuan, removed years ago for the purpose to rebuild that part of the Chengdu city.) </p></blockquote><h1 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h1><h2 id="Commit"><a href="#Commit" class="headerlink" title="Commit"></a>Commit</h2><ul><li><code>git commit</code> : simply a snapshot of all the <strong>tracked</strong> files in the directory</li></ul><h2 id="Branch"><a href="#Branch" class="headerlink" title="Branch"></a>Branch</h2><p>Branches are simply <strong>pointers to specific commit</strong>. No extra memory/ storage overhead with making many branches. </p><p><em>A branch can be translated as : want to include the work of this commits and all parent commits.</em> </p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">git branch [branchname]<br>git checkout [branchname]<br><span class="hljs-comment"># Equivalent to the following</span><br>git checkout -b [branchname]<br></code></pre></td></tr></table></figure><h2 id="Merging"><a href="#Merging" class="headerlink" title="Merging"></a>Merging</h2><p>Merge is to <strong>combine the work from two different branches together</strong>.</p><p>Meging creates a special commit that has two unique parents. </p><p><em>A commit with two parents can be translated as : want to include all the work from from these two parents and the set of all their parents.</em></p><p>Note that: <code>git merge [branchname]</code> is to take all the commits from another branch and merge with current branch!</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201071651473.png" alt="Untitled"></p><h2 id="Rebasing"><a href="#Rebasing" class="headerlink" title="Rebasing"></a>Rebasing</h2><p>Rebasing is to take a set of commits, copy them, and plop them down somewhere else.</p><p>If currently we are on <code>C3</code>, and we do<code>git rebase main</code> </p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201071651132.png" alt="Untitled"></p><p><code>C3</code> will be the next commit of main, and that is essentially what <code>rebase</code> do.  main is the ancestor of <code>bugFix</code>.</p><p>then we will do the <code>git rebase bugFix</code> on <code>main</code> . Git notice <code>main</code>  is the ancestor of <code>bugFix</code> so it simply moves <code>main</code>  branch reference forward in history.</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201071651490.png" alt="Untitled"></p><p><em>Rebasing can be translated to: reallocate current branch to be the next branch of some branch so that a sequential commit history is shown.</em></p><h2 id="HEAD"><a href="#HEAD" class="headerlink" title="HEAD"></a>HEAD</h2><p>HEAD: A symbolic name for the <strong>currently checked out commit,</strong> it‚Äôs essentially <strong>what commit you‚Äôre working on top of.</strong> </p><p><em>HEAD can be translate to your current position in the tree</em></p><ul><li>HEAD always points to the most recent commit branch.</li><li>HEAD points to a branch name such as <code>bugFix</code>. When commit, the status of <code>bugFix</code> is changed through looking at <code>HEAD</code></li></ul><p>To detach HEAD means to go back to a specific commit (not specific branch though, a branch name can be seen as the default HEAD of that branch)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout [commitHash]<br></code></pre></td></tr></table></figure><h2 id="Relative-Refs"><a href="#Relative-Refs" class="headerlink" title="Relative Refs"></a>Relative Refs</h2><ul><li>Moving upwards one commit at a time with <code>^</code> (Caret)</li><li>Moving upwards a number of times with <code>~&lt;num&gt;</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># find the last (parent) commit of main, set HEAD there</span><br>git checkout main^<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201071651688.png" alt="Untitled"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># (find parent and set HEAD there) x3</span><br>git checkout C3<br>git checkout HEAD^<br>git checkout HEAD^<br>git checkout HEAD^<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201071651277.png" alt="Untitled"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Go 4 levels up the tree!</span><br>git checkout HEAD~4<br></code></pre></td></tr></table></figure><h3 id="Branch-forcing"><a href="#Branch-forcing" class="headerlink" title="Branch forcing"></a>Branch forcing</h3><p>Notice that this only reassign different branch name onto another commit, but not changing the work tree. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># move a branch to a specific place by force</span><br><span class="hljs-comment"># git branch -f [branchname] [destination]</span><br>git branch -f main HEAD~3 <br></code></pre></td></tr></table></figure><h2 id="Reversing-Changes"><a href="#Reversing-Changes" class="headerlink" title="Reversing Changes"></a>Reversing Changes</h2><h3 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h3><p>Reset is to reverse changes by moving a branch reference backwards in time to an older commit. </p><p>git reset can be translated as rewrite the history as if the commit had never been made in the first place. </p><p>use <code>git reset</code> when you have committed in your local machine but wants to discard it.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># git reset [destination]</span><br>git reset HEAD~1<br></code></pre></td></tr></table></figure><h3 id="git-revert"><a href="#git-revert" class="headerlink" title="git revert"></a>git revert</h3><p>git reset works well on local machine ,but it cannot share this reset with remote repo</p><p>git revert can do this job.</p><p><code>git revert</code> introduces a new changes that happens to reset all changes made by <code>C2</code>.</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202201071651724.png" alt="Untitled"></p><h1 id="Intermediate"><a href="#Intermediate" class="headerlink" title="Intermediate"></a>Intermediate</h1><p><a href="https://www.notion.so/Git-Review-Intermediate-188b651b1da94ac49b06802913e6ec19">Git Review Intermediate</a></p>]]></content>
    
    
    <categories>
      
      <category>general</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NestJs-Notes</title>
    <link href="/2021/12/16/NestJs-Notes/"/>
    <url>/2021/12/16/NestJs-Notes/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Nest.js Course</p><span id="more"></span><h1 id="Nest-js-Course"><a class="header-anchor" href="#Nest-js-Course">¬∂</a>Nest.js Course</h1><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/Untitasdled.png" alt="Untitled"></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161129474.png" alt="Untitled"></p><p>NestJs provides special tools to control the flow.</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130316.png" alt="Untitled"></p><h2 id="NestJs-decorators"><a class="header-anchor" href="#NestJs-decorators">¬∂</a>NestJs decorators</h2><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130694.png" alt="Untitled"></p><h2 id="Validate-data"><a class="header-anchor" href="#Validate-data">¬∂</a>Validate data</h2><p>ValidationPipe</p><figure class="highlight plain"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><pre><code class="hljs tsx">import &#123; NestFactory &#125; from &#39;@nestjs&#x2F;core&#39;;<br>import &#123; MessagesModule &#125; from &#39;.&#x2F;messages&#x2F;messages.module&#39;;<br><br>import &#123; ValidationPipe &#125; from &#39;@nestjs&#x2F;common&#39;;<br><br>async function bootstrap() &#123;<br>  const app &#x3D; await NestFactory.create(MessagesModule);<br><br>  app.useGlobalPipes(new ValidationPipe());<br><br>  await app.listen(3000);<br>&#125;<br>bootstrap();<br></code></pre></td></tr></table></figure><p><strong>Validation workflow</strong></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130307.png" alt="Untitled"></p><h2 id="Service-‚Üî-Repository"><a class="header-anchor" href="#Service-‚Üî-Repository">¬∂</a>Service ‚Üî Repository</h2><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130133.png" alt="Untitled"></p><p>One services may include multiple repositories.</p><h1 id="Dependency-Injection"><a class="header-anchor" href="#Dependency-Injection">¬∂</a>Dependency Injection</h1><blockquote><p>making use of inversion of control with minimal number of instance</p></blockquote><p>Motivation:</p><p>‚Üí : dependent on</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130861.png" alt="Untitled"></p><p>Pipe ‚Üí MessagesController ‚Üí Messages Service ‚Üí Messages Repository</p><p>Â¶ÇÊûúÊàë‰ª¨Âú® <code>Service constructor</code> ÈáåÈù¢ instantiate the <code>repository</code></p><p>ÈÇ£‰πàÊàë‰ª¨Â∞±ËøùÂèç‰∫Ü inversion of control principle</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130365.png" alt="Untitled"></p><p>Âú®Briefly 2.0ÈáåÔºå ÁäØ‰∫ÜËøô‰∏™ÈîôËØØÔºåÊâÄ‰ª•ÂØºËá¥ÊØè‰∏™Á±ªÈÉΩÂü∫‰∫é ‰∏Ä‰∏™ machine learning model</p><p>In this example, we define an <code>interface</code> , in which the interface defines a list of methods that can be performed.</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130792.png" alt="Untitled"></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130578.png" alt="Untitled"></p><p>To make a controller with inversion of control, we need:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tsx">const repo &#x3D; new Messages Repository();<br>const service &#x3D; new MessagesService(repo);<br>const controller &#x3D; new MessagesController(service);<br><br>const controller &#x3D; new MessagesController();<br></code></pre></td></tr></table></figure><p>With dependency injection, we can minimize the amount of code</p><h2 id="DI-Container-Injectors"><a class="header-anchor" href="#DI-Container-Injectors">¬∂</a>DI Container/Injectors</h2><p>A place to store all classes and their dependencies AND instances that I have created</p><p>Internally, when we feed our controller to Nest, it will look over the <code>constructor</code> of the controller and register all dependencies into the DI container. Then it will create such dependency instance so a controller can be created.</p><p><strong>The benefit of doing this is that we only create one copy of dependency and share it through controllers (i.e. services, repository)!</strong></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130660.png" alt="Untitled"></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130869.png" alt="Untitled"></p><p><code>Injectable</code> marks a class to register in container</p><p>add these classes into <code>module decorator providers</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs tsx"> export class MessagesService &#123;<br>messagesRepo: MessagesRepository;<br>constructor(messagesRepo: MessagesRepository)&#123;<br>this.messagesRepo &#x3D; messagesRepo;<br>&#125;<br>&#125;<br>&#x2F;&#x2F;Same as <br>export class MessagesService &#123;<br>constructor(public messagesRepo: MessagesRepository)&#123;&#125;<br>&#125;<br><br>export class MessagesService &#123;<br>constructor(private messagesRepo: MessagesRepository)&#123;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="DI-inside-a-module"><a class="header-anchor" href="#DI-inside-a-module">¬∂</a>DI inside a module</h3><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130949.png" alt="Untitled"></p><h3 id="DI-between-modules"><a class="header-anchor" href="#DI-between-modules">¬∂</a>DI between modules</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&#x2F;&#x2F; power.modules.ts<br>import &#123; Module &#125; from &quot;@nestjs&#x2F;common&quot;;<br>import &#123; PowerService &#125; from &quot;.&#x2F;power.service;<br><br>@Module(&#123;<br>providers: [PowerService],<br>exports: [PowerService]<br>&#125;)<br>export class PowerModule&#123;&#125;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130581.png" alt="Untitled"></p><h1 id="About-Typeorm"><a class="header-anchor" href="#About-Typeorm">¬∂</a>About Typeorm</h1><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130705.png" alt="Untitled"></p><p>To create a entity:</p><ol><li>Connect with db at <code>app.module</code></li><li>Create <code>User</code> entity</li><li>import <code>TypeOrmModule.forFeature([User])</code> at <code>User.module</code></li><li>import <code>User</code> at <code>app.module</code></li></ol><h2 id="Connection-with-SQLite"><a class="header-anchor" href="#Connection-with-SQLite">¬∂</a>Connection with SQLite</h2><p><code>forRoot</code> means the connection is shared through all modules!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tsx">@Module(&#123;<br>  imports: [<br>    TypeOrmModule.forRoot(&#123;<br>      type: &#39;sqlite&#39;,<br>      database: &#39;db.sqlite&#39;,<br>      entities: [],      &#x2F;&#x2F;at last, add User into this list<br>      synchronize: true, &#x2F;&#x2F; only in dev: automatically update SQL table<br>    &#125;),<br>    UsersModule,<br>    ReportsModule,<br>  ],<br>  controllers: [AppController],<br>  providers: [AppService],<br>&#125;)<br>export class AppModule &#123;&#125;<br></code></pre></td></tr></table></figure><h2 id="Auto-create-repository-for-user"><a class="header-anchor" href="#Auto-create-repository-for-user">¬∂</a>Auto create repository for user</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tsx">import &#123; Module &#125; from &#39;@nestjs&#x2F;common&#39;;<br>import &#123; TypeOrmModule &#125; from &#39;@nestjs&#x2F;typeorm&#39;;<br>import &#123; UsersController &#125; from &#39;.&#x2F;users.controller&#39;;<br>import &#123; UsersService &#125; from &#39;.&#x2F;users.service&#39;;<br><br>import &#123; User &#125; from &#39;.&#x2F;user.entity&#39;;<br>@Module(&#123;<br>  imports: [TypeOrmModule.forFeature([User])], &#x2F;&#x2F;auto-create repo<br>  controllers: [UsersController],<br>  providers: [UsersService],<br>&#125;)<br>export class UsersModule &#123;&#125;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130038.png" alt="Untitled"></p><h2 id="validation-pipe"><a class="header-anchor" href="#validation-pipe">¬∂</a>validation pipe</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs tsx">async function bootstrap() &#123;<br>  const app &#x3D; await NestFactory.create(AppModule);<br>  app.useGlobalPipes(<br>    new ValidationPipe(&#123;<br>      whitelist: true, &#x2F;&#x2F; means: only allow those I defined in DTO to be validate<br>    &#125;),<br>  );<br>  await app.listen(3000);<br>&#125;<br>bootstrap();<br></code></pre></td></tr></table></figure><h2 id="Inject-Repo-into-Service"><a class="header-anchor" href="#Inject-Repo-into-Service">¬∂</a>Inject Repo into Service</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; Injectable &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@nestjs/common&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; Repository &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;typeorm&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; InjectRepository &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@nestjs/typeorm&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; User &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./user.entity&#x27;</span>;<br><br>@Injectable()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UsersService</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">@InjectRepository(User) private repo: Repository&lt;User&gt;</span>)</span> &#123;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>the decorator <code>InjectRepository(User)</code> is needed for the generic type <code>&lt;User&gt;</code></p><p><code>this.repo.create(&#123;email, password&#125;);</code> creates an entity.</p><p><code>this.repo.save(user);</code> persists the data into DB.</p><p>Why we need to split them into two is that: if validation is set on the entity directly, we can validate them between <code>create</code> and <code>save</code>.</p><h2 id="Hooks"><a class="header-anchor" href="#Hooks">¬∂</a>Hooks</h2><p>Hooks are basically the <code>Trigger</code> in SQL</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-comment">//user.entity.ts</span><br><span class="hljs-keyword">import</span> &#123;<br>  AfterInsert,<br>  AfterRemove,<br>  AfterUpdate,<br>  Entity,<br>  Column,<br>  PrimaryGeneratedColumn,<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;typeorm&#x27;</span>;<br><br>@Entity()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;<br>  @PrimaryGeneratedColumn()<br>  id: number;<br><br>  @Column()<br>  email: string;<br><br>  @Column()<br>  password: string;<br><br>  @AfterInsert()<br>  <span class="hljs-function"><span class="hljs-title">logInsert</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Inserted User: &#x27;</span>, <span class="hljs-built_in">this</span>.id);<br>  &#125;<br><br>  @AfterUpdate()<br>  <span class="hljs-function"><span class="hljs-title">logUpdate</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Updated User: &#x27;</span>, <span class="hljs-built_in">this</span>.id);<br>  &#125;<br><br>  @AfterRemove()<br>  <span class="hljs-function"><span class="hljs-title">logRemove</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Removed User: &#x27;</span>, <span class="hljs-built_in">this</span>.id);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Saving User entity (by create - save) instance will trigger <code>Hook</code>, directly saving  (only by save) will not trigger hook.</p><p>Similar with <code>save()</code> with <code>insert()</code> <code>update()</code></p><p><code>save()</code> is called with a user entity object, <code>insert()</code> <code>update()</code> is called with a SQL record</p><p>Similar to <code>remove()</code> with <code>delete()</code> .</p><h2 id="Update-Partial"><a class="header-anchor" href="#Update-Partial">¬∂</a>Update / Partial</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-title">update</span>(<span class="hljs-params">id: number, attrs: Partial&lt;User&gt;</span>)</span> &#123;<br>    <span class="hljs-keyword">const</span> user = <span class="hljs-keyword">await</span> <span class="hljs-built_in">this</span>.findOne(id);<br>    <span class="hljs-keyword">if</span> (!user) &#123;<br>      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">&#x27;User not found&#x27;</span>);<br>    &#125;<br>    <span class="hljs-built_in">Object</span>.assign(user, attrs);<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.repo.save(user);<br>  &#125;<br></code></pre></td></tr></table></figure><p>if we want to use <code>entity</code> , we need to first fetch the entity from DB and then update the entity. <code>Object.assign</code> allows attrs to be expanded and overwrites/add all attributes of <code>user</code> object. Then we call <code>save(user)</code></p><h2 id="controller-CRUD-parseInt"><a class="header-anchor" href="#controller-CRUD-parseInt">¬∂</a>controller CRUD / parseInt</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs jsx">@Get(<span class="hljs-string">&#x27;/:id&#x27;</span>)<br>  <span class="hljs-function"><span class="hljs-title">findUser</span>(<span class="hljs-params">@Param(<span class="hljs-string">&#x27;id&#x27;</span>) id: string</span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.usersService.findOne(<span class="hljs-built_in">parseInt</span>(id));<br>  &#125;<br><br>@Get(<span class="hljs-string">&#x27;/&#x27;</span>)<br>  <span class="hljs-function"><span class="hljs-title">findAllusers</span>(<span class="hljs-params">@Query(<span class="hljs-string">&#x27;email&#x27;</span>) email: string</span>)</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.usersService.find(email);<br>  &#125;<br><span class="hljs-comment">//... and more, check out code base</span><br></code></pre></td></tr></table></figure><h2 id="Error-handling"><a class="header-anchor" href="#Error-handling">¬∂</a>Error handling</h2><p>We cannot handle <code>NotFoundException</code> at the service level because other transmitting protocol such as <code>WebSocket</code> does not support suck error handling.  But in our case, we can do so as we do not aim to utilize this service in other protocols at this time.</p><h2 id="Exclude-attrs-from-an-entity"><a class="header-anchor" href="#Exclude-attrs-from-an-entity">¬∂</a>Exclude attrs from an entity</h2><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130426.png" alt="Untitled"></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-comment">//user.entity.ts</span><br>...<br>  @Exclude()<br>  @Column()<br>  password: string;<br>...<br></code></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-comment">//users.controller.ts</span><br>  @UseInterceptors(ClassSerializerInterceptor)<br>  @Get(<span class="hljs-string">&#x27;/:id&#x27;</span>)<br>  <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-title">findUser</span>(<span class="hljs-params">@Param(<span class="hljs-string">&#x27;id&#x27;</span>) id: string</span>)</span> &#123;<br>    <span class="hljs-keyword">const</span> user = <span class="hljs-keyword">await</span> <span class="hljs-built_in">this</span>.usersService.findOne(<span class="hljs-built_in">parseInt</span>(id));<br>    <span class="hljs-keyword">if</span> (!user) &#123;<br>      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> NotFoundException(<span class="hljs-string">&#x27;User not found&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> user;<br>  &#125;<br></code></pre></td></tr></table></figure><p>This approach is not the best because it is not customizable.</p><h2 id="A-new-approach-custom-interceptor"><a class="header-anchor" href="#A-new-approach-custom-interceptor">¬∂</a><strong>A new approach: custom interceptor</strong></h2><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130513.png" alt="Untitled"></p><p>We can apply our custom interceptor on all routes, controllers, global levels!</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161130519.png" alt="Untitled"></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161131762.png" alt="Untitled"></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-comment">// interceptors/serialize.interceptor.ts</span><br><span class="hljs-keyword">import</span> &#123; NestInterceptor, ExecutionContext, CallHandler, UseInterceptors &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@nestjs/common&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; Observable &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;rxjs&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; map &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;rxjs/operators&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; plainToClass &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;class-transformer&#x27;</span>;<br><br><span class="hljs-comment">// check it must be a class</span><br>interface ClassConstructor &#123;<br>  <span class="hljs-keyword">new</span> (...args: any[]): &#123;&#125;;<br>&#125;<br><br><span class="hljs-comment">//wrap a decorator around a class</span><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Serialize</span>(<span class="hljs-params">dto: ClassConstructor </span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> UseInterceptors(<span class="hljs-keyword">new</span> SerializeInterceptor(dto));<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SerializeInterceptor</span> <span class="hljs-title">implements</span> <span class="hljs-title">NestInterceptor</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">private dto: ClassConstructor </span>)</span> &#123;&#125;<br><br>  intercept(context: ExecutionContext, <span class="hljs-attr">next</span>: CallHandler): Observable&lt;any&gt; &#123;<br>    <span class="hljs-comment">//Here runs before the handler</span><br>    <span class="hljs-comment">// console.log(&#x27;Before...&#x27;);</span><br><br>    <span class="hljs-comment">//Here runs after the handler but before the response is sent</span><br>    <span class="hljs-keyword">return</span> next.handle().pipe(<br>      map(<span class="hljs-function">(<span class="hljs-params">data: any</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> plainToClass(<span class="hljs-built_in">this</span>.dto, data, &#123;<br>          excludeExtraneousValues: <span class="hljs-literal">true</span>,<br>        &#125;);<br>      &#125;),<br>    );<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// users.controller.ts</span><br><br><span class="hljs-comment">//@UseInterceptors(new SerializeInterceptor(UserDto));</span><br>  @Serialize(UserDto)<br>  @Get(<span class="hljs-string">&#x27;/:id&#x27;</span>)<br>  <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-title">findUser</span>(<span class="hljs-params">@Param(<span class="hljs-string">&#x27;id&#x27;</span>) id: string</span>)</span> &#123;<br>    <span class="hljs-keyword">const</span> user = <span class="hljs-keyword">await</span> <span class="hljs-built_in">this</span>.usersService.findOne(<span class="hljs-built_in">parseInt</span>(id));<br>    <span class="hljs-keyword">if</span> (!user) &#123;<br>      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> NotFoundException(<span class="hljs-string">&#x27;User not found&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> user;<br>  &#125;<br></code></pre></td></tr></table></figure><p>Or we can apply to the whole controller</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx">@Controller(<span class="hljs-string">&#x27;auth&#x27;</span>)<br>@Serialize(UserDto)<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UsersController</span> </span>&#123;...&#125;<br></code></pre></td></tr></table></figure><h1 id="Authentication"><a class="header-anchor" href="#Authentication">¬∂</a>Authentication</h1><p>Create a new Auth service is very scalable if we have more auth feature in the future!</p><h2 id="Session"><a class="header-anchor" href="#Session">¬∂</a>Session</h2><p>To use session</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsx">npm install @type/cookie-session cookie-session<br></code></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-comment">//main.ts</span><br><span class="hljs-keyword">import</span> &#123; NestFactory &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@nestjs/core&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; AppModule &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./app.module&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; ValidationPipe &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@nestjs/common&#x27;</span>;<br><span class="hljs-keyword">const</span> cookieSession = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;cookie-session&#x27;</span>);<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bootstrap</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">await</span> NestFactory.create(AppModule);<br>  app.use(<br>    cookieSession(&#123;<br>      keys: [<span class="hljs-string">&#x27;asdasd&#x27;</span>], <span class="hljs-comment">//for encryption purpose</span><br>    &#125;),<br>  );<br>  app.useGlobalPipes(<br>    <span class="hljs-keyword">new</span> ValidationPipe(&#123;<br>      whitelist: <span class="hljs-literal">true</span>, <span class="hljs-comment">// means: only allow those I defined in DTO to be validate</span><br>    &#125;),<br>  );<br>  <span class="hljs-keyword">await</span> app.listen(<span class="hljs-number">3000</span>);<br>&#125;<br>bootstrap();<br></code></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs jsx">@Post(<span class="hljs-string">&#x27;/signin&#x27;</span>)<br>  <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-title">signinUser</span>(<span class="hljs-params">@Body() body: CreateUserDto, @Session() session</span>)</span> &#123;<br>    <span class="hljs-keyword">const</span> user = <span class="hljs-keyword">await</span> <span class="hljs-built_in">this</span>.authService.signin(body.email, body.password);<br>    session.userId = user.id;<br>    <span class="hljs-keyword">return</span> user;<br>  &#125;<br><br>@Post(<span class="hljs-string">&#x27;/signout&#x27;</span>)<br>  <span class="hljs-function"><span class="hljs-title">signOut</span>(<span class="hljs-params">@Session() session</span>)</span> &#123;<br>    session.userId = <span class="hljs-literal">null</span>;<br>  &#125;<br></code></pre></td></tr></table></figure><p>This directly store session userId</p><h2 id="Custom-decorator"><a class="header-anchor" href="#Custom-decorator">¬∂</a>Custom decorator</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; ExecutionContext, createParamDecorator &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@nestjs/common&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> CurrentUser = createParamDecorator(<br>  (data: never, <span class="hljs-attr">context</span>: ExecutionContext) =&gt; &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;hi!&#x27;</span>;<br>  &#125;,<br>);<br></code></pre></td></tr></table></figure><p><code>data</code> is the params passed to the decorator!</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-comment">//current-user.decorator.ts</span><br><span class="hljs-keyword">import</span> &#123; ExecutionContext, createParamDecorator &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@nestjs/common&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> CurrentUser = createParamDecorator(<br>  (data: never, <span class="hljs-attr">context</span>: ExecutionContext) =&gt; &#123;<br>    <span class="hljs-keyword">const</span> request = context.switchToHttp().getRequest();<br>    <span class="hljs-keyword">return</span> request.currentUser;<br>  &#125;,<br>);<br><br><span class="hljs-comment">//current-user.interceptor.ts</span><br><span class="hljs-keyword">import</span> &#123;<br>  NestInterceptor,<br>  ExecutionContext,<br>  CallHandler,<br>  Injectable,<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@nestjs/common&#x27;</span>;<br><br><span class="hljs-keyword">import</span> &#123; UsersService &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../users.service&#x27;</span>;<br><br>@Injectable()<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CurrentUserInterceptor</span> <span class="hljs-title">implements</span> <span class="hljs-title">NestInterceptor</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">private usersService: UsersService</span>)</span> &#123;&#125;<br><br>  <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-title">intercept</span>(<span class="hljs-params">context: ExecutionContext, handler: CallHandler</span>)</span> &#123;<br>    <span class="hljs-keyword">const</span> request = context.switchToHttp().getRequest();<br>    <span class="hljs-keyword">const</span> &#123; userId &#125; = request.session || &#123;&#125;;<br><br>    <span class="hljs-keyword">if</span> (userId) &#123;<br>      <span class="hljs-keyword">const</span> user = <span class="hljs-keyword">await</span> <span class="hljs-built_in">this</span>.usersService.findOne(userId);<br>      request.currentUser = user;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> handler.handle();<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>Since the decorator is not part of the dependency injection system, we need to use an interceptor to access <code>UsersService</code> to retrieve the current user based on the stored session <code>userId</code></p><p>If we do not use the <code>decorator</code> we then need to pass <code>@Request() request: Request</code> in the controller method.</p><p>Don‚Äôt forget to add <code>CurrentUserInterceptor</code> into <code>provider</code> of <code>users. module.ts</code></p><p>We need to apply <code>CurrentUserInterceptor</code> to the controller to make <code>CurrentUser</code> decorator into effect</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx">@Controller(<span class="hljs-string">&#x27;auth&#x27;</span>)<br>@Serialize(UserDto)<br>@UseInterceptors(CurrentUserInterceptor)<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UsersController</span> </span>&#123;&#125;<br></code></pre></td></tr></table></figure><p>Or, we can apply <code>interceptors</code> globally!</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs jsx">@Module(&#123;<br>  imports: [TypeOrmModule.forFeature([User])],<br>  controllers: [UsersController],<br>  providers: [<br>    UsersService,<br>    AuthService,<br>    &#123;<br>      provide: APP_INTERCEPTOR,<br>      useClass: CurrentUserInterceptor,<br>    &#125;,<br>  ],<br>&#125;)<br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UsersModule</span> </span>&#123;&#125;<br></code></pre></td></tr></table></figure><p>This allows <code>CurrentUserInterceptor</code> to be globally applied</p><p><code>Handler</code> is same as <code>controller method</code></p><h2 id="Guard"><a class="header-anchor" href="#Guard">¬∂</a>Guard</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> &#123; CanActivate, ExecutionContext &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@nestjs/common&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AuthGuard</span> <span class="hljs-title">implements</span> <span class="hljs-title">CanActivate</span> </span>&#123;<br>  canActivate(context: ExecutionContext): boolean &#123;<br>    <span class="hljs-keyword">const</span> request = context.switchToHttp().getRequest();<br>    <span class="hljs-keyword">return</span> request.session.userId;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Q: why we need <code>ExecutionContext</code> there?</p><p>A: We need to make sure what kind of protocol we are using!</p><h1 id="Test"><a class="header-anchor" href="#Test">¬∂</a>Test</h1><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161131857.png" alt="Untitled"></p><p><code>providers</code> array is a list of injectables we want to register in our testing DI container!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tsx">providers: [<br>      AuthService,<br>      &#123;<br>        provide: UsersService,<br>        useValue: fakeUsersService,<br>      &#125;,<br>    ],<br></code></pre></td></tr></table></figure><p><code>AuthService</code> will be registered as normally, when it is initialized in the DI container, the container will look over all its dependencies and try to create the instance.</p><p>The point comes: the second object means if any injectables or controller need to initialize a service <code>UsersService</code>, then DI container will use <code>fakeUsersService</code>!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&#x2F;&#x2F;Create a fake copy of the usersService<br>  const fakeUsersService &#x3D; &#123;<br>    find: () &#x3D;&gt; Promise.resolve([]),<br>    create: (email: string, password: string) &#x3D;&gt;<br>      Promise.resolve(&#123; id: 1, email, password &#125;),<br>  &#125;;<br></code></pre></td></tr></table></figure><p>This <code>fakeUsersService</code> object implements several methods that are needed for initializing <code>AuthService</code>!</p><p><code>find()</code> and <code>create()</code> are all async, we need to return <code>Promise</code></p><p><code>Promise. resolve()</code>immediately return a resolved promise with the given value.</p><p>To help TypeScript to infer the needed methods for <code>fakeUsersService</code></p><p>We can use <code>Partial&lt;UsersService&gt;</code> on <code>fakeUsersService</code></p><p>since <code>create()</code> expects to return a user entity, the fake user entity is an object without method such as <code>logRemove</code> etc‚Ä¶ Therefore, we can enforce it to <code>User</code> entity type.</p><p>The full code:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs tsx">import &#123; Test &#125; from &#39;@nestjs&#x2F;testing&#39;;<br>import &#123; AuthService &#125; from &#39;.&#x2F;auth.service&#39;;<br>import &#123; User &#125; from &#39;.&#x2F;user.entity&#39;;<br>import &#123; UsersService &#125; from &#39;.&#x2F;users.service&#39;;<br><br>describe(&#39;AuthService&#39;, () &#x3D;&gt; &#123;<br>  let service: AuthService;<br><br>  &#x2F;&#x2F; For every single test, gets a new AuthService<br>  beforeEach(async () &#x3D;&gt; &#123;<br>    &#x2F;&#x2F;Create a fake copy of the usersService<br>    const fakeUsersService: Partial&lt;UsersService&gt; &#x3D; &#123;<br>      find: () &#x3D;&gt; Promise.resolve([]),<br>      create: (email: string, password: string) &#x3D;&gt;<br>        Promise.resolve(&#123; id: 1, email, password &#125; as User),<br>    &#125;;<br><br>    &#x2F;&#x2F; this is a DI container<br>    const module &#x3D; await Test.createTestingModule(&#123;<br>      providers: [<br>        AuthService,<br>        &#123;<br>          provide: UsersService,<br>          useValue: fakeUsersService,<br>        &#125;,<br>      ],<br>    &#125;).compile();<br>    &#x2F;&#x2F; Create a test Service<br>    service &#x3D; module.get(AuthService);<br>  &#125;);<br><br>  it(&#39;can create an instance of auth service&#39;, async () &#x3D;&gt; &#123;<br>    expect(service).toBeDefined();<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&quot;test:watch&quot;: &quot;jest --watch --maxWorkers&#x3D;1&quot;<br></code></pre></td></tr></table></figure><p>Speed up testing</p><h2 id="More-test"><a class="header-anchor" href="#More-test">¬∂</a>More test</h2><p>If two tests require two different methods implementation,</p><p>we need to set the <code>fakeUsersService</code> to global scope and tweek the implementation of <code>find()</code>  in the respective test</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs tsx">it(&#39;throws an error if user signs up with email that is in use.&#39;, async () &#x3D;&gt; &#123;<br>    fakeUsersService.find &#x3D; () &#x3D;&gt;<br>      Promise.resolve([<br>        &#123; id: 1, email: &#39;abc@abc.com&#39;, password: &#39;qwe&#39; &#125; as User,<br>      ]);<br>    expect.assertions(2);<br>    &#x2F;&#x2F; We expect it to fail in try, and catch allows test to be done<br>    &#x2F;&#x2F; Jest will assume test is fail if it does not finish in 5 seconds<br>    try &#123;<br>      await service.signup(&#39;qwe@qwe.com&#39;, &#39;qwe&#39;);<br>    &#125; catch (error) &#123;<br>      expect(error).toBeInstanceOf(BadRequestException);<br>      expect(error.message).toEqual(&#39;User already exists&#39;);<br>    &#125;<br>  &#125;);<br><br>it(&#39;throws an error if user signs in with unused email&#39;, async () &#x3D;&gt; &#123;<br>    expect.assertions(2);<br>    try &#123;<br>      await service.signin(&#39;asdasdasdqw@asdasda.com&#39;, &#39;qwe&#39;);<br>    &#125; catch (error) &#123;<br>      expect(error).toBeInstanceOf(BadRequestException);<br>      expect(error.message).toEqual(&quot;User doesn&#39;t exist&quot;);<br>    &#125;<br>  &#125;);<br></code></pre></td></tr></table></figure><h2 id="Password-comparison"><a class="header-anchor" href="#Password-comparison">¬∂</a>Password comparison</h2><p>Please refer to the github codebase</p><p><a href="https://github.com/q815101630/nestJs_mycv/blob/main/src/users/auth.service.spec.ts">https://github.com/q815101630/nestJs_mycv/blob/main/src/users/auth.service.spec.ts</a></p><h2 id="Controller-testing"><a class="header-anchor" href="#Controller-testing">¬∂</a>Controller testing</h2><p>Refers to test</p><p><a href="https://github.com/q815101630/nestJs_mycv/blob/main/src/users/users.controller.spec.ts">https://github.com/q815101630/nestJs_mycv/blob/main/src/users/users.controller.spec.ts</a></p><h1 id="End-To-End-Test"><a class="header-anchor" href="#End-To-End-Test">¬∂</a>End-To-End Test</h1><h2 id="problem"><a class="header-anchor" href="#problem">¬∂</a>problem</h2><p>A brand new server is created for each test</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161131111.png" alt="Untitled"></p><p>E2E Test skips main.ts, which means there are no pipes, and session</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161131425.png" alt="Untitled"></p><p>Two way to solve this, first is easy, but not nest-way.</p><p>Second way is that , we can apply a global <code>pipe</code> and <code>middleware</code> in <code>App Module</code>!</p><p>original main.ts</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs tsx">import &#123; NestFactory &#125; from &#39;@nestjs&#x2F;core&#39;;<br>import &#123; AppModule &#125; from &#39;.&#x2F;app.module&#39;;<br>import &#123; ValidationPipe &#125; from &#39;@nestjs&#x2F;common&#39;;<br>const cookieSession &#x3D; require(&#39;cookie-session&#39;);<br><br>async function bootstrap() &#123;<br>  const app &#x3D; await NestFactory.create(AppModule);<br>  app.use(<br>    cookieSession(&#123;<br>      keys: [&#39;super&#39;], &#x2F;&#x2F;for encryption purpose<br>    &#125;),<br>  );<br>  app.useGlobalPipes(<br>    new ValidationPipe(&#123;<br>      whitelist: true, &#x2F;&#x2F; means: only allow those I defined in DTO to be validate<br>    &#125;),<br>  );<br>  await app.listen(3000);<br>&#125;<br>bootstrap();<br></code></pre></td></tr></table></figure><p>original <code>app.module.ts</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs tsx">import &#123; Module &#125; from &#39;@nestjs&#x2F;common&#39;;<br>import &#123; AppController &#125; from &#39;.&#x2F;app.controller&#39;;<br>import &#123; AppService &#125; from &#39;.&#x2F;app.service&#39;;<br>import &#123; UsersModule &#125; from &#39;.&#x2F;users&#x2F;users.module&#39;;<br>import &#123; ReportsModule &#125; from &#39;.&#x2F;reports&#x2F;reports.module&#39;;<br><br>import &#123; TypeOrmModule &#125; from &#39;@nestjs&#x2F;typeorm&#39;;<br>import &#123; User &#125; from &#39;.&#x2F;users&#x2F;user.entity&#39;;<br>import &#123; Report &#125; from &#39;.&#x2F;reports&#x2F;report.entity&#39;;<br>@Module(&#123;<br>  imports: [<br>    TypeOrmModule.forRoot(&#123;<br>      type: &#39;sqlite&#39;,<br>      database: &#39;db.sqlite&#39;,<br>      entities: [User, Report],<br>      synchronize: true,<br>    &#125;),<br>    UsersModule,<br>    ReportsModule,<br>  ],<br>  controllers: [AppController],<br>  providers: [AppService],<br>&#125;)<br>export class AppModule &#123;&#125;<br></code></pre></td></tr></table></figure><h2 id="pipe-in-module"><a class="header-anchor" href="#pipe-in-module">¬∂</a>pipe in module</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs tsx">@Module(&#123;<br>  imports: [<br>    TypeOrmModule.forRoot(&#123;<br>      type: &#39;sqlite&#39;,<br>      database: &#39;db.sqlite&#39;,<br>      entities: [User, Report],<br>      synchronize: true,<br>    &#125;),<br>    UsersModule,<br>    ReportsModule,<br>  ],<br>  controllers: [AppController],<br>  providers: [<br>    AppService,<br>    &#123;<br>      provide: APP_PIPE,<br>      useValue: new ValidationPipe(&#123;<br>        whitelist: true,<br>      &#125;),<br>    &#125;,<br>  ],<br>&#125;)<br>export class AppModule &#123;&#125;<br></code></pre></td></tr></table></figure><p>This means, if the app module needs <code>APP_PIPE</code> (which automatically runs through each request) ,then use the <code>validation pipe</code></p><h2 id="middleware-cookie-session-in-module"><a class="header-anchor" href="#middleware-cookie-session-in-module">¬∂</a>middleware (cookie-session) in module</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&#x2F;&#x2F;app.module.ts<br><br>...<br>export class AppModule &#123;<br>  configure(consumer: MiddlewareConsumer) &#123;<br>    consumer<br>      .apply(<br>        cookieSession(&#123;<br>          keys: [&#39;super&#39;], &#x2F;&#x2F;for encryption purpose<br>        &#125;),<br>      )<br>      .forRoutes(&#39;*&#39;);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Downside of doing all this is that we migrate our pipe, middleware setting into <code>app.module</code> which is not very clear what we are doing with pipe and middleware</p><p><em>I would prefer the first simple method‚Ä¶then. For detail ,seeing the video</em></p><h2 id="repeat-test-problem"><a class="header-anchor" href="#repeat-test-problem">¬∂</a>repeat test problem</h2><p>We need two DB, one for development, one for testing.</p><p>To achieve this, we need environment variable</p><h1 id="Environment-Variable"><a class="header-anchor" href="#Environment-Variable">¬∂</a>Environment Variable</h1><p>Nest environement variable is incredibly complicated, but we shall still use it in this case of learning purpose.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&#x2F;&#x2F;app.module.ts<br>const cookieSession &#x3D; require(&#39;cookie-session&#39;);<br><br>@Module(&#123;<br>  imports: [<br>    ConfigModule.forRoot(&#123;<br>      isGlobal: true,<br>      envFilePath: &#96;.env.$&#123;process.env.NODE_ENV&#125;&#96;,<br>    &#125;),<br>    TypeOrmModule.forRootAsync(&#123;<br>      inject: [ConfigService],<br>      useFactory: (config: ConfigService) &#x3D;&gt; &#123;<br>        return &#123;<br>          type: &#39;sqlite&#39;,<br>          database: config.get&lt;string&gt;(&#39;DB_NAME&#39;),<br>          synchronize: true,<br>          entities: [User, Report],<br>        &#125;;<br>      &#125;,<br>    &#125;),<br>    &#x2F;&#x2F; TypeOrmModule.forRoot(&#123;<br>    &#x2F;&#x2F;   type: &#39;sqlite&#39;,<br>    &#x2F;&#x2F;   database: &#39;db.sqlite&#39;,<br>    &#x2F;&#x2F;   entities: [User, Report],<br>    &#x2F;&#x2F;   synchronize: true,<br>    &#x2F;&#x2F; &#125;),<br>    UsersModule,<br>    ReportsModule,<br>  ],<br>  controllers: [AppController],<br>  providers: [<br>    AppService,<br>    &#123;<br>      provide: APP_PIPE,<br>      useValue: new ValidationPipe(&#123;<br>        whitelist: true,<br>      &#125;),<br>    &#125;,<br>  ],<br>&#125;)<br>export class AppModule &#123;<br>  configure(consumer: MiddlewareConsumer) &#123;<br>    consumer<br>      .apply(<br>        cookieSession(&#123;<br>          keys: [&#39;super&#39;], &#x2F;&#x2F;for encryption purpose<br>        &#125;),<br>      )<br>      .forRoutes(&#39;*&#39;);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Now we have two seperate database for <code>development</code> and <code>test</code></p><p>We can delete the test database for each test suit!</p><p>To seperate each test, we need also to close their connection!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&#x2F;&#x2F;test&#x2F;jest-e2e.json<br>&#123;<br>  &quot;moduleFileExtensions&quot;: [&quot;js&quot;, &quot;json&quot;, &quot;ts&quot;],<br>  &quot;rootDir&quot;: &quot;.&quot;,<br>  &quot;testEnvironment&quot;: &quot;node&quot;,<br>  &quot;testRegex&quot;: &quot;.e2e-spec.ts$&quot;,<br>  &quot;transform&quot;: &#123;<br>    &quot;^.+\\.(t|j)s$&quot;: &quot;ts-jest&quot;<br>  &#125;,<br>  &quot;setupFilesAfterEnv&quot;:[&quot;&lt;rootDir&gt;&#x2F;setup.ts&quot;]<br>&#125;<br><br>&#x2F;&#x2F;test&#x2F;setup.ts<br>import &#123; rm &#125; from &#39;fs&#x2F;promises&#39;;<br>import &#123; join &#125; from &#39;path&#39;;<br>import &#123; getConnection &#125; from &#39;typeorm&#39;;<br><br>global.beforeEach(async () &#x3D;&gt; &#123;<br>  try &#123;<br>    await rm(join(__dirname, &#39;..&#39;, &#39;test.sqlite&#39;));<br>  &#125; catch (e) &#123;&#125;<br>&#125;);<br><br>global.afterEach(async () &#x3D;&gt; &#123;<br>  try &#123;<br>    await getConnection().close();<br>  &#125; catch (e) &#123;&#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p>More e2e test:</p><p><a href="https://github.com/q815101630/nestJs_mycv/blob/main/test/auth.e2e-spec.ts">https://github.com/q815101630/nestJs_mycv/blob/main/test/auth.e2e-spec.ts</a></p><h1 id="Association"><a class="header-anchor" href="#Association">¬∂</a>Association</h1><ul><li>Many to One</li><li>One to Many</li><li>Many to Many</li><li>One to One</li></ul><p>Many to One will cause the change</p><ul><li>First argument is to wrap a class with a function so that circular dependency can be solved.</li><li>Second argument is a issue of TypeORM: we need to state how the instance can go from the associated object back to itself.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&#x2F;&#x2F;user.entity<br>@OneToMany(()&#x3D;&gt; Report, (report)&#x3D;&gt; report.user)<br>  reports: Report[];<br><br>&#x2F;&#x2F;report.entity<br>@ManyToOne(() &#x3D;&gt; User, (user) &#x3D;&gt; user.reports)<br>  user: User;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161131220.png" alt="Untitled"></p><p>fetching a user <strong>will not</strong> automatically fetch the reports</p><p>fetching a report <strong>will not</strong> automatically fetch the user.</p><h1 id="Authorization-Middleware"><a class="header-anchor" href="#Authorization-Middleware">¬∂</a>Authorization/ Middleware</h1><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/202112161131544.png" alt="Untitled"></p><p>Interceptor is special because it can perform before and after the handler.</p><p>However, if we use something defined in interceptor stage in guard stage, we will have an issue .</p><p>Therefore, we need to turn the <code>currentUser</code> interceptor into a <code>middleware</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs tsx">declare global &#123;<br>  namespace Express &#123;<br>    interface Request &#123;<br>      currentUser?: User;<br>    &#125;<br>  &#125;<br>&#125;<br><br>@Injectable()<br>export class CurrentUserMiddleware implements NestMiddleware &#123;<br>  constructor(private usersService: UsersService) &#123;&#125;<br><br>  async use(req: Request, res: Response, next: NextFunction) &#123;<br>    const &#123; userId &#125; &#x3D; req.session || &#123;&#125;;<br>    if (userId) &#123;<br>      const user &#x3D; await this.usersService.findOne(userId);<br>      req.currentUser &#x3D; user;<br>    &#125;<br>    next();<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&#x2F;&#x2F;users.module.ts<br>export class UsersModule &#123;<br>  configure(consumer: MiddlewareConsumer) &#123;<br>    consumer.apply(CurrentUserMiddleware).forRoutes(&#39;*&#39;);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>We then need to apply into into user module</p><p>Besides, since in our query or param <code>@Param(&quot;xxx&quot;)</code> and <code>@Query()</code> in either Patch, put, get, it will parse all either string or number into string. therefore, we need to transform them in dto</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs tsx">@Get()<br>  getEstimate(@Query() query: GetEstimateDto) &#123;<br>    console.log(query);<br>  &#125;<br></code></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs tsx">export class GetEstimateDto &#123;<br>  @IsString()<br>  make: string;<br><br>  @IsString()<br>  model: string;<br><br>  @Transform((&#123; value &#125;) &#x3D;&gt; parseInt(value))<br>  @IsNumber()<br>  @Min(1900)<br>  @Max(2050)<br>  year: number;<br><br>  @Transform((&#123; value &#125;) &#x3D;&gt; parseInt(value))<br>  @Min(0)<br>  mileage: number;<br><br>  @Transform((&#123; value &#125;) &#x3D;&gt; parseFloat(value))<br>  @IsLongitude()<br>  lng: number;<br><br>  @Transform((&#123; value &#125;) &#x3D;&gt; parseFloat(value))<br>  @IsLatitude()<br>  lat: number;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="createQueryBuilder"><a class="header-anchor" href="#createQueryBuilder">¬∂</a>createQueryBuilder</h1><p>This is just another way of building SQL, I am thinking to use another ORM though.</p><h1 id="To-Production"><a class="header-anchor" href="#To-Production">¬∂</a>To Production</h1><p>Several things we need to take care on the path to production</p><h2 id="Environment-variable"><a class="header-anchor" href="#Environment-variable">¬∂</a>Environment variable</h2><p>Take advantage of <code>ConfigService</code>, we can inject <code>ConfigService</code> in anywhere we need and call <code>this.configService.get(&quot;xxx&quot;)</code></p><h2 id="Synchronize"><a class="header-anchor" href="#Synchronize">¬∂</a>Synchronize</h2><p>Type-orm synchronize with the database regarding entities. It may cause losing data during production.</p><p>Therefore, we shall use <code>Migration File</code> to explicitly dictate what we want to do with DB change.</p><h2 id="Migration"><a class="header-anchor" href="#Migration">¬∂</a>Migration</h2>]]></content>
    
    
    <categories>
      
      <category>backend</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nestJs</tag>
      
      <tag>TS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker Review</title>
    <link href="/2021/12/14/Docker-Review/"/>
    <url>/2021/12/14/Docker-Review/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Docker Review Note</p><span id="more"></span><h1 id="Docker-Review"><a class="header-anchor" href="#Docker-Review">¬∂</a>Docker Review</h1><h1 id="Why-docker"><a class="header-anchor" href="#Why-docker">¬∂</a>Why docker?</h1><p>webserver ‚Üí DB ‚Üí messaging ‚Üí orchestration</p><ol><li>the architecture of these components are varying over time!</li><li>setting environment is painful!</li><li>development team members have different OS environment</li></ol><ul><li>Container utilize the same OS Kernel (handling with hardware), which differs from VM</li></ul><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/Untitled.png" alt="Untitled"></p><h1 id="Commands"><a class="header-anchor" href="#Commands">¬∂</a>Commands</h1><p>some Commands I don‚Äôt know:</p><ul><li><code>docker pull &lt;image&gt;</code> only pull image from DockerHub to local</li><li><code>docker exec &lt;container name&gt; &lt;command&gt;</code></li><li><code>docker run -d</code>   run in detach</li><li><code>docker run -it centos bash</code> run a base image and gets into bash</li><li><code>docker attach &lt;container name&gt;</code> run some detached app in foreground</li></ul><h1 id="Run"><a class="header-anchor" href="#Run">¬∂</a>Run</h1><ul><li><code>docker run redis:4.0</code>  specify a tag</li><li><code>docker run -it</code> runs interactively with terminal</li><li><code>docker run -v /opt/datadir:/var/lib/mysql mysql</code> mount volume</li><li><code>docker logs &lt;container name&gt;</code>  logs out the container status</li><li><code>docker run ubuntu cat /etc/*release*</code> run a command of a ubuntu image and exit container</li><li><code>docker attach &lt;container name&gt;</code>   pull a container to foreground</li><li><code>docker build &lt;Dockerfile name&gt; -t &lt;xxx/xxxx&gt;</code> build an image</li><li><code>docker push &lt;xxx/xxx&gt;</code> push a docker image to dockerhub</li><li><code>cat &gt; Dockerfile</code> input to a file <code>Dockerfile</code></li><li><code>docker run -e &lt;ENV NAME&gt;=&lt;ENV VALUE&gt; &lt;image name&gt;</code>  set a environement variable</li><li><code>docker inspect &lt;container name&gt;</code></li></ul><h1 id="CMD-V-S-Entrypoint"><a class="header-anchor" href="#CMD-V-S-Entrypoint">¬∂</a>CMD V.S Entrypoint</h1><p><code>CMD</code> simply refers to run a command</p><p><code>ENTRYPOINT</code> allows us to append further params to <code>CMD</code>!</p><figure class="highlight jsx"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs jsx">FROM Ubuntu<br>ENTRYPOINT [<span class="hljs-string">&quot;sleep&quot;</span>]<br>CMD [<span class="hljs-string">&quot;5&quot;</span>]<br></code></pre></td></tr></table></figure><p><code>ENTRYPOINT</code> means that the user can interrupt the flow of <code>Dockerfile</code> and input some params into it.</p><p>We can also overwrite ENTRYPOINT by <code>--entrypoint</code> in <code>docker run</code></p><h1 id="Compose"><a class="header-anchor" href="#Compose">¬∂</a>Compose</h1><p>If we do not want Docker to pull images from dockerhub, we can replace <code>image</code>  to <code>build</code> in <code>docker-compose.yml</code> so that it knows to build the image from local</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/Untitled%201.png" alt="Untitled"></p><h1 id="Docker-engine"><a class="header-anchor" href="#Docker-engine">¬∂</a>Docker engine</h1><p>Docker engine is composed of :</p><ol><li>Docker CLI</li><li>REST API</li><li>Docker Deamon</li></ol><p>Docker uses namespace to differentiate main system and child system</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/Untitled%202.png" alt="Untitled"></p><h2 id="cgroups"><a class="header-anchor" href="#cgroups">¬∂</a>cgroups</h2><p>cgroups can be used to ensure the limit of CPU usages</p><p><code>docker run --cpus=0.5 ubuntu</code></p><p><code>docker run --memory=100m ubuntu</code></p><h1 id="Docker-storage"><a class="header-anchor" href="#Docker-storage">¬∂</a>Docker storage</h1><p>We can view docker files at  <code>/var/lib/docker</code></p><p>Docker uses layered architecture</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/Untitled%203.png" alt="Untitled"></p><h2 id="COPY-ON-WRITE"><a class="header-anchor" href="#COPY-ON-WRITE">¬∂</a>COPY-ON-WRITE</h2><p>In the container layer, all files are writeable, however. Files on image layers are not writable. But we can copy them into the container layer and change them, but we need to rebuild the image then.</p><h2 id="Volume-Mounting"><a class="header-anchor" href="#Volume-Mounting">¬∂</a>Volume Mounting</h2><p>mount a piece of memory to a named volume, different containers can share this volume</p><h2 id="Bind-mounting"><a class="header-anchor" href="#Bind-mounting">¬∂</a>Bind mounting</h2><p>mount a folder location to a folder location in the container.</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/Untitled%204.png" alt="Untitled"></p><h1 id="Network"><a class="header-anchor" href="#Network">¬∂</a>Network</h1><ul><li><code>bridge</code> is the default network</li><li><code>none</code> is an isolated network</li><li><code>host</code> is a direct mapping with the host network</li><li><code>docker network create</code> create new user-defined network</li><li>Docker has DNS setting so that a container name is directly mapped with the container IP!</li></ul><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/Untitled%205.png" alt="Untitled"></p><h1 id="Orchestration"><a class="header-anchor" href="#Orchestration">¬∂</a>Orchestration</h1><p>A solution to host multiple containers at the same time.</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsx">docker service create --replicas=<span class="hljs-number">100</span> nodejs<br></code></pre></td></tr></table></figure><ul><li>Docker Swarm</li><li>Kubernetes</li><li>Mesos</li></ul>]]></content>
    
    
    <categories>
      
      <category>backend</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx Learning Note</title>
    <link href="/2021/12/12/Nginx-Learning-Note/"/>
    <url>/2021/12/12/Nginx-Learning-Note/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Nginx Learning Note</p><span id="more"></span><h1 id="Nginx-Learning-Note"><a class="header-anchor" href="#Nginx-Learning-Note">¬∂</a>Nginx Learning Note</h1><p>Nginx VS Apache</p><ul><li>Apache: prefork: each process handle one request at a time</li><li>Nginx: asynchronous design: dynamic content is handled by another process separately<ul><li>Faster static resources</li><li>High concurrency</li><li>thousands of requests per process</li><li>Load balancer</li><li>Mail server</li></ul></li></ul><blockquote><p>‚≠ê Nginx interprets incoming requests as URI locations, Apache prefers to interpret requests as filesystem locations.</p></blockquote><p>Nginx Features:</p><ol><li>High performance</li><li>High Concurrency</li><li>Low Resource Usage</li></ol><h1 id="Installation"><a class="header-anchor" href="#Installation">¬∂</a>Installation</h1><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#ubuntu</span><br>apt-get update<br>apt-get install nginx<br>ps aux | grep nginx<br>ifconfig  <span class="hljs-comment">#we can see the link to nginx server after installing/autorun it </span><br><span class="hljs-comment">#centos</span><br><br><span class="hljs-comment"># Remove host history</span><br>ssh-keygen -R 111.11.11.11<br><br>yum install epel-release<br>yum install nginx<br><span class="hljs-comment"># not auto-run</span><br>systemctl start nginx.service<br>ps aux | grep nginx<br></code></pre></td></tr></table></figure><h2 id="Another-way-to-install"><a class="header-anchor" href="#Another-way-to-install">¬∂</a>Another way to install</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get update<br>wget https://nginx.org/download/nginx-1.21.4.tar.gz<br>ls -l<br>&gt; nginx-1.21.4.tar.gz<br>tar -zxvf nginx-1.21.4.tar.gz<br><span class="hljs-built_in">cd</span> ./nginx-1.21.4<br>apt-get build-essential<br>./configure  <span class="hljs-comment"># install prerequsites</span><br>&gt; ...<br>apt-get install libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev<br>./configure<br></code></pre></td></tr></table></figure><h2 id="configure"><a class="header-anchor" href="#configure">¬∂</a>./configure</h2><p>Then, we can configure our Nginx server</p><p><a href="https://nginx.org/en/docs/configure.html">https://nginx.org/en/docs/configure.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure --sbin-path=/usr/bin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/<span class="hljs-built_in">log</span>/nginx/error.log --http-log-path=/var/<span class="hljs-built_in">log</span>/nginx/access.log --with-pcre --pid-path=/var/run/nginx.pid --with-http_ssl_module<br><span class="hljs-comment"># To compile</span><br>make <br>make install<br>ls -l /etc/nginx/<br>nginx -V <span class="hljs-comment"># show version and configuration we installed</span><br>&gt; nginx version: nginx/1.xx.xx<br>ps aux | grep nginx<br></code></pre></td></tr></table></figure><p><strong>Two types of modules:</strong></p><ol><li>Nginx 3rd party modules</li><li>Bundle modules  ‚Äîwith</li></ol><p><a href="https://nginx.org/en/docs/">https://nginx.org/en/docs/</a> Modules reference</p><h2 id="Systemd-Add-Service-Command"><a class="header-anchor" href="#Systemd-Add-Service-Command">¬∂</a>Systemd: Add Service/ Command</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">nginx -h<br>nginx -s stop<br></code></pre></td></tr></table></figure><p><a href="https://www.nginx.com/resources/wiki/start/topics/examples/systemd/">https://www.nginx.com/resources/wiki/start/topics/examples/systemd/</a></p><blockquote><p>Save this file as <code>/lib/systemd/system/nginx.service</code></p></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><span class="hljs-attr">Description</span>=The NGINX HTTP and reverse proxy server<br><span class="hljs-attr">After</span>=syslog.target network-<span class="hljs-literal">on</span>line.target remote-fs.target nss-lookup.target<br><span class="hljs-attr">Wants</span>=network-<span class="hljs-literal">on</span>line.target<br><br><span class="hljs-section">[Service]</span><span class="hljs-attr">Type</span>=forking<br><span class="hljs-attr">PIDFile</span>=/var/run/nginx.pid            <span class="hljs-comment"># changed</span><br><span class="hljs-attr">ExecStartPre</span>=/usr/bin/nginx -t        <span class="hljs-comment"># changed </span><br><span class="hljs-attr">ExecStart</span>=/usr/bin/nginx<br><span class="hljs-attr">ExecReload</span>=/usr/bin/nginx -s reload<br><span class="hljs-attr">ExecStop</span>=/bin/kill -s QUIT <span class="hljs-variable">$MAINPID</span><br><span class="hljs-attr">PrivateTmp</span>=<span class="hljs-literal">true</span><br><br><span class="hljs-section">[Install]</span><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><p>Use <code>systemd</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start nginx<br>systemctl status nginx<br>systemctl stop nginx<br>systemctl <span class="hljs-built_in">enable</span> nginx <span class="hljs-comment"># allows auto-run when machine reboot!</span><br></code></pre></td></tr></table></figure><h2 id="Nginx-Windows-Limits"><a class="header-anchor" href="#Nginx-Windows-Limits">¬∂</a>Nginx Windows Limits</h2><ul><li>Poor performance</li><li>Single worker process</li><li>Unsupported modules</li></ul><h1 id="Configuration-‚öôÔ∏è"><a class="header-anchor" href="#Configuration-‚öôÔ∏è">¬∂</a>Configuration ‚öôÔ∏è</h1><p><code>nginx.conf</code></p><p>Directive: <code>server_name mydomain.com</code></p><p>Context: essentially the scope: <code>http &#123;...&#125;</code></p><p>The conf file itself is included in a global context</p><p>The important context:</p><ul><li>http</li><li>server</li><li>location</li><li>‚Ä¶</li></ul><h2 id="Create-a-virtual-host"><a class="header-anchor" href="#Create-a-virtual-host">¬∂</a>Create a virtual host</h2><p>a virtual host is a <strong>server context</strong></p><p>port : 80 for http, 443 for https</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ls -l /etc/nginx/<br>&gt; nginx.conf<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx.conf</span><br>events &#123;&#125;<br><br>http &#123;<br>server&#123;<br>listen 80;<br>server_name 167.99.xx.xx;<br><br><span class="hljs-comment"># root directive</span><br><span class="hljs-comment"># if http url requests mach with a filename on the directory</span><br>root /sites/demo;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">nginx -t <span class="hljs-comment"># syntax check</span><br>systemctl reload nginx <span class="hljs-comment"># never stop | no down time</span><br>systemctl restart nginx <span class="hljs-comment"># if error happens, do not auto start</span><br></code></pre></td></tr></table></figure><p>Right now <code>nginx</code> is not sending the correct <code>Content-Type</code> as <code>text/plain</code> not stylesheets</p><p>To change this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx.conf</span><br>events &#123;&#125;<br><br>http &#123;<br><br>types &#123;<br>text/html html;<br>text/css css;<br>&#125;<br><br>server&#123;<br>listen 80;<br>server_name 167.99.xx.xx;<br><br><span class="hljs-comment"># root directive</span><br><span class="hljs-comment"># if http url requests mach with a filename on the directory</span><br>root /sites/demo;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>/etc/nginx/mime.types</code> has already set all common types we need, so we only need:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx.conf</span><br>events &#123;&#125;<br><br>http &#123;<br><br>include mime.types; <span class="hljs-comment"># same directory at /etc/nginx as a global value</span><br><br>server&#123;<br>listen 80;<br>server_name 167.99.xx.xx;<br><br><span class="hljs-comment"># root directive</span><br><span class="hljs-comment"># if http url requests mach with a filename on the directory</span><br>root /sites/demo;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p><strong><code>types</code></strong>: This context is again used for mapping. This context is used to map MIME types to the file extensions that should be associated with them. This is usually provided with Nginx through a file that is sourced into the main¬†<code>nginx.conf</code>¬†config file.</p></blockquote><p><a href="https://www.digitalocean.com/community/tutorials/understanding-the-nginx-configuration-file-structure-and-configuration-contexts">https://www.digitalocean.com/community/tutorials/understanding-the-nginx-configuration-file-structure-and-configuration-contexts</a></p><p>Match and intercept an incoming request URI and override the server context‚Äôs configuration inside the location context</p><h2 id="location"><a class="header-anchor" href="#location">¬∂</a>location</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx.conf</span><br>events &#123;&#125;<br><br>http &#123;<br><br>include mime.types; <br>server&#123;<br>listen 80;<br>server_name 167.99.xx.xx;<br><br>root /sites/demo;<br><br><span class="hljs-comment">#prefix match: anything starting from /greet</span><br>location /greet &#123;<br><span class="hljs-built_in">return</span> 200 <span class="hljs-string">&#x27;Hello from /greet location&#x27;</span>;<br>&#125;<br><br><span class="hljs-comment">#exact match</span><br>location = /greet &#123;<br><span class="hljs-built_in">return</span> 200 <span class="hljs-string">&#x27;Hello from /greet location - EXACT MATCH&#x27;</span>;<br>&#125;<br><br><span class="hljs-comment">#REGEX match - case sensitive</span><br>location ~ /greet[0 -9] &#123;<br><span class="hljs-built_in">return</span> 200 <span class="hljs-string">&#x27;Hello from /greet location - REGEX MATCH&#x27;</span>;<br>&#125;<br><br><span class="hljs-comment">#REGEX match - case insensitive</span><br>location ~* /greet[0 -9] &#123;<br><span class="hljs-built_in">return</span> 200 <span class="hljs-string">&#x27;Hello from /greet location - REGEX MATCH INSENSITIVE&#x27;</span>;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>REGEX match has higher priority than the prefix match</p><p>This overwrites the priority for the prefix match</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#preferential prefix match</span><br>location ^~ /greet &#123;<br><span class="hljs-built_in">return</span> 200 <span class="hljs-string">&#x27;Hello from /greet location&#x27;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Priority-order"><a class="header-anchor" href="#Priority-order">¬∂</a>Priority order</h2><ol><li>Exact Match</li><li>Preferential Prefix Match</li><li>REGEX Match</li><li>Prefix Match</li></ol><h2 id="Variables"><a class="header-anchor" href="#Variables">¬∂</a>Variables</h2><p><a href="http://nginx.org/en/docs/varindex.html">http://nginx.org/en/docs/varindex.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx.conf</span><br>events &#123;&#125;<br><br>http &#123;<br><br>include mime.types;<br><br>server&#123;<br>listen 80;<br>server_name 167.99.xx.xx;<br><br>root /sites/demo;<br><br>location /inspect &#123;<br><span class="hljs-built_in">return</span> 200 <span class="hljs-string">&quot;<span class="hljs-variable">$host</span>\n<span class="hljs-variable">$uri</span>\n<span class="hljs-variable">$args</span>&quot;</span>;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Then when we go to the web <code>167.99.xx.xx/inspect?name=ray</code></p><p>we will have</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">167.88.xx.xx<br>/inspect<br>name=ray<br></code></pre></td></tr></table></figure><p>We can output the exact arg to query</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx.conf</span><br>events &#123;&#125;<br><br>http &#123;<br><br>include mime.types;<br><br>server&#123;<br>listen 80;<br>server_name 167.99.xx.xx;<br><br>root /sites/demo;<br><br><span class="hljs-comment"># Check static API key</span><br><span class="hljs-keyword">if</span> ( <span class="hljs-variable">$arg_apikey</span> != 1234 ) &#123;<br><span class="hljs-built_in">return</span> 401 <span class="hljs-string">&quot;incorrect api key&quot;</span><br>&#125;<br><br><span class="hljs-built_in">set</span> <span class="hljs-variable">$weekend</span> <span class="hljs-string">&#x27;No&#x27;</span>;<br><span class="hljs-keyword">if</span> ( <span class="hljs-variable">$date_local</span> ~ <span class="hljs-string">&#x27;Saturday|Sunday&#x27;</span> ) &#123;<br><span class="hljs-built_in">set</span> <span class="hljs-variable">$weekend</span> <span class="hljs-string">&#x27;Yes&#x27;</span>;<br>&#125;<br><br>location /inspect &#123;<br><span class="hljs-built_in">return</span> 200 <span class="hljs-string">&quot;Name: <span class="hljs-variable">$arg_name</span>&quot;</span>;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Rewrite-Redirect-üç•"><a class="header-anchor" href="#Rewrite-Redirect-üç•">¬∂</a>Rewrite/ Redirect üç•</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx.conf</span><br>events &#123;&#125;<br><br>http &#123;<br><br>include mime.types;<br><br>server&#123;<br>listen 80;<br>server_name 167.99.xx.xx;<br><br>root /sites/demo;<br><br>location /logo &#123;<br><span class="hljs-built_in">return</span> 307 /thumb.png;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>/logo</code> is redirect to <code>/thumb.png</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx.conf</span><br>events &#123;&#125;<br><br>http &#123;<br><br>include mime.types;<br><br>server&#123;<br>listen 80;<br>server_name 167.99.xx.xx;<br><br>root /sites/demo;<br><br><span class="hljs-comment">#url is re-evaluated internally in Nginx</span><br><span class="hljs-comment">#rewrite ^/user/(\w+) /greet/$1 last; # ensures it is the last rewrite</span><br>rewrite ^/user/(\w+) /greet/<span class="hljs-variable">$1</span>;<br>rewrite ^/greet/john /thumb.png;<br><br>location /greet &#123;<br><span class="hljs-built_in">return</span> 200 <span class="hljs-string">&quot;Hello user rewrite&quot;</span>;<br>&#125;<br><br>location = /greet/john &#123;<br><span class="hljs-built_in">return</span> 200 <span class="hljs-string">&quot;Hello John&quot;</span>;<br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="try-files-üìÅ"><a class="header-anchor" href="#try-files-üìÅ">¬∂</a>try_files üìÅ</h2><p>check if current URL exsits, if not try if  <code>/sites/demo/thumb.png</code>exitst, show it, if not try next one</p><p><strong>Only last one</strong> would be seen as internal rewrite; meaning others refer to files URI, last one refers to address URL;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx.conf</span><br>events &#123;&#125;<br><br>http &#123;<br><br>include mime.types;<br><br>server&#123;<br>listen 80;<br>server_name 167.99.xx.xx;<br><br>root /sites/demo;<br><br><span class="hljs-comment"># all relative to root</span><br>try_files <span class="hljs-variable">$uri</span> /thumb.png /greet /friendly_404;<br><br>location /friendly_404 &#123;<br><span class="hljs-built_in">return</span> 404 <span class="hljs-string">&quot;not found&quot;</span><br>&#125;<br><br>location /greet &#123;<br><span class="hljs-built_in">return</span> 200 <span class="hljs-string">&quot;Hello user rewrite&quot;</span>;<br>&#125;<br><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="Named-location-üìõ"><a class="header-anchor" href="#Named-location-üìõ">¬∂</a>Named location üìõ</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx.conf</span><br>events &#123;&#125;<br><br>http &#123;<br><br>include mime.types;<br><br>server&#123;<br>listen 80;<br>server_name 167.99.xx.xx;<br><br>root /sites/demo;<br><br><span class="hljs-comment"># all relative to root</span><br>try_files <span class="hljs-variable">$uri</span> /thumb.png /greet @friendly_404;<br><br>location @friendly_404 &#123;<br><span class="hljs-built_in">return</span> 404 <span class="hljs-string">&quot;not found&quot;</span><br>&#125;<br><br>location /greet &#123;<br><span class="hljs-built_in">return</span> 200 <span class="hljs-string">&quot;Hello user rewrite&quot;</span>;<br>&#125;<br><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Logging-üí¨"><a class="header-anchor" href="#Logging-üí¨">¬∂</a>Logging üí¨</h2><p>We have set the logging location when we are configuring Nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ls -l /var/<span class="hljs-built_in">log</span>/nginx/<br><br></code></pre></td></tr></table></figure><p>Create log for a certain location</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># nginx.conf</span><br>events &#123;&#125;<br><br>http &#123;<br><br>include mime.types;<br><br>server&#123;<br>listen 80;<br>server_name 167.99.xx.xx;<br><br>root /sites/demo;<br><br>location /greet &#123;<br><span class="hljs-comment"># this shut down the logging for this location</span><br><span class="hljs-comment">#access_log off</span><br><br>access_log /var/<span class="hljs-built_in">log</span>/nginx/secure.access.log<br><span class="hljs-built_in">return</span> 200 <span class="hljs-string">&quot;Hello user rewrite&quot;</span>;<br>&#125;<br><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Inheritance-‚≠ê"><a class="header-anchor" href="#Inheritance-‚≠ê">¬∂</a>Inheritance ‚≠ê</h2><ol><li>Array directive: inherit straight down recursively in the scope (multiple allows)</li><li>Standard directive: inherit straight down recursively in the scope</li><li>Action directive: just there ~ perform some action</li></ol><p>http ‚Üí server ‚Üí location</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs bash">events &#123;&#125;<br><br><span class="hljs-comment">######################</span><br><span class="hljs-comment"># (1) Array Directive</span><br><span class="hljs-comment">######################</span><br><span class="hljs-comment"># Can be specified multiple times without overriding a previous setting</span><br><span class="hljs-comment"># Gets inherited by all child contexts</span><br><span class="hljs-comment"># Child context can override inheritance by re-declaring directive</span><br>access_log /var/<span class="hljs-built_in">log</span>/nginx/access.log;<br>access_log /var/<span class="hljs-built_in">log</span>/nginx/custom.log.gz custom_format;<br><br>http &#123;<br><br>  <span class="hljs-comment"># Include statement - non directive</span><br>  include mime.types;<br><br>  server &#123;<br>    listen 80;<br>    server_name site1.com;<br><br>    <span class="hljs-comment"># Inherits access_log from parent context (1)</span><br>  &#125;<br><br>  server &#123;<br>    listen 80;<br>    server_name site2.com;<br><br>    <span class="hljs-comment">#########################</span><br>    <span class="hljs-comment"># (2) Standard Directive</span><br>    <span class="hljs-comment">#########################</span><br>    <span class="hljs-comment"># Can only be declared once. A second declaration overrides the first</span><br>    <span class="hljs-comment"># Gets inherited by all child contexts</span><br>    <span class="hljs-comment"># Child context can override inheritance by re-declaring directive</span><br>    root /sites/site2;<br><br>    <span class="hljs-comment"># Completely overrides inheritance from (1)</span><br>    access_log off;<br><br>    location /images &#123;<br><br>      <span class="hljs-comment"># Uses root directive inherited from (2)</span><br>      try_files <span class="hljs-variable">$uri</span> /stock.png;<br>    &#125;<br><br>    location /secret &#123;<br>      <span class="hljs-comment">#######################</span><br>      <span class="hljs-comment"># (3) Action Directive</span><br>      <span class="hljs-comment">#######################</span><br>      <span class="hljs-comment"># Invokes an action such as a rewrite or redirect</span><br>      <span class="hljs-comment"># Inheritance does not apply as the request is either stopped (redirect/response) or re-evaluated (rewrite)</span><br>      <span class="hljs-built_in">return</span> 403 <span class="hljs-string">&quot;You do not have permission to view this.&quot;</span>;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Worker-process"><a class="header-anchor" href="#Worker-process">¬∂</a>Worker process</h2><p>nginx worker is asynchronous, it will handle as much requests as possible as long as hardware is capable of.</p><p><strong>number of process ‚Üê‚Üí number of cores</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl status nginx<br>nproc<br>&gt; 1<br>lscpu<br>&gt; ... cpu info<br><span class="hljs-built_in">ulimit</span> -n<br>&gt; 1024 ...number of files reading at once<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash">user www-data;<br><br>worker_processes auto;   <span class="hljs-comment">#important!</span><br><br>events &#123;<br>  worker_connections 1024;<br>&#125;<br><br>http &#123;<br><br>  include mime.types;<br><br>  server &#123;<br><br>    listen 80;<br>    server_name 167.99.93.26;<br><br>    root /sites/demo;<br><br>    index index.php index.html;<br><br>    location / &#123;<br>      try_files <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ =404;<br>    &#125;<br><br>    location ~\.php$ &#123;<br>      <span class="hljs-comment"># Pass php requests to the php-fpm service (fastcgi)</span><br>      include fastcgi.conf;<br>      fastcgi_pass unix:/run/php/php7.1-fpm.sock;<br>    &#125;<br><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>max connections = worker_processes * worker_connections</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ls -l /var/run/nginx.pid<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># change pid directive</span><br>pid /var/run/new_nginx.pid;<br></code></pre></td></tr></table></figure><h2 id="Buffers"><a class="header-anchor" href="#Buffers">¬∂</a>Buffers</h2><ul><li>Nginx worker recieves request from a TCP port 80</li><li>Nginx worker writes the data to memory RAM (Buffering)<ul><li>If overflow writes into Disk</li></ul></li><li>Nginx worker reads data from disk to memory (Buffering)<ul><li>sends to client from memory</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs bash">user www-data;<br><br>worker_processes auto;<br><br>events &#123;<br>  worker_connections 1024;<br>&#125;<br><br>http &#123;<br><br>  include mime.types;<br><br>  <span class="hljs-comment"># Buffer size for POST submissions</span><br>  client_body_buffer_size 10K;<br>  client_max_body_size 8m;<br><br>  <span class="hljs-comment"># Buffer size for Headers</span><br>  client_header_buffer_size 1k;<br><br>  <span class="hljs-comment"># Max time to receive client headers/body</span><br>  client_body_timeout 12;<br>  client_header_timeout 12;<br><br>  <span class="hljs-comment"># Max time to keep a connection open for</span><br>  keepalive_timeout 15;<br><br>  <span class="hljs-comment"># Max time for the client accept/receive a response</span><br>  send_timeout 10;<br><br>  <span class="hljs-comment"># Skip buffering for static files | could be very helpful to send static files</span><br>  sendfile on;<br><br>  <span class="hljs-comment"># Optimise sendfile packets | could be very helpful to send static files</span><br>  tcp_nopush on;<br><br>  server &#123;<br><br>    listen 80;<br>    server_name 167.99.93.26;<br><br>    root /sites/demo;<br><br>    index index.php index.html;<br><br>    location / &#123;<br>      try_files <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ =404;<br>    &#125;<br><br>    location ~\.php$ &#123;<br>      <span class="hljs-comment"># Pass php requests to the php-fpm service (fastcgi)</span><br>      include fastcgi.conf;<br>      fastcgi_pass unix:/run/php/php7.1-fpm.sock;<br>    &#125;<br><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><a href="http://nginx.org/en/docs/syntax.html">http://nginx.org/en/docs/syntax.html</a></p><h2 id="Adding-new-modules-üÜï"><a class="header-anchor" href="#Adding-new-modules-üÜï">¬∂</a>Adding new modules üÜï</h2><p>New modules require to build Nginx from the source</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">nginx -V<br>&gt; ./configure --sbin-path=/usr/bin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/<span class="hljs-built_in">log</span>/nginx/error.log --http-log-path=/var/<span class="hljs-built_in">log</span>/nginx/access.log --with-pcre --pid-path=/var/run/nginx.pid --with-http_ssl_module<br><br>./configure --<span class="hljs-built_in">help</span><br>&gt; ...all <span class="hljs-built_in">help</span> config<br>./configure -- <span class="hljs-built_in">help</span> | grep dynamic<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure --sbin-path=/usr/bin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/<span class="hljs-built_in">log</span>/nginx/error.log --http-log-path=/var/<span class="hljs-built_in">log</span>/nginx/access.log --with-pcre --pid-path=/var/run/nginx.pid --with-http_ssl_module --with-http_image_filter_module=dynamic<br><br></code></pre></td></tr></table></figure><p>we need to append <code>--modules-path=/etc/nginx/modules</code></p><p>to make dynamic modules to be loaded to the corresponding module</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get install libgd-dev<br>./configure --sbin-path=/usr/bin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/<span class="hljs-built_in">log</span>/nginx/error.log --http-log-path=/var/<span class="hljs-built_in">log</span>/nginx/access.log --with-pcre --pid-path=/var/run/nginx.pid --with-http_ssl_module --with-http_image_filter_module=dynamic<br>make<br>make install<br>nginx -V<br>systemctl reload nginx<br></code></pre></td></tr></table></figure><p><a href="http://nginx.org/en/docs/http/ngx_http_image_filter_module.html">http://nginx.org/en/docs/http/ngx_http_image_filter_module.html</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs bash">user www-data;<br><br>worker_processes auto;<br><br>load_module modules/ngx_http_image_filter_module.so;<br><br>events &#123;<br>  worker_connections 1024;<br>&#125;<br><br>http &#123;<br><br>  include mime.types;<br><br>  <span class="hljs-comment"># Buffer size for POST submissions</span><br>  client_body_buffer_size 10K;<br>  client_max_body_size 8m;<br><br>  <span class="hljs-comment"># Buffer size for Headers</span><br>  client_header_buffer_size 1k;<br><br>  <span class="hljs-comment"># Max time to receive client headers/body</span><br>  client_body_timeout 12;<br>  client_header_timeout 12;<br><br>  <span class="hljs-comment"># Max time to keep a connection open for</span><br>  keepalive_timeout 15;<br><br>  <span class="hljs-comment"># Max time for the client accept/receive a response</span><br>  send_timeout 10;<br><br>  <span class="hljs-comment"># Skip buffering for static files</span><br>  sendfile on;<br><br>  <span class="hljs-comment"># Optimise sendfile packets</span><br>  tcp_nopush on;<br><br>  server &#123;<br><br>    listen 80;<br>    server_name 167.99.93.26;<br><br>    root /sites/demo;<br><br>    index index.php index.html;<br><br>    location / &#123;<br>      try_files <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ =404;<br>    &#125;<br><br>    location ~\.php$ &#123;<br>      <span class="hljs-comment"># Pass php requests to the php-fpm service (fastcgi)</span><br>      include fastcgi.conf;<br>      fastcgi_pass unix:/run/php/php7.1-fpm.sock;<br>    &#125;<br><br>    location = /thumb.png &#123;<br>      image_filter rotate 180;<br>    &#125;<br><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="Performance"><a class="header-anchor" href="#Performance">¬∂</a>Performance</h1><h2 id="Headers-Expires"><a class="header-anchor" href="#Headers-Expires">¬∂</a>Headers &amp; Expires</h2><p>Defines the duration of how long a static file a browser should cache</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs bash">user www-data;<br><br>worker_processes auto;<br><br>events &#123;<br>  worker_connections 1024;<br>&#125;<br><br>http &#123;<br><br>  include mime.types;<br><br>  server &#123;<br><br>    listen 80;<br>    server_name 167.99.93.26;<br><br>    root /sites/demo;<br><br>    index index.php index.html;<br><br>    location / &#123;<br>      try_files <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ =404;<br>    &#125;<br><br>    location ~\.php$ &#123;<br>      <span class="hljs-comment"># Pass php requests to the php-fpm service (fastcgi)</span><br>      include fastcgi.conf;<br>      fastcgi_pass unix:/run/php/php7.1-fpm.sock;<br>    &#125;<br><br><span class="hljs-comment">#location = /thumb.png &#123;</span><br><span class="hljs-comment">#add_header Cache-Control public;</span><br><span class="hljs-comment">#add_header Pragma public;</span><br><span class="hljs-comment">#add_header Vary Accept-Encoding;</span><br><span class="hljs-comment">#expires 60m;</span><br><span class="hljs-comment">#&#125;</span><br><br>    location ~* \.(css|js|jpg|png)$ &#123;<br>      access_log off;<br>      add_header Cache-Control public;<br>      add_header Pragma public;<br>      add_header Vary Accept-Encoding;<br>      expires 1M;<br>    &#125;<br><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="gzip"><a class="header-anchor" href="#gzip">¬∂</a>gzip</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs bash">user www-data;<br><br>worker_processes auto;<br><br>events &#123;<br>  worker_connections 1024;<br>&#125;<br><br>http &#123;<br><br>  include mime.types;<br><br>  gzip on;<br>  gzip_comp_level 3;<br><br>  gzip_types text/css;<br>  gzip_types text/javascript;<br><br>  server &#123;<br><br>    listen 80;<br>    server_name 167.99.93.26;<br><br>    root /sites/demo;<br><br>    index index.php index.html;<br><br>    location / &#123;<br>      try_files <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ =404;<br>    &#125;<br><br>    location ~\.php$ &#123;<br>      <span class="hljs-comment"># Pass php requests to the php-fpm service (fastcgi)</span><br>      include fastcgi.conf;<br>      fastcgi_pass unix:/run/php/php7.1-fpm.sock;<br>    &#125;<br><br>    location ~* \.(css|js|jpg|png)$ &#123;<br>      access_log off;<br>      add_header Cache-Control public;<br>      add_header Pragma public;<br>      add_header Vary Accept-Encoding;<br>      expires 1M;<br>    &#125;<br><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="FastCGI-Cache"><a class="header-anchor" href="#FastCGI-Cache">¬∂</a>FastCGI Cache</h1><p>cache between Nginx and backend-server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs bash">user www-data;<br><br>worker_processes auto;<br><br>events &#123;<br>  worker_connections 1024;<br>&#125;<br><br>http &#123;<br><br>  include mime.types;<br><br>  <span class="hljs-comment"># Configure microcache (fastcgi)</span><br>  fastcgi_cache_path /tmp/nginx_cache levels=1:2 keys_zone=ZONE_1:100m inactive=60m;<br>  fastcgi_cache_key <span class="hljs-string">&quot;$scheme$request_method$host<span class="hljs-variable">$request_uri</span>&quot;</span>;<br>  add_header X-Cache <span class="hljs-variable">$upstream_cache_status</span>;<br><br>  server &#123;<br><br>    listen 80;<br>    server_name 167.99.93.26;<br><br>    root /sites/demo;<br><br>    index index.php index.html;<br><br>    <span class="hljs-comment"># Cache by default</span><br>    <span class="hljs-built_in">set</span> <span class="hljs-variable">$no_cache</span> 0;<br><br>    <span class="hljs-comment"># Check for cache bypass</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$arg_skipcache</span> = 1) &#123;<br>      <span class="hljs-built_in">set</span> <span class="hljs-variable">$no_cache</span> 1;<br>    &#125;<br><br>    location / &#123;<br>      try_files <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ =404;<br>    &#125;<br><br>    location ~\.php$ &#123;<br>      <span class="hljs-comment"># Pass php requests to the php-fpm service (fastcgi)</span><br>      include fastcgi.conf;<br>      fastcgi_pass unix:/run/php/php7.1-fpm.sock;<br><br>      <span class="hljs-comment"># Enable cache</span><br>      fastcgi_cache ZONE_1;<br>      fastcgi_cache_valid 200 60m;<br>      fastcgi_cache_bypass <span class="hljs-variable">$no_cache</span>;<br>      fastcgi_no_cache <span class="hljs-variable">$no_cache</span>;<br>    &#125;<br><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="Security"><a class="header-anchor" href="#Security">¬∂</a>Security</h1><h2 id="HTTPS"><a class="header-anchor" href="#HTTPS">¬∂</a>HTTPS</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs bash">user www-data;<br><br>worker_processes auto;<br><br>events &#123;<br>  worker_connections 1024;<br>&#125;<br><br>http &#123;<br><br>  include mime.types;<br><br>  <span class="hljs-comment"># Redirect all traffic to HTTPS</span><br>  server &#123;<br>    listen 80;<br>    server_name 167.99.93.26;<br>    <span class="hljs-built_in">return</span> 301 https://$host<span class="hljs-variable">$request_uri</span>;<br>  &#125;<br><br>  server &#123;<br><br>    listen 443 ssl http2;<br>    server_name 167.99.93.26;<br><br>    root /sites/demo;<br><br>    index index.html;<br><br>    ssl_certificate /etc/nginx/ssl/self.crt;<br>    ssl_certificate_key /etc/nginx/ssl/self.key;<br><br>    <span class="hljs-comment"># Disable SSL</span><br>    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;<br><br>    <span class="hljs-comment"># Optimise cipher suits</span><br>    ssl_prefer_server_ciphers on;<br>    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;<br><br>    <span class="hljs-comment"># Enable DH Params</span><br>    ssl_dhparam /etc/nginx/ssl/dhparam.pem;<br><br>    <span class="hljs-comment"># Enable HSTS</span><br>    add_header Strict-Transport-Security <span class="hljs-string">&quot;max-age=31536000&quot;</span> always;<br><br>    <span class="hljs-comment"># SSL sessions</span><br>    ssl_session_cache shared:SSL:40m;<br>    ssl_session_timeout 4h;<br>    ssl_session_tickets on;<br><br>    location / &#123;<br>      try_files <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ =404;<br>    &#125;<br><br>    location ~\.php$ &#123;<br>      <span class="hljs-comment"># Pass php requests to the php-fpm service (fastcgi)</span><br>      include fastcgi.conf;<br>      fastcgi_pass unix:/run/php/php7.1-fpm.sock;<br>    &#125;<br><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Rate-Limiting"><a class="header-anchor" href="#Rate-Limiting">¬∂</a>Rate Limiting</h2><ul><li>Security - Brute Force Protection</li><li>Reliability - Prevent Traffic Spikes</li><li>Shaping - Service Priority</li></ul><p>„ÄÇ„ÄÇ„ÄÇË¶ÅÁî®Âà∞ÂÜçÁúãÂêß<a href="https://www.udemy.com/course/nginx-fundamentals/learn/lecture/10617504#questions">https://www.udemy.com/course/nginx-fundamentals/learn/lecture/10617504#questions</a></p><h1 id="Reverse-Proxy"><a class="header-anchor" href="#Reverse-Proxy">¬∂</a>Reverse Proxy</h1><p>The proxy allows users to be anonymous to the server.</p><p>The reverse proxy allows the server to be anonymous to users</p><p><a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers">http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers</a></p><p><a href="https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/">https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/</a></p><h2 id="Load-balancer"><a class="header-anchor" href="#Load-balancer">¬∂</a>Load balancer</h2><ol><li>Distribute requests to multiple servers</li><li>Provide redundancy (if one fails, Nginx can redirect to another server)</li></ol><p><code>upstream</code> is the key. Round-Robben: We then distribute requests to all upstream servers equally!!</p><p>See docs for detail</p><p><a href="http://nginx.org/en/docs/http/ngx_http_upstream_module.html">http://nginx.org/en/docs/http/ngx_http_upstream_module.html</a></p><p><a href="https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/">https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/</a></p><p><a href="http://nginx.org/en/docs/http/load_balancing.html">http://nginx.org/en/docs/http/load_balancing.html</a></p><p>If one server is down, Nginx will automatically redirect requests to the available server! So cool!</p><h2 id="Other-load-balance-option"><a class="header-anchor" href="#Other-load-balance-option">¬∂</a>Other load balance option</h2><ol><li>Sticky Session:  <code>ip_hash;</code>  (for example: session state )</li><li>Avoid heavy connections on a server: <code>least_conn</code></li><li></li></ol><p>Some docs:</p><p><a href="https://www.digitalocean.com/community/search?q=nginx">https://www.digitalocean.com/community/search?q=nginx</a></p><p><a href="http://nginx.org/en/docs/">http://nginx.org/en/docs/</a></p><p><a href="https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/">https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/</a></p><h1 id="Other-Adds-on-My-Notes-üìí"><a class="header-anchor" href="#Other-Adds-on-My-Notes-üìí">¬∂</a>Other Adds -on | My Notes üìí</h1><p>http:// 80</p><p>https:// 443</p><h2 id="Benefits-of-proxy"><a class="header-anchor" href="#Benefits-of-proxy">¬∂</a>Benefits of proxy</h2><ol><li>Anonymity</li><li>Caching</li><li>Blocking unwanted sites</li><li>GeoFencing</li></ol><h2 id="Benefits-of-reverse-proxy"><a class="header-anchor" href="#Benefits-of-reverse-proxy">¬∂</a>Benefits of reverse proxy</h2><ol><li>Load balancing</li><li>Caching</li><li>Isolating internal traffic</li><li>Canary Deployment</li></ol>]]></content>
    
    
    <categories>
      
      <category>backend</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My React Learning Note (6)</title>
    <link href="/2021/11/22/react_notes_6/"/>
    <url>/2021/11/22/react_notes_6/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>GraphQL</p><span id="more"></span><h1 id="My-React-Learning-Note-6"><a class="header-anchor" href="#My-React-Learning-Note-6">¬∂</a>My React Learning Note (6)</h1><p><a href="https://github.com/ZhangMYihua/crwn-clothing-prisma">https://github.com/ZhangMYihua/crwn-clothing-prisma</a></p><h2 id="Apollo"><a class="header-anchor" href="#Apollo">¬∂</a>Apollo</h2><p>Apollo basic:</p><figure class="highlight javascript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; ApolloProvider &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-apollo&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; createHttpLink &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;apollo-link-http&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; InMemoryCache &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;apollo-cache-inmemory&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; ApolloClient, gql &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;apollo-boost&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./index.css&quot;</span>;<br><span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App&quot;</span>;<br><br><span class="hljs-keyword">const</span> httpLink = createHttpLink(&#123;<br>  uri: <span class="hljs-string">&quot;https://crwn-clothing.com&quot;</span>,<br>&#125;);<br><br><span class="hljs-keyword">const</span> cache = <span class="hljs-keyword">new</span> InMemoryCache();<br><br><span class="hljs-keyword">const</span> client = <span class="hljs-keyword">new</span> ApolloClient(&#123;<br>  link: httpLink,<br>  cache,<br>&#125;);<br><br>client<br>  .query(&#123;<br>    query: gql<span class="hljs-string">`</span><br><span class="hljs-string">      &#123;</span><br><span class="hljs-string">        getCollectionsByTitle(title: &quot;hats&quot;) &#123;</span><br><span class="hljs-string">          id</span><br><span class="hljs-string">          title</span><br><span class="hljs-string">          items &#123;</span><br><span class="hljs-string">            id</span><br><span class="hljs-string">            name</span><br><span class="hljs-string">            price</span><br><span class="hljs-string">            imageUrl</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    `</span>,<br>  &#125;)<br>  .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> <span class="hljs-built_in">console</span>.log(res));<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>React</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blogs</tag>
      
      <tag>JS</tag>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My React Learning Note (5)</title>
    <link href="/2021/11/21/react_notes_5/"/>
    <url>/2021/11/21/react_notes_5/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Hooks</p><span id="more"></span><h1 id="My-React-Learning-Note-5"><a class="header-anchor" href="#My-React-Learning-Note-5">¬∂</a>My React Learning Note (5)</h1><h1 id="Topic-Hooks"><a class="header-anchor" href="#Topic-Hooks">¬∂</a>Topic: Hooks</h1><h2 id="useSelector-useDispatch"><a class="header-anchor" href="#useSelector-useDispatch">¬∂</a>useSelector, useDispatch</h2><p><code>useSelector</code> , <code>useDispatch</code> ÊòØ‰∏§‰∏™ <code>react-redux</code> Êèê‰æõÁöÑhooks,ËøôÊ†∑Â∞±‰∏çÈúÄË¶Å <code>mapStateToProps</code></p><p>Âíå <code>mapDispatchToProps</code></p><h2 id="useState"><a class="header-anchor" href="#useState">¬∂</a>useState</h2><p><a href="https://github.com/ZhangMYihua/use-state-example">https://github.com/ZhangMYihua/use-state-example</a></p><figure class="highlight jsx"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">const</span> [name, setName] = useState(<span class="hljs-string">&#x27;Haha&#x27;</span>)<br><br>&lt;button onClick = &#123;<span class="hljs-function">() =&gt;</span> setName(<span class="hljs-string">&quot;Wahaha&quot;</span>)&#125;&gt;<span class="hljs-built_in">Set</span> Name to Wahaha &lt;/button&gt;<br><br></code></pre></td></tr></table></figure><h2 id="useEffect"><a class="header-anchor" href="#useEffect">¬∂</a>useEffect</h2><p>a function gets called whenever the update lifecycle method (re-render) is fired</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript">userEffect(<span class="hljs-function">()=&gt;</span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;hello&#x27;</span>)<br>&#125;) <span class="hljs-comment">//fire for any update</span><br><span class="hljs-comment">//--------------</span><br><br>userEffect(<span class="hljs-function">()=&gt;</span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;hello&#x27;</span>)<br>&#125;, []) <span class="hljs-comment">//fire for nothing but first time load</span><br><br><span class="hljs-comment">//-------------------</span><br><br>userEffect(<span class="hljs-function">()=&gt;</span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;hello&#x27;</span>)<br>&#125;, [user]) <span class="hljs-comment">//only filre for item in [item]</span><br><br></code></pre></td></tr></table></figure><p>use Async function in <code>useEffect</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">useEffect(<span class="hljs-function">()=&gt;</span>&#123;<br>    <span class="hljs-keyword">const</span> fetchFunc = <span class="hljs-keyword">async</span> () =&gt;&#123;<br>        <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> fetch(<span class="hljs-string">`https://.....`</span>)<br>    <span class="hljs-keyword">const</span> resJson = <span class="hljs-keyword">await</span> response.json()<br>        setUser(resJson[<span class="hljs-number">0</span>])<br>        &#125;<br>    fetchFunc();<br>&#125;)<br></code></pre></td></tr></table></figure><p>The code above will cause an infinite loop between:</p><p>setUser (update DOM) -&gt; useEffect -&gt; setUser -&gt; useEffect‚Ä¶</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Then this will be called once when mount!</span><br>useEffect(<span class="hljs-function">()=&gt;</span>&#123;<br>    <span class="hljs-keyword">const</span> fetchFunc = <span class="hljs-keyword">async</span> () =&gt;&#123;<br>        <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> fetch(<span class="hljs-string">`https://.....`</span>)<br>    <span class="hljs-keyword">const</span> resJson = <span class="hljs-keyword">await</span> response.json()<br>        setUser(resJson[<span class="hljs-number">0</span>])<br>        &#125;<br>    fetchFunc();<br>&#125;, [searchQuery])<br></code></pre></td></tr></table></figure><p><strong>If we want condition, we put them into <code>useEffect</code></strong></p><h2 id="Class-based-component-to-Function-based-component"><a class="header-anchor" href="#Class-based-component-to-Function-based-component">¬∂</a>Class-based component to Function-based component</h2><p>Some thing we changed from class-based components to function-based components:</p><ol><li><p><code>this.state</code> -&gt; <code>useState</code></p></li><li><p><code>this.props</code></p><p>We destructure props we want from the input params of the function component</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> SignIn = <span class="hljs-function">(<span class="hljs-params">&#123; emailSignInStart, googleSignInStart &#125;</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> [userCredentials, setUserCredentials] = useState(&#123;<br>    email: <span class="hljs-string">&quot;&quot;</span>,<br>    password: <span class="hljs-string">&quot;&quot;</span>,<br>  &#125;);<br> <span class="hljs-keyword">return</span> (...)<br>&#125;<br><br><br></code></pre></td></tr></table></figure><p>Ê≥®ÊÑèÔºåÂ¶ÇÊûúÂΩìÊàë‰ª¨ÊääÂ§ö‰∏™ state values ÂèòÊàê‰∏Ä‰∏™ object ÁÑ∂Âêé‰∏ÄËµ∑Êõ¥Êñ∞Êó∂Ôºö</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> [userCredentials, setUserCredentials] = useState(&#123;<br>    displayName: <span class="hljs-string">&quot;&quot;</span>,<br>    email: <span class="hljs-string">&quot;&quot;</span>,<br>    password: <span class="hljs-string">&quot;&quot;</span>,<br>    confirmPassword: <span class="hljs-string">&quot;&quot;</span>,<br>  &#125;);<br><br><span class="hljs-keyword">const</span> &#123; displayName, email, password, confirmPassword &#125; = userCredentials;  <br><br><span class="hljs-keyword">const</span> handleChange = <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;here&quot;</span>);<br>    <span class="hljs-built_in">console</span>.log(event.target);<br>    <span class="hljs-keyword">const</span> &#123; name, value &#125; = event.target;<br><br>    <span class="hljs-comment">// only update the one we want!</span><br>    setUserCredentials(&#123; ...userCredentials, [name]: value &#125;);<br>  &#125;;<br></code></pre></td></tr></table></figure><p>One component will re-render only in three conditions:</p><ol><li>Props change</li><li><code>setState</code> from <code>useState</code></li><li>parent re-render</li></ol><h2 id="userEffect-Unmount"><a class="header-anchor" href="#userEffect-Unmount">¬∂</a>userEffect -&gt; Unmount</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">useEffect(<span class="hljs-function">() =&gt;</span> &#123;<br><br>    <span class="hljs-comment">//clean up function</span><br>  <span class="hljs-keyword">return</span> <span class="hljs-function">() =&gt;</span> &#123;<br>    <br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript">useEffect(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;I am subscribing&quot;</span>);<br>  <span class="hljs-keyword">const</span> unsubscribeFromCollection = firestore<br>    .collection(<span class="hljs-string">&quot;collections&quot;</span>)<br>    .onSnapshot(<span class="hljs-function">(<span class="hljs-params">snapshot</span>) =&gt;</span> <span class="hljs-built_in">console</span>.log(snapshot));<br>  <br>    <span class="hljs-comment">// cleanup function</span><br>  <span class="hljs-keyword">return</span> <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;I am unsubscribing!&quot;</span>);<br>    unsubscribeFromCollection();<br>  &#125;;<br>&#125;, []); <span class="hljs-comment">// pass empty list to avoid infinite loop</span><br><br></code></pre></td></tr></table></figure><h1 id="useEffect-Cheat-Sheet"><a class="header-anchor" href="#useEffect-Cheat-Sheet">¬∂</a>useEffect Cheat Sheet</h1><p>A quick recap of what we have learned about useEffect:</p><h4 id="ComponentDidMount"><a class="header-anchor" href="#ComponentDidMount">¬∂</a>ComponentDidMount</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//Class</span><br><span class="hljs-function"><span class="hljs-title">componentDidMount</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;I just mounted!&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">//Hooks</span><br>useEffect(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;I just mounted!&#x27;</span>);<br>&#125;, [])<br></code></pre></td></tr></table></figure><h4 id="ComponentWillUnmount"><a class="header-anchor" href="#ComponentWillUnmount">¬∂</a>ComponentWillUnmount</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//Class</span><br><span class="hljs-function"><span class="hljs-title">componentWillUnmount</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;I am unmounting&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">//Hooks</span><br>useEffect(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;I am unmounting&#x27;</span>);<br>&#125;, [])<br></code></pre></td></tr></table></figure><h4 id="ComponentWillReceiveProps"><a class="header-anchor" href="#ComponentWillReceiveProps">¬∂</a>ComponentWillReceiveProps</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//Class</span><br><span class="hljs-function"><span class="hljs-title">componentWillReceiveProps</span>(<span class="hljs-params">nextProps</span>)</span> &#123;<br>    <span class="hljs-keyword">if</span> (nextProps.count !== <span class="hljs-built_in">this</span>.props.count) &#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;count changed&#x27;</span>, nextProps.count);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//Hooks</span><br>useEffect(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;count changed&#x27;</span>, props.count);<br>&#125;, [props.count])<br></code></pre></td></tr></table></figure><h1 id="Custom-Hook"><a class="header-anchor" href="#Custom-Hook">¬∂</a>Custom Hook</h1><p><a href="https://github.com/ZhangMYihua/custom-hook-example">https://github.com/ZhangMYihua/custom-hook-example</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs JAVASCRIPT"><span class="hljs-comment">// src/effects/use-fetch.effect.js</span><br><br><br><span class="hljs-keyword">import</span> &#123; useState, useEffect &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>;<br><br><span class="hljs-keyword">const</span> useFetch = <span class="hljs-function"><span class="hljs-params">url</span> =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> [data, setData] = useState(<span class="hljs-literal">null</span>);<br><br>  useEffect(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> fetchData = <span class="hljs-keyword">async</span> () =&gt; &#123;<br>      <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> fetch(url);<br>      <span class="hljs-keyword">const</span> dataArray = <span class="hljs-keyword">await</span> res.json();<br>      setData(dataArray[<span class="hljs-number">0</span>]);<br>    &#125;;<br><br>    fetchData();<br>  &#125;, [url]);<br><span class="hljs-comment">//only fire when url change, or if we want to always update data whenver something change, don&#x27;t pass second param</span><br>  <span class="hljs-keyword">return</span> data;<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> useFetch;<br></code></pre></td></tr></table></figure><h1 id="useReducer"><a class="header-anchor" href="#useReducer">¬∂</a>useReducer</h1><p><a href="https://github.com/ZhangMYihua/useReducer-example">https://github.com/ZhangMYihua/useReducer-example</a></p><p><a href="https://reactjs.org/docs/hooks-reference.html#usereducer">https://reactjs.org/docs/hooks-reference.html#usereducer</a></p><p><a href="https://react-redux.js.org/api/hooks">https://react-redux.js.org/api/hooks</a></p><h1 id="React-Redux-Hook"><a class="header-anchor" href="#React-Redux-Hook">¬∂</a>React-Redux Hook</h1><h2 id="useSelector-useDispatch-v2"><a class="header-anchor" href="#useSelector-useDispatch-v2">¬∂</a>useSelector, useDispatch</h2><blockquote><p>useSelector: Allows you to extract data from the Redux store state, using a selector function.</p><p>The selector is approximately equivalent to the <a href="https://react-redux.js.org/using-react-redux/connect-mapstate"><code>mapStateToProps</code> argument to <code>connect</code></a> conceptually.</p><p><code>useSelector()</code> will also subscribe to the Redux store, and run your selector whenever an action is dispatched.</p></blockquote><blockquote><p>useDispatch: This hook returns a reference to the <code>dispatch</code> function from the Redux store. You may use it to dispatch actions as needed.</p></blockquote><p>selector itself is a function receives state object</p><p><code>useSelector</code> receives a selector that returns some state, and useSelector will ensure to up-to-date with the state.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-keyword">const</span> App = <span class="hljs-function">() =&gt;</span> &#123;<br>   <br>  <span class="hljs-keyword">const</span> currentUser = useSelector(selectCurrentUser);<br>  <span class="hljs-keyword">const</span> dispatch = useDispatch();<br>    <br>  <span class="hljs-comment">// const func = ()=&gt;&#123;...&#125;</span><br>  <span class="hljs-comment">// This will re-assign  everytime re-render</span><br>    <br>  <span class="hljs-comment">//Only when mount</span><br>  useEffect(<span class="hljs-function">() =&gt;</span> &#123;<br>    dispatch(checkUserSession());<br>  &#125;, [dispatch]);<br>   <br>  <span class="hljs-keyword">return</span> (...)<br>&#125;<br><br></code></pre></td></tr></table></figure><h1 id="Adavanced-useState-useEffect"><a class="header-anchor" href="#Adavanced-useState-useEffect">¬∂</a>Adavanced useState, useEffect</h1><p>When a functional component gets re-rendered, do it from top to bottom in synchronous manner.</p><p>A component is re-rendered if</p><ol><li>Props change</li><li>State change</li><li>parent re-render</li></ol><p>We can pass in a function into <code>useState</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">setCount(<span class="hljs-function">(<span class="hljs-params">prev</span>) =&gt;</span> prev+<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p>If a function is dependent on a state, we shall put that function into <code>useEffect</code>. If not, we can place it out of component so it only renders once.</p><h2 id="useCallback"><a class="header-anchor" href="#useCallback">¬∂</a>useCallback</h2><p>If a function depends on a state but is outside of <code>useEffect</code> We cannot know its dependency from looking at the code.</p><p>we can use <code>useEffect</code> to preserve function outside of <code>useEffect</code> and know its dependency</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> myFunc = useCallback(<span class="hljs-function">()=&gt;</span>&#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;effect on&#x27;</span> + test1)<br>&#125;, [test1])<br><br>useEffect(<span class="hljs-function">()=&gt;</span>&#123;<br>    myFunc()<br>&#125;, myFunc)<br></code></pre></td></tr></table></figure><h2 id="useMemo"><a class="header-anchor" href="#useMemo">¬∂</a>useMemo</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">cosnt myObj = &#123;<br>    a: <span class="hljs-string">&#x27;my value of a is &#x27;</span>+ test1<br>&#125;<br><br>useEffect(<span class="hljs-function">()=&gt;</span>&#123;<br>    <span class="hljs-built_in">console</span>.log(myObj.a)<br>&#125;, [myObj])<br></code></pre></td></tr></table></figure><p>This will always be re-rendered every single time regardless of whether <code>myObj</code> changed or not</p><p>(reference comparison, a new object is initialize every single time for the functional component re-rendering)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">cosnt myObj = useMemo(<span class="hljs-function">() =&gt;</span> (&#123;<br>    a: <span class="hljs-string">&#x27;my value of a is &#x27;</span>+ test1<br>&#125;), [test1])<br><br>useEffect(<span class="hljs-function">()=&gt;</span>&#123;<br>    <span class="hljs-built_in">console</span>.log(myObj.a)<br>&#125;, [myObj])<br></code></pre></td></tr></table></figure><p><strong>useMemo and useCallback can be very helpful when you want some behavior to be performed based on a specific object or function</strong></p><h2 id="useLayoutEffect"><a class="header-anchor" href="#useLayoutEffect">¬∂</a>useLayoutEffect</h2><p><code>useEffect</code> runs after the paint of the component</p><p><code>useLayoutEffect</code> runs before the paint of the component</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/image-20211121155030357.png" alt="image-20211121155030357"></p><h2 id="useContext"><a class="header-anchor" href="#useContext">¬∂</a>useContext</h2><p>Component way of using context (replacing Redux)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; connect &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-redux&quot;</span>;<br><br><span class="hljs-keyword">import</span> CollectionItem <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/collection-item/collection-item.component&quot;</span>;<br><br><span class="hljs-keyword">import</span> &#123; selectCollection &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../redux/shop/shop.selectors&quot;</span>;<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./collection.styles.scss&quot;</span>;<br><br><span class="hljs-keyword">import</span> CollectionsContext <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../contexts/collections/collections.context&quot;</span>;<br><br><span class="hljs-keyword">const</span> CollectionPage = <span class="hljs-function">(<span class="hljs-params">&#123; match &#125;</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> (<br>    &lt;CollectionsContext.Consumer&gt;<br>      &#123;<span class="hljs-function">(<span class="hljs-params">collections</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">/* Input param is the context we get from CollectionsContext.Consumer */</span><br>        <span class="hljs-keyword">const</span> collection = collections[match.params.collectionId];<br>        <span class="hljs-keyword">const</span> &#123; title, items &#125; = collection;<br>        <span class="hljs-keyword">return</span> (<br>          &lt;div className=<span class="hljs-string">&quot;collection-page&quot;</span>&gt;<br>            &lt;h2 className=<span class="hljs-string">&quot;title&quot;</span>&gt;&#123;title&#125;&lt;/h2&gt;<br>            &lt;div className=<span class="hljs-string">&quot;items&quot;</span>&gt;<br>              &#123;items.map(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> (<br>                &lt;CollectionItem key=&#123;item.id&#125; item=&#123;item&#125; /&gt;<br>              ))&#125;<br>            &lt;/div&gt;<br>          &lt;/div&gt;<br>        );<br>      &#125;&#125;<br>    &lt;/CollectionsContext.Consumer&gt;<br>  );<br>&#125;;<br><br><span class="hljs-keyword">const</span> mapStateToProps = <span class="hljs-function">(<span class="hljs-params">state, ownProps</span>) =&gt;</span> (&#123;<br>  collection: selectCollection(ownProps.match.params.collectionId)(state),<br>&#125;);<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> CollectionPage;<br><br></code></pre></td></tr></table></figure><p><code>useContext</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> React, &#123; useContext &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; connect &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-redux&quot;</span>;<br><br><span class="hljs-keyword">import</span> CollectionItem <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../components/collection-item/collection-item.component&quot;</span>;<br><br><span class="hljs-keyword">import</span> &#123; selectCollection &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../redux/shop/shop.selectors&quot;</span>;<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./collection.styles.scss&quot;</span>;<br><br><span class="hljs-keyword">import</span> CollectionsContext <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../contexts/collections/collections.context&quot;</span>;<br><br><span class="hljs-keyword">const</span> CollectionPage = <span class="hljs-function">(<span class="hljs-params">&#123; match &#125;</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> collections = useContext(CollectionsContext);<br>  <span class="hljs-keyword">const</span> &#123; title, items &#125; = collections[match.params.collectionId];<br>  <span class="hljs-keyword">return</span> (<br>    &lt;div className=<span class="hljs-string">&quot;collection-page&quot;</span>&gt;<br>      &lt;h2 className=<span class="hljs-string">&quot;title&quot;</span>&gt;&#123;title&#125;&lt;/h2&gt;<br>      &lt;div className=<span class="hljs-string">&quot;items&quot;</span>&gt;<br>        &#123;items.map(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> (<br>          &lt;CollectionItem key=&#123;item.id&#125; item=&#123;item&#125; /&gt;<br>        ))&#125;<br>      &lt;/div&gt;<br>    &lt;/div&gt;<br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> CollectionPage;<br></code></pre></td></tr></table></figure><p>However, <code>useContext</code> is not very handy when we need to update a state.  The problem it solves is to easily pass a state of a high node in the DOM tree easily to the lower state.</p><p>An example:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//src/providers/cart/cart.provider.jsx</span><br><span class="hljs-keyword">import</span> React, &#123; createContext, useContext, useEffect, useState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><br><span class="hljs-keyword">import</span> &#123; addItemToCart, removeItemFromCart &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./cart.utils&quot;</span>;<br><br><span class="hljs-comment">// Vehicle to pass around the local state</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> CartContext = createContext(&#123;<br>  hidden: <span class="hljs-literal">true</span>,<br>  toggleHidden: <span class="hljs-function">() =&gt;</span> &#123;&#125;,<br>  cartItems: [],<br>  addItem: <span class="hljs-function">() =&gt;</span> &#123;&#125;,<br>  removeItem: <span class="hljs-function">() =&gt;</span> &#123;&#125;,<br>  clearItemFromCart: <span class="hljs-function">() =&gt;</span> &#123;&#125;,<br>  cartItemsCount: <span class="hljs-number">0</span>,<br>&#125;);<br><br><span class="hljs-keyword">const</span> CartProvider = <span class="hljs-function">(<span class="hljs-params">&#123; children &#125;</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">//the actual state that is passed down to children components </span><br>  <span class="hljs-keyword">const</span> [cartItems, setCartItems] = useState([]);<br>  <span class="hljs-keyword">const</span> [cartItemsCount, setCartItemsCount] = useState(<span class="hljs-number">0</span>);<br>  <span class="hljs-keyword">const</span> [hidden, setHidden] = useState(<span class="hljs-literal">true</span>);<br><br>  <span class="hljs-keyword">const</span> toggleHidden = <span class="hljs-function">() =&gt;</span> setHidden(!hidden);<br><br>  <span class="hljs-keyword">const</span> addItem = <span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> setCartItems(addItemToCart(cartItems, item));<br><br>  <span class="hljs-keyword">return</span> (<br>    &lt;CartContext.Provider<br>      value=&#123;&#123; hidden, toggleHidden, cartItems, addItem, cartItemsCount &#125;&#125;<br>    &gt;<br>      &#123;children&#125;<br>    &lt;/CartContext.Provider&gt;<br>  );<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> CartProvider;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//src/index.js</span><br><br><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> ReactDOM <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-dom&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; BrowserRouter &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-router-dom&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; Provider &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-redux&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; PersistGate &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;redux-persist/integration/react&quot;</span>;<br><br><span class="hljs-keyword">import</span> &#123; store, persistor &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./redux/store&quot;</span>;<br><span class="hljs-keyword">import</span> CartProvider <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./providers/cart/cart.provider&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;./index.css&quot;</span>;<br><span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App&quot;</span>;<br><br><span class="hljs-comment">// Now all children components of CartProvider can access the state stored in the CartProvider component through the vehicle of useContext! </span><br>ReactDOM.render(<br>  &lt;Provider store=&#123;store&#125;&gt;<br>    &#123;<span class="hljs-comment">/* The actual provider we pass down*/</span>&#125;<br>    &lt;CartProvider&gt;<br>      &lt;BrowserRouter&gt;<br>        &lt;PersistGate persistor=&#123;persistor&#125;&gt;<br>          &lt;App /&gt;<br>        &lt;/PersistGate&gt;<br>      &lt;/BrowserRouter&gt;<br>    &lt;/CartProvider&gt;<br>  &lt;/Provider&gt;,<br>  <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;root&quot;</span>)<br>);<br></code></pre></td></tr></table></figure><p>ÂÖ∑‰ΩìÂÆûÁé∞Áúã‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÔºå ÈùûÂ∏∏ÊúâÂ∏ÆÂä©ÔºÅ</p><p>Very helpful!</p><p>Code below:</p><p><a href="https://github.com/ZhangMYihua/react-context-practice">https://github.com/ZhangMYihua/react-context-practice</a></p><p><a href="https://github.com/ZhangMYihua/react-context-complete">https://github.com/ZhangMYihua/react-context-complete</a></p>]]></content>
    
    
    <categories>
      
      <category>React</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blogs</tag>
      
      <tag>JS</tag>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My React Learning Note (4)</title>
    <link href="/2021/11/20/react_notes_4/"/>
    <url>/2021/11/20/react_notes_4/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Firebase ,HOC, Thunk, Sagas</p><span id="more"></span><h1 id="My-React-Learning-Note-4"><a class="header-anchor" href="#My-React-Learning-Note-4">¬∂</a>My React Learning Note (4)</h1><h1 id="Topic-Firebase-HOC-Thunk-Sagas"><a class="header-anchor" href="#Topic-Firebase-HOC-Thunk-Sagas">¬∂</a>Topic: Firebase ,HOC, Thunk, Sagas</h1><h1 id="Styled-Components"><a class="header-anchor" href="#Styled-Components">¬∂</a>Styled-Components</h1><figure class="highlight javascript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> Text = styled.div<span class="hljs-string">`</span><br><span class="hljs-string">color: red;</span><br><span class="hljs-string">font-size: 28px;</span><br><span class="hljs-string">border: <span class="hljs-subst">$&#123;(&#123;isActive&#125;) =&gt; isActive? <span class="hljs-string">&quot;1px solid black&quot;</span>: <span class="hljs-string">&quot;3px dotted green&quot;</span>&#125;</span></span><br><span class="hljs-string">`</span><br><br>&lt;Text isActive= &#123;tru&#125;&gt;Whatever&lt;/Text&gt;<br></code></pre></td></tr></table></figure><p>ÂÖ≥‰∫é Styled-Components Â¶ÇÊûúÈúÄË¶ÅËá™Â∑±ÂÜçÂ≠¶‰π†Âêß</p><h1 id="Firebase"><a class="header-anchor" href="#Firebase">¬∂</a>Firebase</h1><p>What we did during this session (Forgot to write some codes for this part):</p><ol><li><p>Move Shop Data to Firebase with utility function</p></li><li><p>Change <code>App.js</code> to a class based component which can fetch all products data from firebase for later use</p></li><li><p>Create a <code>shop</code> action that updates local state about collections</p><p>all products info are in <code>this.state.shop.collections</code></p></li><li><p>Call this <code>shop</code>action in <code>componentDidMount</code> of <code>shop.component</code></p><p>Whenever mount the component, we use <code>onSnapshot</code> to listen for <code>snapshot </code>changes or first loading</p></li></ol><h1 id="WithSpinner"><a class="header-anchor" href="#WithSpinner">¬∂</a>WithSpinner</h1><p><code>WithSpinner</code> is a HOC which wraps a component and return a new component!</p><p><code>Please see the code regarding this point</code></p><p>or this link: <a href="github.com/ZhangMYihua/higher-order-components-explained">HOC EXPLAIN</a></p><h1 id="Observable"><a class="header-anchor" href="#Observable">¬∂</a>Observable</h1><p><code>auth.onAuthStateChanged(nextValue)</code> is a stream observer. This is always listening to auth state</p><p>Every time a user‚Äôs auth state is changed, currentUser locally is reset</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascirpt">this.unsubscribeFromAuth &#x3D; auth.onAuthStateChanged(async (userAuth) &#x3D;&gt; ...)<br></code></pre></td></tr></table></figure><p>unsubscribeFromAuth is returned by Firebase</p><h2 id="Redux-Thunk"><a class="header-anchor" href="#Redux-Thunk">¬∂</a>Redux Thunk</h2><p>We need to load resources on pages that need it rather than loading it at once. We can put all loading process in to Redux.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> shopReducer = <span class="hljs-function">(<span class="hljs-params">state = INITIAL_STATE, action</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">switch</span> (action.type) &#123;<br>    <span class="hljs-keyword">case</span> ShopActionTypes.FETCH_COLLECTIONS_START:<br>      <span class="hljs-keyword">return</span> &#123;<br>        ...state,<br>        isFetching: <span class="hljs-literal">true</span>,<br>      &#125;;<br>    <span class="hljs-keyword">case</span> ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:<br>      <span class="hljs-keyword">return</span> &#123;<br>        ...state,<br>        isFetching: <span class="hljs-literal">false</span>,<br>        collections: action.payload,<br>      &#125;;<br>    <span class="hljs-keyword">case</span> ShopActionTypes.FETCH_COLLECTIONS_FAILURE:<br>      <span class="hljs-keyword">return</span> &#123;<br>        ...state,<br>        isFetching: <span class="hljs-literal">false</span>,<br>        errorMessage: action.payload,<br>      &#125;;<br>    <span class="hljs-keyword">default</span>:<br>      <span class="hljs-keyword">return</span> state;<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>Then we can dispatch in <code>actions</code> (because of Thunk)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> fetchCollectionsStart = <span class="hljs-function">() =&gt;</span> (&#123;<br>  type: ShopActionTypes.FETCH_COLLECTIONS_START,<br>&#125;);<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> fetchCollectionsSuccess = <span class="hljs-function">(<span class="hljs-params">collectionsMap</span>) =&gt;</span> (&#123;<br>  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,<br>  payload: collectionsMap,<br>&#125;);<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> fetchCollectionsFailure = <span class="hljs-function">(<span class="hljs-params">errorMessage</span>) =&gt;</span> (&#123;<br>  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,<br>  payload: errorMessage,<br>&#125;);<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> fetchCollectionsStartAsync = <span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">dispatch</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> collectionRef = firestore.collection(<span class="hljs-string">&quot;collections&quot;</span>);<br>    <span class="hljs-comment">// By doing so, we make sure that : state.shop.isLoading = true;</span><br>    dispatch(fetchCollectionsStart());<br><br>    <span class="hljs-comment">// Use promise to fetch collections</span><br>    collectionRef<br>      .get()<br>      .then(<span class="hljs-function">(<span class="hljs-params">snapshot</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">const</span> collectionsMap = convertCollectionsSnapshotToMap(snapshot);<br>        dispatch(fetchCollectionsSuccess(collectionsMap));<br>      &#125;)<br>      .catch(<span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> dispatch(fetchCollectionsFailure(error.message)));<br>  &#125;;<br>&#125;;<br></code></pre></td></tr></table></figure><p>Êàë‰ª¨ÊÉ≥ separate <code>shop.component</code> Âíå <code>isLoading</code> ÁöÑÈÄªËæëÔºåÂèØ‰ª•Âú® <code>collection-overview</code> Âíå <code>collection-item</code> Â§ñÂ±ÇÂä†‰∏Ä‰∏™ <code>container</code> . container ÂÜç‰ªé redux Êãø <code>isLoading</code> state</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; connect &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-redux&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; createStructuredSelector &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;reselect&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; selectIsCollectionFetching &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../redux/shop/shop.selectors&quot;</span>;<br><span class="hljs-keyword">import</span> WithSpinner <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../with-spinner/with-spinner.component&quot;</span>;<br><span class="hljs-keyword">import</span> CollectionOverview <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./collection-overview.component&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; compose &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;redux&quot;</span>;<br><br><span class="hljs-comment">// Pass a loading to the WithSpinner component</span><br><span class="hljs-comment">// No idea why not just use in the WithSpinner component</span><br><span class="hljs-keyword">const</span> mapStateToProps = createStructuredSelector(&#123;<br>  isLoading: selectIsCollectionFetching,<br>&#125;);<br><br><span class="hljs-comment">// right to left</span><br><span class="hljs-keyword">const</span> CollectionOverviewContainer = compose(<br>  connect(mapStateToProps),<br>  WithSpinner<br>)(CollectionOverview);<br><br><span class="hljs-comment">//const CollectionOverviewContainer = connect(mapStateToProps)(WithSpinner(CollectionOverviewContainer));</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> CollectionOverviewContainer;<br></code></pre></td></tr></table></figure><h2 id="Redux-Sagas-Generator"><a class="header-anchor" href="#Redux-Sagas-Generator">¬∂</a>Redux Sagas (Generator)</h2><p>A function will run under a certain condition,</p><p>Impure function: a function will return different outputs even when the input parameter is same.</p><p>Move all these impure function to React Sagas, so that Sagas handle the asynchronous calls.</p><h3 id="Generator"><a class="header-anchor" href="#Generator">¬∂</a>Generator</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">gen</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;a&quot;</span>);<br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;b&quot;</span>);<br>&#125;<br><span class="hljs-keyword">const</span> g = gen();<br>g;<br><span class="hljs-comment">//gen¬†&#123;&lt;suspended&gt;&#125;</span><br>g.next();<br><span class="hljs-comment">//a</span><br><span class="hljs-comment">//b</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">gen</span>(<span class="hljs-params">i</span>) </span>&#123;<br>  <span class="hljs-keyword">yield</span> i;<br>  <span class="hljs-keyword">yield</span> i + <span class="hljs-number">10</span>;<br>&#125;<br><br><span class="hljs-keyword">const</span> g = gen(<span class="hljs-number">5</span>);<br><span class="hljs-keyword">const</span> gObj = g.next();<br>gObj;<br><span class="hljs-comment">// &#123;value: 5, done : false&#125;</span><br><span class="hljs-keyword">const</span> jObj = g.next();<br>jObj;<br><span class="hljs-comment">// &#123;value: 15, done: false&#125;</span><br>g.next();<br><span class="hljs-comment">//&#123;value: undefined, done: false&#125;</span><br></code></pre></td></tr></table></figure><p>This allows to return</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">gen</span>(<span class="hljs-params">i</span>) </span>&#123;<br>  <span class="hljs-keyword">yield</span> i;<br>  <span class="hljs-keyword">yield</span> i + <span class="hljs-number">10</span>;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">25</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>We use <code>yield</code> in Saga for easily cancelling the request during process!</p><p>To use sagas, name a function in Sagas with the same name as the redux action call!</p><p>Sagas will listen to all same name actions or prepend with <code>on</code>(e.g. <code>onGoogleSignInStart</code> in the same folder</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; takeEvery, call, put &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;redux-saga/effects&quot;</span>;<br><br><span class="hljs-keyword">import</span> &#123;<br>  firestore,<br>  convertCollectionsSnapshotToMap,<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../../firebase/firebase.utils&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;<br>  fetchCollectionsSuccess,<br>  fetchCollectionsFailure,<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./shop.actions&quot;</span>;<br><br><span class="hljs-keyword">import</span> ShopActionTypes <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./shop.types&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">fetchCollectionsAsync</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">yield</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;fetchCollectionsAsync in Saga is called&quot;</span>);<br><br>  <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">const</span> collectionRef = firestore.collection(<span class="hljs-string">&quot;collections&quot;</span>);<br>    <span class="hljs-comment">// similar to async await</span><br><br>    <span class="hljs-keyword">const</span> snapshot = <span class="hljs-keyword">yield</span> collectionRef.get();<br><br>    <span class="hljs-comment">// call a function that returns a promise</span><br>    <span class="hljs-keyword">const</span> collectionsMap = <span class="hljs-keyword">yield</span> call(<br>      convertCollectionsSnapshotToMap,<br>      snapshot<br>    );<br><br>    <span class="hljs-comment">// Put -&gt; dispatch an action</span><br>    <span class="hljs-comment">// if success, we dispatch fetchCollectionsSuccess, store the collectionsMap in the redux store</span><br>    <span class="hljs-keyword">yield</span> put(fetchCollectionsSuccess(collectionsMap));<br>  &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>    <span class="hljs-keyword">yield</span> put(fetchCollectionsFailure(error.message));<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// same name to fetchCollectionsStart in shop.actions.js</span><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">fetchCollectionsStart</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">yield</span> takeEvery(<br>    ShopActionTypes.FETCH_COLLECTIONS_START,<br>    fetchCollectionsAsync<br>  );<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Why-Sagas"><a class="header-anchor" href="#Why-Sagas">¬∂</a>Why Sagas</h2><p><a href="https://stackoverflow.com/questions/65271387/when-to-use-redux-saga-and-when-redux-thunk">https://stackoverflow.com/questions/65271387/when-to-use-redux-saga-and-when-redux-thunk</a></p><blockquote><p>In my opinion, redux-saga shines if you need to manage the interactions of long-running tasks. For example, I worked on software for set top boxes which needed to manage changing channels. There‚Äôs several asynchronous things that need to be done in sequence to start up playback, and then during playback extra things need to be done periodically. Additionally, every step needs to be cancellable in case the user changes channels. Something like that is easy to do with sagas (assuming you‚Äôre used to working with them), but comparatively hard with un-cancellable promises.</p></blockquote><blockquote><p>If you just need to do fairly simple stuff like ‚Äúwhen they click a button, download some data‚Äù, then both of them do the job just fine. If your cases are fairly simple, i would lean towards redux-thunk because it‚Äôs learning curve is easier than redux-saga. Promises are common in the industry, and so many developers are already used to them; while sagas are a fairly specialized piece of code.</p></blockquote><blockquote><p>Don‚Äôt worry about difference in performance. In both cases, there‚Äôs only a very small amount of time spent running the library‚Äôs code. The bulk of the time will be spent running your code, and while the style of your code will be quite a bit different, the number of things you need to calculate to do a certain job will be very similar.</p></blockquote><h2 id="take-takeEvery-takeLatest"><a class="header-anchor" href="#take-takeEvery-takeLatest">¬∂</a>take(), takeEvery(), takeLatest()</h2><p><a href="https://github.com/ZhangMYihua/redux-saga-take-takelatest-takeevery">https://github.com/ZhangMYihua/redux-saga-take-takelatest-takeevery</a></p><p><code>take()</code>: take only execute one time</p><p><code>takeEvery()</code>: Every action is independent of each other, kick off a new action!</p><p><code>taleEvery</code> is a <strong>async way</strong> of <code>take</code> in a <code>while</code> loop</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; takeLatest, delay, put &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;redux-saga/effects&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">onIncrement</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">yield</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;I am incremented&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">incrementSaga</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">yield</span> takeEvery(<span class="hljs-string">&quot;INCREMENT&quot;</span>, onIncrement);<br>&#125;<br></code></pre></td></tr></table></figure><p><code>takeLatest()</code>: debounce and only wants the latest action to be performed if one is blocked</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; takeLatest, delay, put &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;redux-saga/effects&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">onIncrement</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">yield</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;I am incremented&quot;</span>);<br>  <span class="hljs-keyword">yield</span> delay(<span class="hljs-number">3000</span>);<br>  <span class="hljs-keyword">yield</span> put(&#123; <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;INCREMENT_FROM_SAGA&quot;</span> &#125;);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">incrementSaga</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">yield</span> takeLatest(<span class="hljs-string">&quot;INCREMENT&quot;</span>, onIncrement);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="Overall-review"><a class="header-anchor" href="#Overall-review">¬∂</a>Overall review</h1><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/image-20211120200047733.png" alt="image-20211120200047733"></p><h2 id="Communication-between-different-action"><a class="header-anchor" href="#Communication-between-different-action">¬∂</a>Communication between different action!</h2><p>With Sagas, we can listen to an action from another component in another component Saga! For example, clear all cart items when a user logout success</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; all, call, put, takeLatest &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;redux-saga/effects&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; UserActionTypes &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../user/user.types&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; clearCart &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./cart.actions&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">clearCartOnSignOut</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">yield</span> put(clearCart());<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">onSignOutSuccess</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">yield</span> takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span>* <span class="hljs-title">cartSagas</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">yield</span> all([call(onSignOutSuccess)]);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>React</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blogs</tag>
      
      <tag>JS</tag>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My React Learning Note (3)</title>
    <link href="/2021/11/04/react_notes_3/"/>
    <url>/2021/11/04/react_notes_3/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Topic: Starting from Redux</p><span id="more"></span><h1 id="My-React-Learning-Note-3"><a class="header-anchor" href="#My-React-Learning-Note-3">¬∂</a>My React Learning Note (3)</h1><h1 id="Topic-Starting-from-Redux"><a class="header-anchor" href="#Topic-Starting-from-Redux">¬∂</a>Topic: Starting from Redux</h1><h2 id="Motivation"><a class="header-anchor" href="#Motivation">¬∂</a>Motivation</h2><p>Redux is a state management library.</p><p>As the app gets larger, it is hard to update, manage the state.</p><p>We move all states in a <code>store</code> which is a massive object. This avoid the complexity that passing props to components that do not need them.</p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/image-20211030164040827.png" alt="image-20211030164040827"></p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/image-20211030164105814.png" alt="image-20211030164105814" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/image-20211030164119824.png" alt="image-20211030164119824" style="zoom:50%;" /><h2 id="Three-principles"><a class="header-anchor" href="#Three-principles">¬∂</a>Three principles:</h2><blockquote><ol><li>Single source of truth</li><li>State is read only</li><li>Changes using pure functions</li></ol></blockquote><p><strong>Redux flow:</strong></p><p>Actions -&gt;(Middleware) -&gt; Root Reducer -&gt; Store -&gt; DOM changes</p><p><strong>Flux pattern:</strong></p><p>Action -&gt; Dispatcher -&gt; Store -&gt; View</p><p>There is only one way of dataflow! Instead of moving data all around!</p><figure class="highlight javascript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//the outermost</span><br>ReactDOM.render(<br>  <span class="hljs-comment">// Redux Provider</span><br>  &lt;Provider store=&#123;store&#125;&gt;<br>    &lt;BrowserRouter&gt;<br>      &lt;App /&gt;<br>    &lt;/BrowserRouter&gt;<br>  &lt;/Provider&gt;,<br>  <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;root&quot;</span>)<br>);<br><br></code></pre></td></tr></table></figure><h2 id="Actions"><a class="header-anchor" href="#Actions">¬∂</a>Actions</h2><blockquote><p>Action is to make sure to fire reducer in a right format</p></blockquote><p>action is object that takes <code>payload</code>, <code>type</code> to update the specific reducer.</p><p><code>type</code> is the instruction to perform. Every time the action returns a new object to the reducer to update the states.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> userReducer = <span class="hljs-function">(<span class="hljs-params">currentState, action</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">switch</span>(action.type)&#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;SET_CURRENT_USER&quot;</span>:<br>            <span class="hljs-keyword">return</span> &#123;<br>...currentState,<br>currentUser: action.payload<br>&#125;<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">return</span> currentState;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Reducer"><a class="header-anchor" href="#Reducer">¬∂</a>Reducer</h2><p>Reducer is a function that manages the state. We can think of reducer as exposed api to manage the state stored in <code>store</code></p><p>All these reducers then form a root reducer which is a representation of our app state. Then we pass these states to our component.</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> redux redux-logger react-redux<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// header.component.jsx</span><br><span class="hljs-keyword">import</span> &#123; connect &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-redux&quot;</span>;<br><br><span class="hljs-comment">//state: root reducer</span><br><span class="hljs-keyword">const</span> mapStateToProps = <span class="hljs-function">(<span class="hljs-params">state</span>) =&gt;</span> (&#123;<br>  <span class="hljs-comment">//1. set the props name</span><br>  <span class="hljs-comment">//2. state = root reducer</span><br>  <span class="hljs-comment">//3. state.user = user reducer</span><br>  <span class="hljs-comment">//4. state.user.currentUser = currentUser in the user reducer!</span><br>  currentUser: state.user.currentUser,<br>&#125;);<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> connect(mapStateToProps)(Header);<br><br></code></pre></td></tr></table></figure><h2 id="mapStateToProps"><a class="header-anchor" href="#mapStateToProps">¬∂</a>mapStateToProps</h2><p><code>mapStateToProps?: (state, ownProps?) =&gt; Object</code></p><blockquote><p>If a <code>mapStateToProps</code> function is specified, the new wrapper component will subscribe to Redux store updates. This means that any time the store is updated, <code>mapStateToProps</code> will be called. The results of <code>mapStateToProps</code> must be a plain object, which will be merged into the wrapped component‚Äôs props. If you don‚Äôt want to subscribe to store updates, pass <code>null</code> or <code>undefined</code> in place of <code>mapStateToProps</code>.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//state: root reducer</span><br><span class="hljs-comment">//put a props into the header component</span><br><span class="hljs-keyword">const</span> mapStateToProps = <span class="hljs-function">(<span class="hljs-params">state</span>) =&gt;</span> (&#123;<br>  <span class="hljs-comment">//1. set the props name</span><br>  <span class="hljs-comment">//2. state = root reducer</span><br>  <span class="hljs-comment">//3. state.user = user reducer</span><br>  <span class="hljs-comment">//4. state.user.currentUser = currentUser in the user reducer!</span><br>  currentUser: state.user.currentUser,<br>&#125;);<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> connect(mapStateToProps)(Header);<br><br><span class="hljs-comment">//or advanced destructrue</span><br><span class="hljs-keyword">const</span> mapStateToProps = <span class="hljs-function">(<span class="hljs-params">&#123; user: &#123; currentUser &#125;, cart: &#123; hidden &#125; &#125;</span>) =&gt;</span> (&#123;<br>  currentUser,<br>  hidden,<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="mapDispatchToProps"><a class="header-anchor" href="#mapDispatchToProps">¬∂</a>mapDispatchToProps</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> mapDispatchToProps = <span class="hljs-function">(<span class="hljs-params">dispatch</span>) =&gt;</span> (&#123;<br>  setCurrentUser: <span class="hljs-function">(<span class="hljs-params">user</span>) =&gt;</span> dispatch(setCurrentUser(user)),<br>&#125;);<br><br><span class="hljs-comment">//param1: mapState, param2: mapDispatch</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> connect(<span class="hljs-literal">null</span>, mapDispatchToProps)(App);<br><br></code></pre></td></tr></table></figure><p>If we do not supply <code>mapDispatchToProps</code> to <code>connect</code>. <code>connect</code> will put <code>dispatch</code> to props!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;CustomButton onClick=&#123;<span class="hljs-function">() =&gt;</span> &#123;<br>      history.push(<span class="hljs-string">&quot;/checkout&quot;</span>);<br>      dispatch(toggleCartHidden());<br>    &#125;&#125;&gt;<br>      Go to checkout<br>    &lt;/CustomButton&gt;<br></code></pre></td></tr></table></figure><h2 id="Redirect"><a class="header-anchor" href="#Redirect">¬∂</a>Redirect</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;Route exact path=<span class="hljs-string">&quot;/signin&quot;</span> render=&#123;<span class="hljs-function">() =&gt;</span> (<span class="hljs-built_in">this</span>.props.currentUser? (<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Redirect</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&#x27;/&#x27;</span> /&gt;</span></span>) : (<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">SignInAndSignUpPage</span> /&gt;</span></span>))&#125; /&gt;<br></code></pre></td></tr></table></figure><h2 id="find"><a class="header-anchor" href="#find">¬∂</a>find</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// cart.utils.js</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> addItemToCart = <span class="hljs-function">(<span class="hljs-params">cartItems, cartItemToAdd</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> existingCartItem = cartItems.find(<br>    (cartItem) =&gt; cartItem.id === cartItemToAdd.id<br>  );<br>  <span class="hljs-keyword">if</span> (existingCartItem) &#123;<br>    <span class="hljs-keyword">return</span> cartItems.map(<span class="hljs-function">(<span class="hljs-params">cartItem</span>) =&gt;</span><br>      cartItem.id === cartItemToAdd.id<br>        ? &#123; ...cartItem, <span class="hljs-attr">quantity</span>: cartItem.quantity + <span class="hljs-number">1</span> &#125;<br>        : cartItem<br>    );<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">return</span> [...cartItems, &#123; ...cartItemToAdd, <span class="hljs-attr">quantity</span>: <span class="hljs-number">1</span> &#125;];<br>  &#125;<br>&#125;;<br><br></code></pre></td></tr></table></figure><h2 id="selector-and-reduce"><a class="header-anchor" href="#selector-and-reduce">¬∂</a>selector and reduce</h2><p><strong>Selector</strong>: get a portion of state info for our need</p><p>first parameter will be accumulated</p><p>the second parameter is the element being traversed</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> mapStateToProps = <span class="hljs-function">(<span class="hljs-params">state</span>) =&gt;</span> (&#123;<br>  itemCount: state.cart.cartItems.reduce(<br>    (accumulatedQuantity, cartItem) =&gt;<br>      accumulatedQuantity + cartItem.quantity,<br>    <span class="hljs-number">0</span><br>  ),<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="reselect"><a class="header-anchor" href="#reselect">¬∂</a>reselect</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-comment">//cart.selectors.js</span><br><span class="hljs-keyword">import</span> &#123; createSelector &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;reselect&quot;</span>;<br><br><span class="hljs-keyword">const</span> selectCart = <span class="hljs-function">(<span class="hljs-params">state</span>) =&gt;</span> state.cart;<br><br><span class="hljs-comment">//Memorized selector</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> selectCartItems = createSelector(<br>  [selectCart],<br>  (cart) =&gt; cart.cartItems<br>);<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> selectCartItemsCount = createSelector([selectCartItems], <span class="hljs-function">(<span class="hljs-params">cartItems</span>) =&gt;</span><br>  cartItems.reduce(<br>    (accumulatedQuantity, cartItem) =&gt; accumulatedQuantity + cartItem.quantity,<br>    <span class="hljs-number">0</span><br>  )<br>);<br><br></code></pre></td></tr></table></figure><p>Then, we can replace mapStateToProps with selector!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> mapStateToProps = <span class="hljs-function">(<span class="hljs-params">state</span>) =&gt;</span> selectCartItems(state);<br><br><span class="hljs-comment">//itemCount can be then pass as props!</span><br><span class="hljs-keyword">const</span> mapStateToProps = <span class="hljs-function">(<span class="hljs-params">state</span>) =&gt;</span> (&#123;<br>  itemCount: selectCartItemsCount(state),<br>&#125;);<br><br></code></pre></td></tr></table></figure><p><strong>createStructuredSelector</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> mapStateToProps = createStructuredSelector(<br>&#123;<br>    itemCount: selectCartItemsCount<br>&#125;)<br></code></pre></td></tr></table></figure><h1 id="withRouter"><a class="header-anchor" href="#withRouter">¬∂</a>withRouter</h1><p>withRouter allows components not wrapped with <code>&lt;Route&gt;</code> access to <code>this.props.history</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> withRouter(connect(mapStateToProps)(CartDropdown));<br></code></pre></td></tr></table></figure><h1 id="Redux-Persist"><a class="header-anchor" href="#Redux-Persist">¬∂</a>Redux Persist</h1><p><a href="https://www.npmjs.com/package/redux-persist">https://www.npmjs.com/package/redux-persist</a></p><p><code>window.sessionStorage</code>: stores for a session</p><p><code>window.localStorage</code>: store until get cleared!</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> myObject = &#123;<span class="hljs-attr">name</span>: <span class="hljs-string">&quot;alibaba&quot;</span>&#125;<br><span class="hljs-built_in">window</span>.localStorage.setItem(<span class="hljs-string">&quot;myItem&quot;</span>, <span class="hljs-built_in">JSON</span>.stringify(myObject))<br><br><span class="hljs-keyword">const</span> myRetrieved = <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-built_in">window</span>.localStorage.getItem(<span class="hljs-string">&quot;myItem&quot;</span>))<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//store.js</span><br><span class="hljs-keyword">import</span> &#123; createStore, applyMiddleware &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;redux&quot;</span>;<br><span class="hljs-keyword">import</span> logger <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;redux-logger&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; persistStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;redux-persist&quot;</span>;<br><span class="hljs-keyword">import</span> rootReducer <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./root-reducer&quot;</span>;<br><br><span class="hljs-keyword">const</span> middlewares = [logger];<br><br><span class="hljs-keyword">const</span> store = createStore(rootReducer, applyMiddleware(...middlewares));<br><br><span class="hljs-comment">//make store persistable</span><br><span class="hljs-keyword">const</span> persistor = persistStore(store);<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> store;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//root-reducer.js</span><br><span class="hljs-keyword">import</span> &#123; combineReducers &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;redux&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; persistReducer &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;redux-persist&quot;</span>;<br><span class="hljs-comment">//import sessionStorage from &quot;...&quot;;</span><br><span class="hljs-keyword">import</span> storage <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;redux-persist/lib/storage&quot;</span>;<br><span class="hljs-keyword">import</span> userReducer <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./user/user.reducer&quot;</span>;<br><span class="hljs-keyword">import</span> cartReducer <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./cart/cart.reducer&quot;</span>;<br><br><span class="hljs-keyword">const</span> persistConfig = &#123;<br>  key: <span class="hljs-string">&quot;root&quot;</span>,<br>  storage,<br>  whitelist: [<span class="hljs-string">&quot;cart&quot;</span>],<br>&#125;;<br><br><span class="hljs-keyword">const</span> rootReducer = combineReducers(&#123;<br>  user: userReducer,<br>  cart: cartReducer,<br>&#125;);<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> persistReducer(persistConfig, rootReducer);<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>React</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blogs</tag>
      
      <tag>JS</tag>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My React Learning Note (2)</title>
    <link href="/2021/10/30/react_notes_2/"/>
    <url>/2021/10/30/react_notes_2/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Topic: React Basics</p><span id="more"></span><h1 id="My-React-Learning-Note-1"><a class="header-anchor" href="#My-React-Learning-Note-1">¬∂</a>My React Learning Note (1)</h1><h1 id="Hover-effect"><a class="header-anchor" href="#Hover-effect">¬∂</a>Hover effect</h1><figure class="highlight scss"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><pre><code class="hljs scss"><span class="hljs-comment">//menu-item</span><br><span class="hljs-attribute">overflow</span>: hidden;<br><br>&amp;<span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">cursor</span>: pointer;<br>  <br>    &amp; <span class="hljs-selector-class">.background-image</span> &#123;<br>      <span class="hljs-attribute">transform</span>: scale(<span class="hljs-number">1.1</span>);<br>      <span class="hljs-attribute">transition</span>: transform <span class="hljs-number">6s</span> cubic-bezier(<span class="hljs-number">0.25</span>, <span class="hljs-number">0.45</span>, <span class="hljs-number">0.45</span>, <span class="hljs-number">0.95</span>);<br>    &#125;<br>  <br>    &amp; <span class="hljs-selector-class">.content</span> &#123;<br>      <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.9</span>;<br>    &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-comment">//menu-item</span><br>&lt;div<br>      className=<span class="hljs-string">&quot;background-image&quot;</span><br>      style=&#123;&#123;<br>        backgroundImage: <span class="hljs-string">`url(<span class="hljs-subst">$&#123;imageUrl&#125;</span>)`</span>,<br>      &#125;&#125;<br>    /&gt;<br></code></pre></td></tr></table></figure><h1 id="Routing"><a class="header-anchor" href="#Routing">¬∂</a>Routing</h1><p>Server focuses on data: REST</p><p>Frontend: <strong>Single Page Application</strong></p><p>React does not have built-in routing</p><h2 id="React-Router"><a class="header-anchor" href="#React-Router">¬∂</a>React Router</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>reactrouter.com<span class="hljs-regexp">/web/gui</span>des/quick-start<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//index.js</span><br>ReactDOM.render(<br>  &lt;BrowserRouter&gt;<br>    &lt;App /&gt;<br>  &lt;/BrowserRouter&gt;,<br>  <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;root&quot;</span>)<br>);<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/ZhangMYihua/</span>react-router-demo<br></code></pre></td></tr></table></figure><p>check this repo to know the demo code for <code>Router, Switch</code></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; Route, Link &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react-router-dom&#x27;</span>;<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./App.css&#x27;</span>;<br><br><span class="hljs-keyword">const</span> HomePage = <span class="hljs-function"><span class="hljs-params">props</span> =&gt;</span> &#123;<br>  <span class="hljs-built_in">console</span>.log(props);<br>  <span class="hljs-keyword">return</span> (<br>    &lt;div&gt;<br>      &lt;button onClick=&#123;<span class="hljs-function">() =&gt;</span> props.history.push(<span class="hljs-string">&#x27;/topics&#x27;</span>)&#125;&gt;Topics &lt;/button&gt;<br>      &lt;h1&gt;HOME PAGE&lt;/h1&gt;<br>    &lt;/div&gt;<br>  );<br>&#125;;<br><br><span class="hljs-keyword">const</span> TopicsList = <span class="hljs-function"><span class="hljs-params">props</span> =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> (<br>    &lt;div&gt;<br>      &lt;h1&gt;TOPIC LIST PAGE&lt;/h1&gt;<br>      &lt;Link to=&#123;<span class="hljs-string">`<span class="hljs-subst">$&#123;props.match.url&#125;</span>/13`</span>&#125;&gt;TO TOPIC <span class="hljs-number">13</span>&lt;/Link&gt;<br>      &lt;Link to=&#123;<span class="hljs-string">`<span class="hljs-subst">$&#123;props.match.url&#125;</span>/17`</span>&#125;&gt;TO TOPIC <span class="hljs-number">17</span>&lt;/Link&gt;<br>      &lt;Link to=&#123;<span class="hljs-string">`<span class="hljs-subst">$&#123;props.match.url&#125;</span>/21`</span>&#125;&gt;TO TOPIC <span class="hljs-number">21</span>&lt;/Link&gt;<br>    &lt;/div&gt;<br>  );<br>&#125;;<br><br><span class="hljs-keyword">const</span> TopicDetail = <span class="hljs-function"><span class="hljs-params">props</span> =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> (<br>    &lt;div&gt;<br>      &lt;h1&gt;TOPIC DETAIL PAGE: &#123;props.match.params.topicId&#125;&lt;/h1&gt;<br>    &lt;/div&gt;<br>  );<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">App</span>(<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> (<br>    &lt;div&gt;<br>      &lt;Route exact path=<span class="hljs-string">&#x27;/&#x27;</span> component=&#123;HomePage&#125; /&gt;<br>      &lt;Route exact path=<span class="hljs-string">&#x27;/blog/asdqw/topics&#x27;</span> component=&#123;TopicsList&#125; /&gt;<br>      &lt;Route path=<span class="hljs-string">&#x27;/blog/asdqw/topics/:topicId&#x27;</span> component=&#123;TopicDetail&#125; /&gt;<br>      &lt;Route exact path=<span class="hljs-string">&#x27;/blog/topics&#x27;</span> component=&#123;TopicsList&#125; /&gt;<br>      &lt;Route path=<span class="hljs-string">&#x27;/blog/topics/:topicId&#x27;</span> component=&#123;TopicDetail&#125; /&gt;<br>    &lt;/div&gt;<br>  );<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> App;<br></code></pre></td></tr></table></figure><p>Fast way of passing attributes to props:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<span class="hljs-built_in">this</span>.state.sections.map(<span class="hljs-function">(<span class="hljs-params">&#123; id, ...otherSectionProps &#125;</span>) =&gt;</span> (<br>          &lt;MenuItem key=&#123;id&#125; &#123;...otherSectionProps&#125;&gt;&lt;/MenuItem&gt;<br>        ))&#125;<br></code></pre></td></tr></table></figure><h3 id="Navigate"><a class="header-anchor" href="#Navigate">¬∂</a>Navigate</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div<br>    className=&#123;<span class="hljs-string">`<span class="hljs-subst">$&#123;size&#125;</span> menu-item`</span>&#125;<br>    onClick=&#123;<span class="hljs-function">() =&gt;</span> history.push(<span class="hljs-string">`<span class="hljs-subst">$&#123;match.url&#125;</span><span class="hljs-subst">$&#123;linkUrl&#125;</span>`</span>)&#125;<br>  &gt;<br>  ...<br>  &lt;/div?<br>  <br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> withRouter(MenuItem);<br></code></pre></td></tr></table></figure><p>By using <code>withRouter</code>: it has the ability of getting the history</p><h1 id="Forms"><a class="header-anchor" href="#Forms">¬∂</a>Forms</h1><ol><li>Decide on Components</li><li>Decide the State and where it lives</li><li>What changes when state changes</li></ol><p>Here uses class component for the convenience of using arrow function to have access to <code>this.state</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//Handle submitting the form</span><br>handleSubmit = <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br>    event.preventDefault();<br><br>    <span class="hljs-built_in">this</span>.setState(&#123; <span class="hljs-attr">email</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-attr">password</span>: <span class="hljs-string">&quot;&quot;</span> &#125;);<br>  &#125;;<br><br>  <span class="hljs-comment">//this will auto fill name with name and the value to be the value</span><br>  <span class="hljs-comment">//Handle updating the state</span><br>  handleChange = <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> &#123; value, name &#125; = event.target;<br>    <span class="hljs-built_in">this</span>.setState(&#123; [name]: value &#125;);<br>  &#125;;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//Can dynamically set className or Label</span><br><span class="hljs-keyword">const</span> FormInput = <span class="hljs-function">(<span class="hljs-params">&#123; handleChange, label, ...otherProps &#125;</span>) =&gt;</span> (<br>  &lt;div className=<span class="hljs-string">&quot;group&quot;</span>&gt;<br>    &lt;input className=<span class="hljs-string">&quot;form-input&quot;</span> onChange=&#123;handleChange&#125; &#123;...otherProps&#125; /&gt;<br>    &#123;label ? (<br>      &lt;label<br>        className=&#123;<span class="hljs-string">`<span class="hljs-subst">$&#123;</span></span><br><span class="hljs-string"><span class="hljs-subst">          otherProps.value.length ? <span class="hljs-string">&quot;shrink&quot;</span> : <span class="hljs-string">&quot;&quot;</span></span></span><br><span class="hljs-string"><span class="hljs-subst">        &#125;</span> form-input-label`</span>&#125;<br>      &gt;<br>        &#123;label&#125;<br>      &lt;/label&gt;<br>    ) : <span class="hljs-literal">null</span>&#125;<br>  &lt;/div&gt;<br>);<br></code></pre></td></tr></table></figure><h1 id="Firebase"><a class="header-anchor" href="#Firebase">¬∂</a>Firebase</h1><p>After setting all the configs of Firebase Auth. We can use</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//Class component App.js</span><br><span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-built_in">super</span>();<br><br>    <span class="hljs-built_in">this</span>.state = &#123;<br>      currentUser: <span class="hljs-literal">null</span>,<br>    &#125;;<br>  &#125;<br>...<br><span class="hljs-function"><span class="hljs-title">componentDidMount</span>(<span class="hljs-params"></span>)</span> &#123;<br>    auth.onAuthStateChanged(<span class="hljs-function">(<span class="hljs-params">user</span>) =&gt;</span> &#123;<br>      <span class="hljs-built_in">this</span>.setState(&#123; <span class="hljs-attr">currentUser</span>: user &#125;);<br>      <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.state.currentUser);<br>    &#125;);<br>  &#125;<br></code></pre></td></tr></table></figure><p>to automatically check if a user is logged in or not. Then we can use JWT to auth user to the backend.</p><p>We can then pass this currentUser to Header to set SignIn SignOut</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> Header = <span class="hljs-function">(<span class="hljs-params">&#123; currentUser &#125;</span>) =&gt;</span> (<br>  &lt;div className=<span class="hljs-string">&quot;header&quot;</span>&gt;<br>    &lt;Link className=<span class="hljs-string">&quot;logo-container&quot;</span> to=<span class="hljs-string">&quot;/&quot;</span>&gt;<br>      &lt;Logo className=<span class="hljs-string">&quot;logo&quot;</span> /&gt;<br>    &lt;/Link&gt;<br>    &lt;div className=<span class="hljs-string">&quot;options&quot;</span>&gt;<br>      &lt;Link className=<span class="hljs-string">&quot;option&quot;</span> to=<span class="hljs-string">&quot;/shop&quot;</span>&gt;<br>        SHOP<br>      &lt;/Link&gt;<br>      &lt;Link className=<span class="hljs-string">&quot;option&quot;</span> to=<span class="hljs-string">&quot;/shop&quot;</span>&gt;<br>        CONTACT<br>      &lt;/Link&gt;<br>      &#123;<br>        currentUser ? <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;option&quot;</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;()</span> =&gt;</span> auth.signOut()&#125;&gt;SIGN OUT<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>: <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Link</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;option&quot;</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/signin&quot;</span>&gt;</span>SIGN IN<span class="hljs-tag">&lt;/<span class="hljs-name">Link</span>&gt;</span></span><br>      &#125;<br>    &lt;/div&gt;<br>  &lt;/div&gt;<br>);<br></code></pre></td></tr></table></figure><h2 id="About-SetState"><a class="header-anchor" href="#About-SetState">¬∂</a>About SetState()</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">handleChange = <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> &#123; name, value &#125; = event.target;<br><br>    <span class="hljs-built_in">this</span>.setState(&#123; [name]: value &#125;);<br>  &#125;;<br></code></pre></td></tr></table></figure><p>We can use <code>handleChange</code> to handle the input to be sent to state. But what <code>&#123;[name]: value&#125;</code> exactly does?</p><p>here <code>name</code> is a variable name, using <code>[name]</code> means pass the string that variable represents to the place of <code>[name]</code>!</p>]]></content>
    
    
    <categories>
      
      <category>React</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blogs</tag>
      
      <tag>JS</tag>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My React Learning Note (1)</title>
    <link href="/2021/10/23/react_notes_1/"/>
    <url>/2021/10/23/react_notes_1/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Topic: React Basics</p><span id="more"></span><h1 id="My-React-Learning-Note-1"><a class="header-anchor" href="#My-React-Learning-Note-1">¬∂</a>My React Learning Note (1)</h1><h1 id="Topic-React-Basics"><a class="header-anchor" href="#Topic-React-Basics">¬∂</a>Topic: React Basics</h1><h2 id="State-V-S-Props"><a class="header-anchor" href="#State-V-S-Props">¬∂</a>State V.S Props</h2><ul><li>Every time a state is changed, the JSX gets rendered again</li><li>One direction data flow: State=&gt;Props</li><li>Therefore, Every time when a state changes, all the props of that state is rendered again!</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// Run at the time of mounting  </span><br><span class="hljs-function"><span class="hljs-title">componentDidMount</span>(<span class="hljs-params"></span>)</span> &#123;<br>  &#125;<br></code></pre></td></tr></table></figure><h2 id="Synthetic-Event"><a class="header-anchor" href="#Synthetic-Event">¬∂</a>Synthetic Event</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">onChange</span><br></code></pre></td></tr></table></figure><p>Event Handler that will only be triggered when a specific event happens.</p><h2 id="Error-function"><a class="header-anchor" href="#Error-function">¬∂</a>Error function</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/* in constructor */</span><br><span class="hljs-built_in">this</span>.handleChange = <span class="hljs-built_in">this</span>.handleChange.bind(<span class="hljs-built_in">this</span>);<br><br><span class="hljs-comment">/* in class */</span><br><span class="hljs-function"><span class="hljs-title">handleChange</span>(<span class="hljs-params">e</span>)</span> &#123;<br>    <span class="hljs-built_in">this</span>.setState(&#123; <span class="hljs-attr">searchField</span>: e.target.value &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>this is equivalent to</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/* arrow function automatically gets the scope */</span><br>handleChange = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-built_in">this</span>.setState(&#123; <span class="hljs-attr">searchField</span>: e.target.value &#125;);<br> &#125;<br></code></pre></td></tr></table></figure><h2 id="React-and-ReactDOM"><a class="header-anchor" href="#React-and-ReactDOM">¬∂</a>React and ReactDOM</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>    <span class="hljs-keyword">const</span> App = <span class="hljs-function">() =&gt;</span>&#123;<br>        <span class="hljs-keyword">return</span> React.createElement(<span class="hljs-string">&quot;div&quot;</span>, &#123;&#125;, React.createElement(<span class="hljs-string">&quot;h1&quot;</span>, &#123;&#125;, <span class="hljs-string">&quot;React Is Rendered!&quot;</span>)<br>    &#125;<br>ReactDOM.render(React.createElement(App), <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;root&quot;</span>))                                   <br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h2 id="React-Package-Update"><a class="header-anchor" href="#React-Package-Update">¬∂</a>React Package Update</h2><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> update<br><span class="hljs-built_in">npm</span> list react react-dom react-scripts<br><span class="hljs-built_in">npm</span> audit fix<br></code></pre></td></tr></table></figure><h2 id="Virtual-DOM-Unidirectional-Data-Flow"><a class="header-anchor" href="#Virtual-DOM-Unidirectional-Data-Flow">¬∂</a>Virtual DOM / Unidirectional Data Flow</h2><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">A<span class="hljs-function"><span class="hljs-title">ctual</span> Dom       -------&gt;</span> Virtual Dom<br></code></pre></td></tr></table></figure><p><strong>Virtual Dom is a copy of Actual Dom:</strong></p><ul><li>Every time a component is re-rendered, a Virtual Dom is copied</li><li>Compare with the Actual Dom, see what is different(re-rendered)</li><li>Make update in Actual Dom</li></ul><p><strong>Unidirectional Data Flow:</strong></p><p>Data only affects the children of nodes! Therefore, state should be placed wisely so that minimal number of nodes shall be updated</p><h2 id="Async-setState"><a class="header-anchor" href="#Async-setState">¬∂</a>Async setState</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* not a good practice */</span><br>handleClick = <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">this</span>.setState(&#123; <span class="hljs-attr">coins</span>: <span class="hljs-built_in">this</span>.state.coins+<span class="hljs-number">1</span>&#125;)<br>&#125;<br><br><span class="hljs-comment">/* Let the first argument also be a function, </span><br><span class="hljs-comment">Second one is to read the updated state */</span><br>handleClick = <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-built_in">this</span>.setState(<span class="hljs-function">(<span class="hljs-params">prevState, prevProps</span>) =&gt;</span> &#123;<span class="hljs-keyword">return</span> &#123;<br>        &#123;<span class="hljs-attr">cois</span>: prevState.coins+<span class="hljs-number">1</span>&#125;        <br>   &#125;&#125;, <span class="hljs-function">()=&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.state.coins) )<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* Allow using props in the constructor */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">props</span>)</span> &#123;<br><span class="hljs-built_in">super</span>(props);<br>     <span class="hljs-built_in">this</span>.props = props<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* Only works of React and Babel but not JS */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>&#123;<br>state = &#123;<br>coins: <span class="hljs-number">47</span><br>&#125;<br><span class="hljs-comment">//...</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Life-Cycle-Methods-of-Class-Component"><a class="header-anchor" href="#Life-Cycle-Methods-of-Class-Component">¬∂</a>Life Cycle Methods of Class Component</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<span class="hljs-built_in">this</span>.state.showChild&#125;? <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Lifecycles</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&#123;this.state.text&#125;</span> /&gt;</span></span> : <span class="hljs-literal">null</span><br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Lifecycles</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-built_in">super</span>();<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;constructor!&quot;</span>)<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">componentDidMount</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;componentDidMount!&quot;</span>)<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">componentDidUpdate</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;conponentDidUpdate!&quot;</span>)<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">componentWillUnmount</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;componentWillUnmount!&quot;</span>)<br>    &#125;<br>    <br>    <span class="hljs-comment">/* determine if a update should proceed */</span><br>    <span class="hljs-function"><span class="hljs-title">shouldComponentUpdate</span>(<span class="hljs-params">nextProps, nextState</span>)</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;shouldComponentUpdate!&quot;</span>)<br>        <span class="hljs-keyword">return</span> nextProps.text !== <span class="hljs-built_in">this</span>.props.text<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;render!&quot;</span>)<br>        <span class="hljs-keyword">return</span> (<br>        &lt;div className=<span class="hljs-string">&#x27;lifecycles&#x27;</span>&gt;<br>            &lt;h3&gt;LIFE CYCLES&lt;/h3&gt;<br>            &#123;<span class="hljs-built_in">this</span>.props.text&#125;<br>            &lt;/div&gt;<br>        )<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><a href="https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/">React lifecycle methods diagram</a></p><p><img src="https://raw.githubusercontent.com/q815101630/pic_storage/main/img/image-20211023014132837.png" alt="image-20211023014132837"></p>]]></content>
    
    
    <categories>
      
      <category>React</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blogs</tag>
      
      <tag>JS</tag>
      
      <tag>React</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>‰∏Ä‰∫õÊùÇËÆ∞ÔºåÁ¨¨‰∏ÄÁØáÊó•ËÆ∞ÂºèÁöÑÊÄùÁª¥Á¨îËÆ∞</title>
    <link href="/2021/07/25/How%20to%20Read%20a%20Book/"/>
    <url>/2021/07/25/How%20to%20Read%20a%20Book/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="‰∏Ä‰∫õÊùÇËÆ∞ÔºåÁ¨¨‰∏ÄÁØáÊó•ËÆ∞ÂºèÁöÑÊÄùÁª¥Á¨îËÆ∞"><a class="header-anchor" href="#‰∏Ä‰∫õÊùÇËÆ∞ÔºåÁ¨¨‰∏ÄÁØáÊó•ËÆ∞ÂºèÁöÑÊÄùÁª¥Á¨îËÆ∞">¬∂</a>‰∏Ä‰∫õÊùÇËÆ∞ÔºåÁ¨¨‰∏ÄÁØáÊó•ËÆ∞ÂºèÁöÑÊÄùÁª¥Á¨îËÆ∞</h1><span id="more"></span><p>Ëá™‰ªéÁΩëËØæÂºÄÂßãÔºåÊÖ¢ÊÖ¢Ê≤æÊüì‰∏ä‰∫ÜÊôöÁù°ËßâÁöÑ‰π†ÊÉØÔºå‰∫∫Âà∞Ê∏ÖÊô®Âõõ‰∫îÁÇπÔºå‰ªçÁÑ∂ËæóËΩ¨Âèç‰æßÔºåÈöæ‰ª•ÂÖ•Áú†„ÄÇÁù°‰∏çÁùÄÊó∂ÊÄªÊòØÂú®ÂÅö‰∏Ä‰∫õËÉ°ÊÄù‰π±ÊÉ≥ÔºåÂåÖÊã¨ËØª‰π¶ÔºåÂÅ•Ë∫´ÔºåÁ§æ‰∫§Á≠âÁ≠â„ÄÇÊàëËøô‰∏™‰∫∫Â∞±ÊòØÂ¶ÇÊ≠§ÔºåÁù°ÂâçÊÄªÊòØÊÉ≥Ê≥ïÁ∫∑Á∫∑Ôºå‰ΩÜ‰πãÂêéËÉΩÂ§üËÆ∞‰∏ãÁöÑÔºåËÉΩÂ§üÊúâÂç∞Ë±°ÁöÑÔºå‰∏çÊòØÂæàÂ§ö„ÄÇÂõ†Ê≠§ÔºåÁâπÂà´ÊÉ≥Áî®‰∏Ä‰∫õÊñáÂ≠óËÆ∞ÂΩï‰∏ãÂΩìÊó∂ÁöÑ‰∏Ä‰∫õÊÉ≥Ê≥ïÔºåË∞®‰ª•Ê≠§Êù•ËÆ©ÈîªÁÇºËá™Â∑±ÁöÑËÆ∞ÂøÜËÉΩÂäõÔºåËæìÂá∫ËÉΩÂäõÔºåÂπ∂Âà∞Êú™Êù•‰πüËÉΩÂ§üÁªôËøáÂæÄÁöÑÊÄùÊÉ≥Áïô‰∏ãÁóïËøπ„ÄÇ</p><h2 id="ÂÖ≥‰∫éËá™Â∑±Ôºö"><a class="header-anchor" href="#ÂÖ≥‰∫éËá™Â∑±Ôºö">¬∂</a>ÂÖ≥‰∫éËá™Â∑±Ôºö</h2><p>ÊàëËôΩ‰∏çËÉΩËá™Áß∞‰∏∫ËØª‰π¶ËØªÁöÑÂæàÂ§öÁöÑ‰∫∫Ôºå‰ΩÜÊàë‰πüËá™ËÆ§‰∏∫Â±û‰∫éÂñúÊ¨¢ËØª‰π¶ÁöÑ‰∫∫ÈÇ£‰∏ÄÁ±ª„ÄÇÂùö‰ø°ÁùÄËØª‰π¶ËÉΩÂ§üÁªô‰∏Ä‰∏™‰∫∫Â∏¶Êù•ÊÄùÁª¥ÁöÑÊèêÂçáÂπ∂ÂØπÁîüÊ¥ª‰ΩìÈ™åÂ∏¶Êù•Ê≠£ÂêëÁöÑÂΩ±Âìç„ÄÇ‰ΩÜÂæÄÂæÄÊàë‰πüÊ≤âÊµ∏‰∫éÊ∂àÈÅ£ÂºèÁöÑÈòÖËØª‰∏≠Ôºå‰æãÂ¶ÇÂú∞ÈìÅ‰∏äÁöÑÊâìÂèëÊó∂Èó¥ÔºåÊàñËÄÖÊó†ËÅäÁîüÊ¥ª‰∏≠ÁöÑ‰∏Ä‰∏ùÂø´ÊÑü„ÄÇÁÑ∂ËÄåÈöèÁùÄÊàëÊÖ¢ÊÖ¢ËøõÂÖ•Â§ßÂ≠¶ÔºåË∂äÊù•Ë∂äÂèëÊéòÈòÖËØªÁöÑÂäõÈáè‰∏ç‰ªÖ‰ªÖÊòØÂ∏¶Êù•Ê∂àÈÅ£ÂíåÁü≠ÊöÇÁöÑÊùæÊáàÔºå‰ΩÜÊõ¥ÈáçË¶ÅÁöÑÊòØÂÆÉÂØπÁúüÊ≠£ÁîüÊ¥ªÊúâÂ∏ÆÂä©ÔºåÊâÄ‰ª•Ë∂äÂèëÈáçËßÜÂ∏¶ÁùÄÁõÆÁöÑÂú∞ËØª‰π¶„ÄÇÁõÆÁöÑÊÄßÁöÑÈòÖËØªÊòØ‰∏∫‰∫ÜËÆ©‰∫∫Âú®ÈòÖËØª‰∏≠Êî∂Ëé∑Áü•ËØÜÔºåÂπ∂‰ª•Ê≠§Êù•ÊøÄÂèëÊõ¥Â§öÁöÑÈòÖËØªÂÖ¥Ë∂£ÂíåÊ≠£ÂêëÂèçÈ¶àÔºå‰ª•Ê≠§ÈÄÉÁ¶ª‰∏ÄÁßç‰∏çÂ§™ÂÅ•Â∫∑ÁöÑ‚Äú‰ΩéÁ∫ßÈòÖËØª‚ÄùÁöÑÈòÖËØªÂæ™ÁéØ„ÄÇ</p><p>ÈÇ£‰πàÂ¶Ç‰ΩïËØªÂ•Ω‰∏ÄÊú¨‰π¶ÔºåÂ¶Ç‰ΩïÂéªÂÖÖÂàÜÂú∞ÁêÜËß£‰ΩúËÄÖÁöÑÁî®ÂøÉËâØËã¶Âπ∂‰ªé‰π¶‰∏≠Êî∂Ëé∑Êõ¥Â§öÔºåÊñπÊ≥ïËÆ∫Â∞±Êõ¥‰∏∫ÈáçË¶Å„ÄÇÂÖ∂ÂÆû‰∏™‰∫∫ËÄåË®ÄÔºåÊàëÊõæÂπ∂Ê≤°ÊÑèËØÜÂà∞ÊñπÊ≥ïËÆ∫ÁöÑÈáçË¶ÅÊÄßÔºåËÄåÊòØÂú®ÁîüÊ¥ª‰∏≠Êõ¥‰∏∫ÈöèÂøÉËÄåÂä®ÔºåÂØªËßÖËá™Â∑±ÂñúÊ¨¢ÁöÑÁü•ËØÜÔºåÁî®Ëá™Â∑±Êõ¥‰∏∫ÁÜüÊÇâÁöÑÊñπÊ≥ïËøõË°åÂ≠¶‰π†ÂíåÂ∑•‰Ωú„ÄÇ‰ΩÜÂæÄÂæÄËá™Â∑±ËàíÈÄÇÁöÑÊñπÂºèÂπ∂‰∏ç‰ºöÊèêÂçáËá™Â∑±ÁöÑÊ∞¥Âπ≥ÔºåÊØîÂ¶ÇÊ∂àÈÅ£ÂºèÁöÑÈòÖËØªÂ∏¶Êù•ÁöÑÊ≠£ÂêëÂèçÈ¶à‰ºöÂú®Áü≠Êó∂Èó¥ÂÜÖÊ∂àÂ§±ÔºåÂèàÁ±ªÂ¶ÇÂ∏∏Â∏∏ÊãòÊ≥•‰∫é‰ΩøÁî®Ëá™Â∑±ÁÜüÊÇâÁöÑÊï≤‰ª£Á†ÅÊñπÂºèÔºåËÄåÂπ∂‰∏ç‰ΩøÁî®Êõ¥‰∏ì‰∏öÔºåÊõ¥È´òÊïàÔºå‰ΩÜÂÖ∑ÊúâÂ≠¶‰π†ÈöæÂ∫¶ÁöÑÈîÆÂÖ•ÊñπÂºè„ÄÇÂÖ∂ÂÆûÊâ™ÂøÉËá™ÈóÆÔºåËøô‰∫õÁßçÁßçË°®Áé∞ÔºåÊó†‰∏Ä‰∏ç‰ª£Ë°®ÊàëÁº∫‰πè‰∏ÄÁßçÊâìÁ†¥Áé∞Áä∂ÔºåÁ™ÅÁ†¥Ëá™Â∑±ÁöÑÈ°ΩÂº∫Á≤æÁ•û„ÄÇ ÊâÄ‰ª•ËøôÁØáÊó•ËÆ∞ÂºèÁöÑËÆ∞ÂΩïÔºåÂÖ∂‰∏ÄÂ§ßÁõÆÁöÑÂ∞±ÊòØË±°ÂæÅÈáçÂ°ëËá™ÊàëÁ≤æÁ•ûÁöÑÂºÄÂßã„ÄÇ</p><h2 id="Â¶Ç‰ΩïËØªÂ•Ω‰∏ÄÊú¨‰π¶Ôºå‰∏Ä‰∫õ‰ªñ‰∫∫ËßÅËß£Ôºö"><a class="header-anchor" href="#Â¶Ç‰ΩïËØªÂ•Ω‰∏ÄÊú¨‰π¶Ôºå‰∏Ä‰∫õ‰ªñ‰∫∫ËßÅËß£Ôºö">¬∂</a>Â¶Ç‰ΩïËØªÂ•Ω‰∏ÄÊú¨‰π¶Ôºå‰∏Ä‰∫õ‰ªñ‰∫∫ËßÅËß£Ôºö</h2><p>ÈáçÂõûÊ≠£È¢òÔºåÂ¶Ç‰ΩïËØªÂ•Ω‰∏ÄÊú¨‰π¶ÔºåÊàëËßâÂæóÊúÄÈáçË¶ÅÁöÑÂ∞±ÊòØËÆ∞ÂΩïËá™Â∑±ÁöÑÂøÉÂæóËßÅËß£Ôºå‰ª•Ê≠§Âª∫Á´ãËá™Â∑±‰∏é‰ΩúËÄÖÁöÑË∑®Êó∂Á©∫‰∫§ÊµÅÔºàÂ∞ΩÁÆ°ËøôÁßç‰∫§ÊµÅÁúã‰ººÂπ∂ÈùûÊòØÂèåÂêëÁöÑÔºâ„ÄÇ ÈÇ£‰πàÂ¶Ç‰ΩïËÉΩÂ§üËÆ∞‰ΩèËá™Â∑±ÁúãËøáÁöÑ‰π¶ÔºåÁΩë‰∏äÊêúÁ¥¢‰∫ÜÁõ∏ÂΩìÂ§öÁöÑËµÑÊñôÔºåÊúÄÂêéÂèëÁé∞ÂÖ∂ÂÆûÊñπÊ≥ïÊòØÁ±ª‰ººÁöÑÔºåÂæàÁ±ª‰ºº‰∫éÊàë‰ª¨‰∏äÂ∞èÂ≠¶Âàù‰∏≠Êó∂ÂØπ‰∏ÄÁØáËØæÊñáÁöÑÈòÖËØªÊñπÂºèÔºàÈ¶ñÂÖàÈòÖËØªÊ†áÈ¢òÔºåÈÄüËßàÔºåÂàóÂ§ßÁ∫≤ÔºåÂõûÁ≠îÁõ∏Â∫îËØæÂêéÈóÆÈ¢òÁ≠âÔºâ„ÄÇÊàëÂú®ËøôÈáåËÆ∞ÂΩï‰∏Ä‰∫õÊñπ‰æøËá™Â∑±‰ª•ÂêéÊù•ÂõûÈ°æÔºö</p><ol><li><p>ÂØπ‰π¶Á±çÊúâ‰∏Ä‰∏™Ê¶ÇÁï•ÁöÑ‰∫ÜËß£</p><ol><li>Âø´ÈÄüÊµèËßà‰π¶ÁöÑÂêÑ‰∏™ÈÉ®ÂàÜÔºå‰æãÂ¶ÇÂ∞ÅÈù¢Ôºå‰π¶ÂêçÈ°µÔºåÁõÆÂΩïÔºåÈôÑÂΩï„ÄÇÊèêÂá∫Ëá™Â∑±ÁöÑÈ¢ÑÊÉ≥ÔºàexpectationÔºâ</li><li>Ê∏ÖÊ•öËá™Â∑±Ê≠£Âú®ÈòÖËØªÁöÑ‰π¶ÁöÑÂàÜÁ±ªÔºå‰∫ÜËß£ËøôÊú¨‰π¶Âú®Ë∞à‰ªÄ‰πà„ÄÇ</li></ol></li><li><p>ÂàÜÊûêÊÄßÁöÑÈòÖËØª</p><ol><li>ÂèñÂÜ≥‰∫é‰π¶ÁöÑÁ±ªÂûãÂíåËá™Â∑±ÁöÑÂ≠¶‰π†ÁõÆÁöÑÔºåÂÅöÂ≠¶‰π†Á¨îËÆ∞ ÔºàÂÖ≥‰∫éÂ¶Ç‰ΩïÂÅöÁ¨îËÆ∞Ôºå‰∏ãÈù¢‰ºöÁâπÂà´ËØ¥ÊòéÔºâ</li><li>Èù¢ÂØπÈöæËØªÁöÑ‰π¶Êó∂Ôºå‰∏çË¶ÅËøΩÊ±ÇÁªÜËäÇÔºåËÄåÂ∞ΩÂèØËÉΩÂØπÂÖ®Â±ÄÊúâÊâÄÊääÊè°Ôºå ‰æãÂ¶ÇÂú®Êó†ÂÖ≥Á¥ßË¶ÅÊó∂ÂèØ‰ª•ÈÄâÊã©Âø´ÈÄüÊµèËßà„ÄÇ</li><li>ÊØèÂΩìËøõË°åÂÆå‰∏Ä‰∏™Â∞èËäÇÁöÑÈòÖËØªÊó∂ÔºåÈÄöËøáÁ¨îËÆ∞Êï¥ÁêÜÊÄùÁª¥ÔºåÁî®‰∏ÄÂè•ËØùÊ¶ÇÊã¨Êú¨Â∞èÁªìÁöÑ‰∏≠ÂøÉÊÄùÊÉ≥„ÄÇ</li><li>ÈòÖËØªÂÆå‰∏ÄÊú¨‰π¶ÂêéÔºåÈÄöËøáÁ¨îËÆ∞ÂØπÊï¥Êú¨‰π¶ÂàóÂá∫Á∫≤Ë¶ÅÔºåÂπ∂‰∏îÂ∞ΩÂèØËÉΩÁî®Êõ¥Áü≠ÁöÑÊñáÂ≠óÊù•ÊèêÁÇºÊï¥Êú¨‰π¶ÁöÑÂÜÖÂÆπÂÅö‰∏Ä‰∏™ÊúÄÂêéÊÄªÁªì„ÄÇ</li></ol></li><li><p>ÈòÖÂêé</p><ol><li><p>ÂàÜÊûê‰ΩúËÄÖÂÜôËøôÊú¨‰π¶ÁöÑÁõÆÁöÑÔºåËá™ÊàëÂõûÁ≠î‰∏Ä‰∫õÁ¨îËÆ∞‰∏≠ÊõæÁªèÁöÑÈóÆÈ¢òÔºåÊèêÁÇº‰∏≠ÂøÉËØç„ÄÇ</p></li><li><p>ÊúâÂøÖË¶ÅÂèØ‰ª•ÂÜô‰∏ÄÁØá‰π¶ËØÑÂπ∂ÂàÜ‰∫´ÁªôÂ§ßÂÆ∂„ÄÇ</p></li></ol></li></ol><h2 id="ÈòÖËØªÁ¨îËÆ∞ÊÄé‰πàÂÅöÔºö"><a class="header-anchor" href="#ÈòÖËØªÁ¨îËÆ∞ÊÄé‰πàÂÅöÔºö">¬∂</a>ÈòÖËØªÁ¨îËÆ∞ÊÄé‰πàÂÅöÔºö</h2><p>Ëá™Â∞èÂ≠¶ÂºÄÂßãÔºåÊàë‰ª¨ÈÉΩÂú®Â≠¶‰π†‰∏≠ÈÄöËøá‰∏çÊñ≠Âú∞ËÆ∞Á¨îËÆ∞Êù•Â§ØÂÆûËá™Â∑±ÁöÑÊâÄÂ≠¶„ÄÇÂΩìÊ∏êÊ∏êËøõÂÖ•ÈúÄË¶ÅÊõ¥È´ò‰∏ìÊ≥®ÂäõÂíåÈ´òÂ§çÊùÇÂ∫¶ÔºåÈ´ò‰∏ì‰∏öÊÄßÁöÑÂ≠¶‰π†‰∏≠ÔºåÁ¨îËÆ∞ÁöÑÈáçË¶ÅÊÄßÊõ¥Âä†Âá∏Êòæ„ÄÇ ËÆ∞Á¨îËÆ∞ÊòØ‰∏ÄÁßçÂºïÂØºËá™ÊàëÊÄùÁª¥ÁöÑÊñπÂºèÔºåÂ¶ÇÊûúÊàë‰ª¨‰∏çÂÅúÂú∞ÈòÖËØªÔºåÂê∏Êî∂Áü•ËØÜÔºåÊàë‰ª¨Èöæ‰ª•ÂÜÖÂåñËøô‰∫õÁü•ËØÜÂπ∂‰∏îÁïô‰∏ãËÆ∞ÂøÜ„ÄÇËÄåÂõ†‰∏∫ËÆ∞Á¨îËÆ∞ÊòØ‰∏ÄÁßçÁõ¥ËßÇÁöÑÊÄùÁª¥ËæìÂá∫ÊñπÂºèÔºåÊàë‰ª¨ÈúÄË¶ÅÁªÑÁªáÊàë‰ª¨ÁöÑÈÄªËæëÊâçËÉΩÂ§üÊääÂ≠¶‰π†ÂÜÖÂÆπËÆ∞ÂΩï‰∏ãÊù•ÔºåÂú®Ëøô‰∏™‰ªéËæìÂÖ•Âà∞ËæìÂá∫ÁöÑËøáÁ®ã‰∏≠ÔºåÊΩúÁßªÈªòÂåñÂú∞Êàë‰ª¨ÁöÑÂ§ßËÑëËÉΩÂ§üÊõ¥‰∏ìÊ≥®Âú∞ÂØπÈóÆÈ¢òËøõË°åÊÄùËÄÉ„ÄÇÂêåÊó∂ÔºåÂõ†‰∏∫Êàë‰∏™‰∫∫ÁöÑËÆ∞ÂøÜÂ∞ö‰Ω≥ÔºåËÆ∞Á¨îËÆ∞ÊòØ‰∏ÄÁßçÁâπÂà´ÊúâÂ∏ÆÂä©ÁöÑËÆ∞ÂøÜÊñπÂºèÔºåÁî®Ëã±ÊñáÊù•ËØ¥ÔºåÂ∞±ÊòØÁâπÂà´Êñπ‰æøËá™Â∑± <strong>recap</strong> Ôºà<strong>ÊâºË¶ÅÈáçËø∞</strong>Ôºâ</p><p>ÁÆÄËÄåË®Ä‰πãÔºåËÆ∞Á¨îËÆ∞‰∏çÊòØÁõÆÁöÑÔºåÁõÆÁöÑÊòØËøõË°åÈÄªËæëÂåñÊÄùËÄÉÔºåÂºïÂØºÊÄùÁª¥ÔºåÂºïÂèëÊÄùËÄÉÔºåÂπ∂‰∏îÁïô‰∏ãËÆ∞ÂΩï„ÄÇÈÇ£Êàë‰ª¨Âà∞Â∫ïÈúÄË¶ÅËÆ∞ÂΩï‰ªÄ‰πàÔºü</p><h3 id="ÊÄªÁªì‰∏ÄÂ•óËá™Â∑±ÁöÑËØª‰π¶Á¨îËÆ∞Ê®°Êùø"><a class="header-anchor" href="#ÊÄªÁªì‰∏ÄÂ•óËá™Â∑±ÁöÑËØª‰π¶Á¨îËÆ∞Ê®°Êùø">¬∂</a>ÊÄªÁªì‰∏ÄÂ•óËá™Â∑±ÁöÑËØª‰π¶Á¨îËÆ∞Ê®°Êùø</h3><p>ÂèñÂÜ≥‰∫éËØªÁöÑ‰π¶ÁöÑÁ±ªÂûãÂíåÁõÆÁöÑÔºåËØª‰π¶Á¨îËÆ∞Ê®°ÊùøÂèØ‰ª•Èöè‰πãËÄåÂèòÂåñ„ÄÇ ÊàëËøôÈáå‰ªãÁªç‰∏ÄÂ•óËá™Â∑±ÁúãÂà∞ÁöÑÊñπÊ°àÔºö</p><figure class="highlight vala"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><pre><code class="hljs vala">„Ää‰π¶Âêç„Äã<br>‰ΩúËÄÖÔºö<br><span class="hljs-meta"># Á¨¨‰∏ÄÁ´†Ôºö[Á´†ËäÇÂÖ≥ÈîÆËØç] </span><br><span class="hljs-meta">## ÂÖ≥ÈîÆËØçÔºö</span><br><br><span class="hljs-meta">## Bullet point (ÈáçÁÇπ)Ôºö</span><br><br><span class="hljs-meta">## Êú¨Á´†Â∞èËäÇÔºö</span><br><br><span class="hljs-meta">## [Êú¨Á´†Â§Ñ‰∫éÂÖ®‰π¶ÁöÑ‰ΩúÁî®]</span><br><br><span class="hljs-meta"># Á¨¨‰∫åÁ´†Ôºö[Á´†ËäÇÂÖ≥ÈîÆËØç] </span><br><span class="hljs-meta">## ÂÖ≥ÈîÆËØçÔºö</span><br><br><span class="hljs-meta">## Bullet point (ÈáçÁÇπ)Ôºö</span><br><br><span class="hljs-meta">## Êú¨Á´†Â∞èËäÇÔºö</span><br><br>............<br><span class="hljs-meta">## [Êú¨Á´†Â§Ñ‰∫éÂÖ®‰π¶ÁöÑ‰ΩúÁî®]</span><br><br><span class="hljs-meta"># ÂÖ®ÊñáÁ∫≤Ë¶Å</span><br><br><span class="hljs-meta"># ÊúÄÂêéÊÄªÁªì</span><br></code></pre></td></tr></table></figure><p>ÊàëÊé®Ëçê‰ΩøÁî®ÁîµÂ≠êÂåñËÆ∞ÂΩïÔºåÂõ†‰∏∫Ôºö1.Êñπ‰æøÊü•ÈòÖÂíåÂõûÈ°æ 2. markdown Ê†ºÂºèÈùûÂ∏∏Êñπ‰æøÂíåÊòìÁî®ÔºåÊé®Ëçê‰ΩøÁî® ËΩØ‰ª∂ Typora„ÄÇ</p><p>ÂÜôÊú¨Âú∫Â§Ñ‰∫éÂÖ®‰π¶‰ΩúÁî®ÁöÑÁõÆÁöÑÊòØÂú®‰∫éÂØπÊï¥Êú¨‰π¶Êúâ‰∏Ä‰∏™ÈÄªËæëÊÄßÊúâ‰∏Ä‰∫õËÆ§ËØÜ„ÄÇ Á¨îËÆ∞ÁöÑÈïøÂ∫¶ÂèØÈïøÂèØÁü≠ÔºåÂèñÂÜ≥‰∫éÊüêÁ´†ËäÇ‰∫é‰π¶ÁöÑÈáçË¶ÅÊÄßÔºåÈúÄË¶ÅËØ¶Â∞ΩÁöÑÂú∞ÊñπÂ∞ΩÈáèÊ∏ÖÊ•öÔºå‰∏çÈúÄË¶ÅÁöÑÂèØ‰ª•ÁÆÄÁï•„ÄÇ</p><h2 id="Â∞èÁªì"><a class="header-anchor" href="#Â∞èÁªì">¬∂</a>Â∞èÁªì</h2><p>ÊàëÁõ∏‰ø°ÈöèÁùÄÊõ¥È´òÊïàÁöÑÈòÖËØªÂ¢ûÂ§öÔºå‰∏™‰∫∫ÁöÑÂÜô‰ΩúÂäüÂ∫ï‰πü‰ºöÈÄêÊ∏ê‰∏äÂçá„ÄÇÊõ¥ÈáçË¶ÅÁöÑÊòØÔºåÂÜô‰Ωú‰Ωú‰∏∫‰∏ÄÁßçÊÄùÁª¥ËæìÂá∫ÊâãÊÆµÔºåÂØπ‰∫éÊèêÂçáÁîüÊ¥ªÂπ∏Á¶èÊÑüÊúâÁùÄÂ•ΩÂ§Ñ„ÄÇÂú®Ëøô‰∏™‰∏ÄÂàáÈÉΩÁîµÂ≠êÂåñÁöÑ‰∏ñÁïåÔºåÊàë‰ª¨ÊØè‰∏™‰∫∫ËÉΩÁïô‰∏ãÁöÑË∂≥ËøπÂ∞ë‰πãÂèàÂ∞ë„ÄÇËÄå‰∏çÁÆ°Âàõ‰Ωú‰∏ÄÊú¨Â∞èËØ¥ÔºåÊí∞ÂÜô‰∏ÄÁØáÊäÄÊúØÂçöÂÆ¢Ôºå‰∫¶ÊàñÂÜô‰∏ã‰∏ÄÁØáÈöèÊÉ≥ÔºåÈÉΩËÉΩËÆ©Ëá™Â∑±ÁöÑÊÄùÁª¥ÂæóÂà∞ËÆ∞ÂΩïÔºåËøô‰æøÊòØÂÜô‰∏ãËøô‰∏ÄÂàáÁöÑÂàùÂøÉ„ÄÇÂΩìÊàë‰ª¨Â∏¶ÁùÄÁõÆÁöÑÂéªÈòÖËØªÔºåÂ∏¶ÁùÄÁñëÈóÆÂéªÊé¢Á©∂ÔºåÂ∏¶ÁùÄÊÄùËÄÉÂéªÂÜô‰ΩúÔºåÂÅöËøô‰∫õ‰∫ãÁöÑÊó∂Èó¥‰æø‰∏ç‰ºöÊµ™Ë¥πÔºåÂõ†‰∏∫Ëøô‰∫õÂ§ßËÑëÁöÑËøêÂä®‰∏éÊèêÂçáÁîüÊ¥ªÁöÑÂìÅË¥®ÊÅØÊÅØÁõ∏ÂÖ≥Ôºå‰ª•Ê≠§Ëé∑ÂæóÊõ¥Â§öÁöÑÂøÉÊµÅ‰ΩìÈ™åÔºåÊõ¥Á∫ØÁ≤πÁöÑË∫´ÂøÉËá™Áî± üíü„ÄÇ</p><p>ËÆ∞ÂΩï‰∏é</p><p>2021/7/25</p><p>‰∏Ä‰∏™ÁÇéÁÉ≠ÁöÑÂ§èÊó•Â§úÊôö üåÉ</p><p>Lucheng</p>]]></content>
    
    
    <categories>
      
      <category>articles</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blogs</tag>
      
      <tag>thinking</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PreSum</title>
    <link href="/2021/06/03/PreSum/"/>
    <url>/2021/06/03/PreSum/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ÂºÄÂßã-Starting"><a class="header-anchor" href="#ÂºÄÂßã-Starting">¬∂</a>ÂºÄÂßã Starting</h1><p>ÊúâÂõõÈÅìÂæàÁ±ª‰ººÁöÑÔºå ÂÖ≥‰∫é preSum ÁöÑÈ¢òÁõÆÔºö‰∏ªË¶ÅÁü•ËØÜÁÇπÊòØÂìàÂ∏åË°®ÂíåÂâçÁºÄÂíåÔºåË∞®‰ª•Ê≠§ËÆ∞ÂΩïÊÉ≥Ê≥ï</p><span id="more"></span><h1 id="È¢òÁõÆ-Question"><a class="header-anchor" href="#È¢òÁõÆ-Question">¬∂</a>È¢òÁõÆ Question</h1><p><a href="https://leetcode-cn.com/problems/subarray-sum-equals-k/">https://leetcode-cn.com/problems/subarray-sum-equals-k/</a></p><p><a href="https://leetcode-cn.com/problems/subarray-sums-divisible-by-k/">https://leetcode-cn.com/problems/subarray-sums-divisible-by-k/</a></p><p><a href="https://leetcode-cn.com/problems/make-sum-divisible-by-p/">https://leetcode-cn.com/problems/make-sum-divisible-by-p/</a></p><p><a href="https://leetcode-cn.com/problems/contiguous-array/">https://leetcode-cn.com/problems/contiguous-array/</a></p><h1 id="ÊÉ≥Ê≥ï-Thinking"><a class="header-anchor" href="#ÊÉ≥Ê≥ï-Thinking">¬∂</a>ÊÉ≥Ê≥ï Thinking</h1><h1 id="ÁÆóÊ≥ï-Algorithm"><a class="header-anchor" href="#ÁÆóÊ≥ï-Algorithm">¬∂</a>ÁÆóÊ≥ï Algorithm</h1><h1 id="ËøêË°åÊó∂Èó¥-Run-time"><a class="header-anchor" href="#ËøêË°åÊó∂Èó¥-Run-time">¬∂</a>ËøêË°åÊó∂Èó¥ Run-time</h1><h1 id="ÂèçÊÄù-Introspection"><a class="header-anchor" href="#ÂèçÊÄù-Introspection">¬∂</a>ÂèçÊÄù Introspection</h1>]]></content>
    
    
    <categories>
      
      <category>Algo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PreSum</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tree-Serialization.md</title>
    <link href="/2021/05/30/Tree-Serialization-md/"/>
    <url>/2021/05/30/Tree-Serialization-md/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ÂºÄÂßã-Starting"><a class="header-anchor" href="#ÂºÄÂßã-Starting">¬∂</a>ÂºÄÂßã Starting</h1><p>The Serialization of Tree</p><p><a href="https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/">https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/</a></p><span id="more"></span><h1 id="È¢òÁõÆ-Question"><a class="header-anchor" href="#È¢òÁõÆ-Question">¬∂</a>È¢òÁõÆ Question</h1><p>Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.</p><p>Design an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure.</p><p>Clarification: The input/output format is the same as how LeetCode serializes a binary tree. You do not necessarily need to follow this format, so please be creative and come up with different approaches yourself.</p><h1 id="ÊÉ≥Ê≥ï-Thinking"><a class="header-anchor" href="#ÊÉ≥Ê≥ï-Thinking">¬∂</a>ÊÉ≥Ê≥ï Thinking</h1><p>‰∏ªË¶ÅÊúâ‰∏§ÁßçÊñπÊ≥ïÔºåÂàÜÂà´ÊòØDFS Âíå BFS</p><h2 id="DFS"><a class="header-anchor" href="#DFS">¬∂</a>DFS</h2><p><strong>ÈÄíÂΩí‰∏âÈÉ®Êõ≤Ôºö</strong></p><ol><li><strong>ÊâæÊï¥‰∏™ÈÄíÂΩíÁöÑÁªàÊ≠¢Êù°‰ª∂ÔºöÈÄíÂΩíÂ∫îËØ•Âú®‰ªÄ‰πàÊó∂ÂÄôÁªìÊùüÔºü</strong></li><li><strong>ÊâæËøîÂõûÂÄºÔºöÂ∫îËØ•Áªô‰∏ä‰∏ÄÁ∫ßËøîÂõû‰ªÄ‰πà‰ø°ÊÅØÔºü</strong></li><li><strong>Êú¨Á∫ßÈÄíÂΩíÂ∫îËØ•ÂÅö‰ªÄ‰πàÔºöÂú®Ëøô‰∏ÄÁ∫ßÈÄíÂΩí‰∏≠ÔºåÂ∫îËØ•ÂÆåÊàê‰ªÄ‰πà‰ªªÂä°Ôºü</strong> Âπ∂‰∏î call to the next level</li></ol><h3 id="Serialize"><a class="header-anchor" href="#Serialize">¬∂</a>Serialize</h3><p>DFS ‰∏≠ÔºåÊàë‰ª¨ÂèØ‰ª•‰ΩøÁî® PreOrder Êù• ÈÅçÂéÜ ÊâÄÊúâÁöÑ Node„ÄÇ ÈÄíÂΩíÁöÑÁªàÊ≠¢Êù°‰ª∂‰∏∫ ÂΩì <code>root</code>‰∏çÂ≠òÂú®Êó∂ÂÄôÔºåreturn <code>&quot;#_&quot;</code> Â¶ÇÊûúNode Â≠òÂú®Ôºå Êàë‰ª¨ÂàôÊèêÂèñÂΩìÂâç Node ÁöÑÂÄºÂπ∂‰∏îÂä†‰∏ä<code>_</code>ÔºåÁÑ∂Âêé Ë∞ÉÁî®‰∏ã‰∏ÄÂ±ÇÔºåÊúÄÂêéËøîÂõûÂΩìÂâçÂ∑≤ÁªèÁîüÊàê‰∫ÜÁöÑÂ≠óÁ¨¶‰∏≤</p><h3 id="Deserialize"><a class="header-anchor" href="#Deserialize">¬∂</a>Deserialize</h3><p>È¶ñÂÖàÂàõÂª∫‰∏Ä‰∏™ queue Êñπ‰æøÈÅçÂéÜ ÊâÄÊúâÁöÑNodeÔºö</p><figure class="highlight kotlin"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs kotlin">queue = collections.deque()<br><span class="hljs-keyword">data</span> = <span class="hljs-keyword">data</span>.split(<span class="hljs-string">&quot;_&quot;</span>)<br><span class="hljs-keyword">data</span> = <span class="hljs-keyword">data</span>[:-<span class="hljs-number">1</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-keyword">data</span>:<br>queue.append(i)<br></code></pre></td></tr></table></figure><p>Á±ª‰ººÁöÑÔºåÊàë‰ª¨Áî® PreOrder Êù• ÂàõÂª∫Ê†ëÔºö</p><p>Â¶ÇÊûúÂΩìÂâç ÂÄºÊòØ<code>&quot;#&quot;</code>Âàô return None, Â¶ÇÊûú‰∏çÊòØÂàôÂàõÂª∫Áõ∏Â∫îÁöÑNode Âπ∂‰∏îcall ÂáΩÊï∞Ëá™Â∑±„ÄÇ Âπ∂ÂΩìÂâç‰∏ÄÂ±Ç return Â∑≤ÁªèÂàõÂª∫Â•Ω‰∫ÜÁöÑpartial tree</p><h2 id="BFS"><a class="header-anchor" href="#BFS">¬∂</a>BFS</h2><h3 id="Serialize-v2"><a class="header-anchor" href="#Serialize-v2">¬∂</a>Serialize</h3><p>ÂØπ‰∫éÂÆåÂÖ®‰∫åÂèâÊ†ëÔºåÂèØ‰ª•‰ΩøÁî®BFS ÊääÊâÄÊúâ Node ÁªôÂ∫èÂàóÂåñ„ÄÇ</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">serialize</span>(<span class="hljs-params">root</span>):</span><br>    ans = <span class="hljs-string">&quot;&quot;</span><br>    queue = collections.deque()<br>    queue.append(root)<br>    <span class="hljs-keyword">while</span> queue:<br>        cur = queue.popleft()<br>        <span class="hljs-keyword">if</span> cur <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            ans += <span class="hljs-string">&quot;#_&quot;</span><br>        <span class="hljs-keyword">else</span>:<br>            ans += <span class="hljs-built_in">str</span>(cur.val) + <span class="hljs-string">&quot;_&quot;</span><br>        queue.append(cur.left)<br>        queue.append(cur.right)<br>    <span class="hljs-keyword">return</span> ans[:-<span class="hljs-number">1</span>]<br></code></pre></td></tr></table></figure><p>‰∏éheapÂÆåÂÖ®‰∫åÂèâÊ†ë ÁöÑÂéüÁêÜÁ±ª‰ººÔºåÊàë‰ª¨Áü•ÈÅìÔºöÔºàËµ∑Âßã‰∫éÁºñÂè∑1Ôºâ</p><blockquote><p>Â∑≤Áü•‰∏Ä‰∏™ËäÇÁÇπÁöÑÁºñÂè∑ÊòØ iÔºåÈÇ£‰πàÂÖ∂Â∑¶Â≠êËäÇÁÇπÂ∞±ÊòØ 2 * iÔºåÂè≥Â≠êËäÇÁÇπÂ∞±ÊòØ 2 * i + 1ÔºåÁà∂ËäÇÁÇπÂ∞±ÊòØ i / 2„ÄÇ</p></blockquote><p>‰ΩÜÊòØÊ†ë‰∏ç‰∏ÄÂÆöÊòØÂÆåÂÖ®‰∫åÂèâÊ†ë„ÄÇ‰πüÂ∞±ÊòØÊàë‰ª¨ÈúÄË¶ÅËß£ÂÜ≥ËøôÁßçÈóÆÈ¢òÔºö</p><p><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gkqcfujvv4j315s0u078j.jpg" alt="img"></p><p>‰ΩÜÊòØÊ≥®ÊÑèÔºåÂõ†‰∏∫Êàë‰ª¨Âú®‰ª•‰∏ã‰ª£Á†Å‰ΩøÁî®ÁöÑÊòØ i Êù•ÂÅö incrementÔºå ÊâÄ‰ª•ÂÆÉÂøÖÂÆö‰ºöÈÅçÂéÜÊâÄÊúânodeÔºåÂõ†‰∏∫Êàë‰ª¨‰ΩøÁî®‰∫Üqueue Êù•Â≠òÂ∑≤ÁªèÁîüÊàê‰∫ÜÁöÑNodeÔºå ËßÇÂØüÂõæÔºåÂèëÁé∞Áà∂Â≠êÂØπÂ∫îÂÖ≥Á≥ªÊòØÊ≠£Á°ÆÁöÑ„ÄÇ</p><h3 id="Deserialize-v2"><a class="header-anchor" href="#Deserialize-v2">¬∂</a>Deserialize:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">deserialze</span>(<span class="hljs-params">self, data</span>):</span><br>    <span class="hljs-keyword">if</span> data == <span class="hljs-string">&quot;#&quot;</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    nodes = data.split(<span class="hljs-string">&quot;_&quot;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> nodes:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    root = TreeNode(<span class="hljs-built_in">int</span>(nodes[<span class="hljs-number">0</span>]))<br>    q = collections.deque()<br>    q.append(root)<br>    <br>    i = <span class="hljs-number">1</span><br>    <br>    <span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(nodes) -<span class="hljs-number">1</span> :<br>        cur = q.popleft()<br>        left = nodes[i]<br>        right = nodes[i+<span class="hljs-number">1</span>]<br>        i += <span class="hljs-number">2</span><br>        <span class="hljs-keyword">if</span> left != <span class="hljs-string">&quot;#&quot;</span>:<br>            l = TreeNode(<span class="hljs-built_in">int</span>(left))<br>            cur.left = l<br>            queue.append(l)<br>        <span class="hljs-keyword">if</span> right != <span class="hljs-string">&quot;#&quot;</span>:<br>            r = TreeNode(<span class="hljs-built_in">int</span>(left))<br>            cur.right = r<br>            queue.append(r)<br>     <span class="hljs-keyword">return</span> root<br></code></pre></td></tr></table></figure><h1 id="ÁÆóÊ≥ï-Algorithm"><a class="header-anchor" href="#ÁÆóÊ≥ï-Algorithm">¬∂</a>ÁÆóÊ≥ï Algorithm</h1><h2 id="DFS-v2"><a class="header-anchor" href="#DFS-v2">¬∂</a>DFS</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Definition for a binary tree node.</span><br><span class="hljs-comment"># class TreeNode(object):</span><br><span class="hljs-comment">#     def __init__(self, x):</span><br><span class="hljs-comment">#         self.val = x</span><br><span class="hljs-comment">#         self.left = None</span><br><span class="hljs-comment">#         self.right = None</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Codec</span>:</span><br> <br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">serialize</span>(<span class="hljs-params">self, root</span>):</span><br>        <span class="hljs-string">&quot;&quot;&quot;Encodes a tree to a single string.</span><br><span class="hljs-string">        </span><br><span class="hljs-string">        :type root: TreeNode</span><br><span class="hljs-string">        :rtype: str</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        <span class="hljs-keyword">return</span> self.serializeHelper(root)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">serializeHelper</span>(<span class="hljs-params">self, root</span>):</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> root:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;#_&quot;</span><br>        res = <span class="hljs-built_in">str</span>(root.val) + <span class="hljs-string">&quot;_&quot;</span><br>        res += self.serialize(root.left)<br>        res += self.serialize(root.right)<br>        <span class="hljs-keyword">return</span> res<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">deserialize</span>(<span class="hljs-params">self, data</span>):</span><br>        <span class="hljs-string">&quot;&quot;&quot;Decodes your encoded data to tree.</span><br><span class="hljs-string">        </span><br><span class="hljs-string">        :type data: str</span><br><span class="hljs-string">        :rtype: TreeNode</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        queue = collections.deque()<br>        data = data.split(<span class="hljs-string">&quot;_&quot;</span>)<br>        data = data[:-<span class="hljs-number">1</span>]<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> data:<br>            queue.append(i)<br>        <span class="hljs-keyword">return</span> self.deserializeHelper(queue)<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">deserializeHelper</span>(<span class="hljs-params">self, queue</span>):</span><br>        cur = queue.popleft()<br>        <span class="hljs-keyword">if</span> cur == <span class="hljs-string">&quot;#&quot;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        root = TreeNode(<span class="hljs-built_in">int</span>(cur))<br>        root.left = self.deserializeHelper(queue)<br>        root.right = self.deserializeHelper(queue)<br>        <span class="hljs-keyword">return</span> root<br>            <br><br><span class="hljs-comment"># Your Codec object will be instantiated and called as such:</span><br><span class="hljs-comment"># ser = Codec()</span><br><span class="hljs-comment"># deser = Codec()</span><br><span class="hljs-comment"># ans = deser.deserialize(ser.serialize(root))</span><br></code></pre></td></tr></table></figure><h1 id="BFS-v2"><a class="header-anchor" href="#BFS-v2">¬∂</a>BFS</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># Definition for a binary tree node.</span><br><span class="hljs-comment"># class TreeNode(object):</span><br><span class="hljs-comment">#     def __init__(self, x):</span><br><span class="hljs-comment">#         self.val = x</span><br><span class="hljs-comment">#         self.left = None</span><br><span class="hljs-comment">#         self.right = None</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Codec</span>:</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">serialize</span>(<span class="hljs-params">self, root</span>):</span><br>        <span class="hljs-string">&quot;&quot;&quot;Encodes a tree to a single string.</span><br><span class="hljs-string">        </span><br><span class="hljs-string">        :type root: TreeNode</span><br><span class="hljs-string">        :rtype: str</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        queue = collections.deque()<br>        queue.append(root)<br>        ans = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">while</span> queue:<br>            cur = queue.popleft()<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> cur:<br>                ans += <span class="hljs-string">&quot;#_&quot;</span><br>            <span class="hljs-keyword">else</span>:<br>                ans += <span class="hljs-built_in">str</span>(cur.val) + <span class="hljs-string">&quot;_&quot;</span><br>                queue.append(cur.left)<br>                queue.append(cur.right)     <br><br>        <span class="hljs-keyword">return</span> ans[:-<span class="hljs-number">1</span>]<br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">deserialize</span>(<span class="hljs-params">self, data</span>):</span><br>        <span class="hljs-string">&quot;&quot;&quot;Decodes your encoded data to tree.</span><br><span class="hljs-string">        </span><br><span class="hljs-string">        :type data: str</span><br><span class="hljs-string">        :rtype: TreeNode</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        <span class="hljs-keyword">if</span> data == <span class="hljs-string">&quot;#&quot;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>        data = data.split(<span class="hljs-string">&quot;_&quot;</span>)<br>        root = TreeNode(<span class="hljs-built_in">int</span>(data[<span class="hljs-number">0</span>]))<br><br>        queue = collections.deque()<br>        queue.append(root)<br>        <span class="hljs-comment"># root has been added </span><br>        i = <span class="hljs-number">1</span><br><br>        <span class="hljs-keyword">while</span> queue:<br>            cur = queue.popleft()<br>            lv = data[i]<br>            rv = data[i+<span class="hljs-number">1</span>]<br>            i+= <span class="hljs-number">2</span><br>            <span class="hljs-keyword">if</span> lv != <span class="hljs-string">&quot;#&quot;</span>:<br>                l = TreeNode(<span class="hljs-built_in">int</span>(lv))<br>                cur.left = l<br>                queue.append(l)<br>            <span class="hljs-keyword">if</span> rv != <span class="hljs-string">&quot;#&quot;</span>:<br>                r = TreeNode(<span class="hljs-built_in">int</span>(rv))<br>                cur.right = r<br>                queue.append(r)<br>        <span class="hljs-keyword">return</span> root<br><br><span class="hljs-comment"># Your Codec object will be instantiated and called as such:</span><br><span class="hljs-comment"># ser = Codec()</span><br><span class="hljs-comment"># deser = Codec()</span><br><span class="hljs-comment"># ans = deser.deserialize(ser.serialize(root))</span><br></code></pre></td></tr></table></figure><h2 id=""><a class="header-anchor" href="#">¬∂</a></h2><h1 id="ËøêË°åÊó∂Èó¥-Run-time"><a class="header-anchor" href="#ËøêË°åÊó∂Èó¥-Run-time">¬∂</a>ËøêË°åÊó∂Èó¥ Run-time</h1><h1 id="ÂèçÊÄù-Introspection"><a class="header-anchor" href="#ÂèçÊÄù-Introspection">¬∂</a>ÂèçÊÄù Introspection</h1>]]></content>
    
    
    <categories>
      
      <category>Algo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tree</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>quick_sort/Netherland Flag</title>
    <link href="/2021/05/15/quick-sort/"/>
    <url>/2021/05/15/quick-sort/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ÂºÄÂßã-Starting"><a class="header-anchor" href="#ÂºÄÂßã-Starting">¬∂</a>ÂºÄÂßã Starting</h1><p>Quick Sort Memory Sheet</p><span id="more"></span><h1 id="È¢òÁõÆ-Question"><a class="header-anchor" href="#È¢òÁõÆ-Question">¬∂</a>È¢òÁõÆ Question</h1><p><a href="https://leetcode-cn.com/problems/sort-colors/">https://leetcode-cn.com/problems/sort-colors/</a> Ëç∑ÂÖ∞ÂõΩÊóó</p><h1 id="ÊÉ≥Ê≥ï-Thinking"><a class="header-anchor" href="#ÊÉ≥Ê≥ï-Thinking">¬∂</a>ÊÉ≥Ê≥ï Thinking</h1><h1 id="ÁÆóÊ≥ï-Algorithm"><a class="header-anchor" href="#ÁÆóÊ≥ï-Algorithm">¬∂</a>ÁÆóÊ≥ï Algorithm</h1><h2 id="One-PointerÔºöDivide-into-two"><a class="header-anchor" href="#One-PointerÔºöDivide-into-two">¬∂</a>One PointerÔºöDivide into two</h2><p>ÂàùÂßãÂåñÂ∞è‰∫éÁ≠â‰∫éÂå∫Ôºà‰∏ãÁß∞ Âå∫Ôºâ Á≠â‰∫é <code>-1</code> Ôºå ÈÅçÂéÜÊï∞ÁªÑÔºö</p><ol><li>Â¶ÇÊûúÂΩìÂâçÊï∞Â≠ó&lt;= Âå∫ÂàÜÂÄºÔºö<strong>ÂΩìÂâçÊï∞</strong>Âíå<strong>Âå∫‰∏ã‰∏Ä‰∏™</strong>ÂÅö‰∫§Êç¢ÔºåÂå∫Âè≥Êâ©‰∏Ä‰∏™‰ΩçÁΩÆÔºåÂΩìÂâçÊï∞Ë∑≥‰∏ã‰∏Ä‰∏™</li><li>Â¶ÇÊûúÂΩìÂâçÊï∞Â≠ó&gt; Âå∫ÂàÜÂÄºÔºåÂå∫‰∏çÊâ©ÔºåÂΩìÂâçÊï∞Ë∑≥‰∏ã‰∏Ä‰∏™</li></ol><h2 id="Netherland-Flag"><a class="header-anchor" href="#Netherland-Flag">¬∂</a>Netherland Flag</h2><p>ÂàùÂßãÂåñÂ∞è‰∫éÂå∫Á≠â‰∫é<code>-1</code>ÂíåÂ§ß‰∫éÂå∫<code>len(array)</code>ÔºåÈÅçÂéÜÊï∞ÁªÑÔºö</p><ol><li><p>ÂΩìÂâçÊï∞&lt; Âå∫ÂàÜÂÄºÔºö</p><p>ÂΩìÂâçÊï∞Âíå<strong>Â∞èÂå∫‰∏ã‰∏Ä‰∏™</strong>‰∫§Êç¢ÔºåÂ∞èÂå∫Âè≥Êâ©ÔºåÂΩìÂâçÊï∞Ë∑≥‰∏ã‰∏Ä‰∏™</p></li><li><p>ÂΩìÂâçÊï∞== Âå∫ÂàÜÂÄº</p><p>ÂΩìÂâçÊï∞Ë∑≥‰∏ã‰∏Ä‰∏™</p></li><li><p>ÂΩìÂâçÊï∞&gt; Âå∫ÂàÜÂÄº</p><p>ÂΩìÂâçÊï∞Âíå<strong>Â§ßÂå∫Ââç‰∏Ä‰∏™</strong>‰∫§Êç¢ÔºåÂ§ßÂå∫Â∑¶Êâ©ÔºåÂΩìÂâçÊï∞Ôºå<strong>ÂΩìÂâçÊï∞‰∏çÂä®</strong>ÔºàÂõ†‰∏∫ÂΩìÂâçÊï∞ËøòÊ≤°ÊúâË¢´partitionÔºâ</p></li></ol><p>‰∏â‰∏™Âå∫ÂüüÈÉΩÊòØ‰∏∫Èó≠Âå∫Èó¥ÔºöÁ≠â‰∫éÂå∫ÂèØ‰ª•Ë°®Á§∫‰∏∫ <code>[less+1, more-1]</code>ÔºåÂ¶ÇÊûú <code>less+1 &gt; more-1</code> Âç≥Ë°®ÊòéÊ≤°ÊúâÁ≠â‰∫éÂå∫</p><h2 id="Quick-Sort"><a class="header-anchor" href="#Quick-Sort">¬∂</a>Quick Sort</h2><h1 id="ËøêË°åÊó∂Èó¥-Run-time"><a class="header-anchor" href="#ËøêË°åÊó∂Èó¥-Run-time">¬∂</a>ËøêË°åÊó∂Èó¥ Run-time</h1><h1 id="ÂèçÊÄù-Introspection"><a class="header-anchor" href="#ÂèçÊÄù-Introspection">¬∂</a>ÂèçÊÄù Introspection</h1>]]></content>
    
    
    <categories>
      
      <category>Algo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>KMP</title>
    <link href="/2021/05/10/KMP/"/>
    <url>/2021/05/10/KMP/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ÂºÄÂßã-Starting"><a class="header-anchor" href="#ÂºÄÂßã-Starting">¬∂</a>ÂºÄÂßã Starting</h1><p>Ê≠§ÁØáÊñáÂ≠óË∞®‰ª•ËÆ∞ÂΩïÂÖ≥‰∫éKMPÁÆóÊ≥ïÔºåÂøÖÈ°ªÂÜôÁÇπ‰ªÄ‰πàÂ∑©Âõ∫Ëá™Â∑±ÁöÑÂç∞Ë±°</p><p>È¢òÁõÆÔºö<a href="https://leetcode-cn.com/problems/implement-strstr/">https://leetcode-cn.com/problems/implement-strstr/</a></p><span id="more"></span><h1 id="È¢òÁõÆ-Question"><a class="header-anchor" href="#È¢òÁõÆ-Question">¬∂</a>È¢òÁõÆ Question</h1><p>Implement strStr().</p><p>Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.</p><h1 id="ÊÉ≥Ê≥ï-Thinking"><a class="header-anchor" href="#ÊÉ≥Ê≥ï-Thinking">¬∂</a>ÊÉ≥Ê≥ï Thinking</h1><p>‰∏ÄÂºÄÂßãÊÉ≥Áî®Brutal-forceÔºå ÁÑ∂‰∏çÁü•‰∏∫‰ΩïpythonÂÜôÁöÑbrutal force Á´üÁÑ∂Ë∂ÖÊó∂‰∫Ü„ÄÇ„ÄÇ„ÄÇÁúãÈ¢òËß£ÂèëÁé∞Êúâ‰∏Ä‰∏™Èì≠ÊñáKMP ÁöÑÁÆóÊ≥ïÔºåÈÅÇÂÜçÊêúÁ¥¢‰∏ÄÁï™ÔºåÂ•ΩÂ•ΩÂ≠¶‰π†‰∫Ü‰∏Ä‰∏ã</p><h1 id="ÁÆóÊ≥ï-Algorithm"><a class="header-anchor" href="#ÁÆóÊ≥ï-Algorithm">¬∂</a>ÁÆóÊ≥ï Algorithm</h1><p>È¶ñÂÖàÊö¥ÂäõÔºö</p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">strStr</span>(<span class="hljs-params">self, haystack: <span class="hljs-built_in">str</span>, needle: <span class="hljs-built_in">str</span></span>) -&gt; int:</span><br>        i = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">if</span> needle == <span class="hljs-string">&#x27;&#x27;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(haystack):<br>            <span class="hljs-keyword">if</span> haystack[i:i+<span class="hljs-built_in">len</span>(needle)] == needle:<br>                <span class="hljs-keyword">return</span> i<br>            <span class="hljs-keyword">else</span>:<br>                i+=<span class="hljs-number">1</span><br><br>        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>ËøôÈáåÂº∫ÁÉàÊé®ËçêÊú¨ËßÜÈ¢ëhttps://www.youtube.com/watch?v=dgPabAsTFa8</p><p>ÈÖçÂêàËøôÁØáÂõûÁ≠îÔºå<a href="https://www.zhihu.com/question/21923021%EF%BC%8C%E5%AF%B9KMP%E4%BC%9A%E6%9C%89%E5%BE%88%E5%A5%BD%E7%9A%84%E7%90%86%E8%A7%A3">https://www.zhihu.com/question/21923021ÔºåÂØπKMP‰ºöÊúâÂæàÂ•ΩÁöÑÁêÜËß£</a></p><p>KMPÁÆóÊ≥ï‰∏ªË¶ÅÂåÖÂê´‰∏§‰∏™‰∏ª‰ΩìÔºö</p><ol><li>Áî±Partial Match Table Âä†‰ª•Êõ¥ÊîπÂæóÂà∞ÁöÑNext table (prefix table)</li><li>Ë∞ÉÁî®Next table ÁöÑKMP ÁÆóÊ≥ï</li></ol><h2 id="Next-table"><a class="header-anchor" href="#Next-table">¬∂</a>Next table</h2><h3 id="ÂâçÂêéÁºÄ"><a class="header-anchor" href="#ÂâçÂêéÁºÄ">¬∂</a>ÂâçÂêéÁºÄ</h3><p>‰∏æ‰∏™üå∞Â≠êÔºö</p><p>‚ÄùHarry‚ÄùÁöÑÂâçÁºÄÂåÖÊã¨{‚ÄùH‚Äù, ‚ÄùHa‚Äù, ‚ÄùHar‚Äù, ‚ÄùHarr‚Äù}</p><p>‚ÄùPotter‚ÄùÁöÑÂêéÁºÄÂåÖÊã¨{‚Äùotter‚Äù, ‚Äùtter‚Äù, ‚Äùter‚Äù, ‚Äùer‚Äù, ‚Äùr‚Äù}</p><p>Note: Â≠óÁ¨¶‰∏≤Êú¨Ë∫´Âπ∂‰∏çÊòØËá™Â∑±ÁöÑÂâçÂêéÁºÄ„ÄÇ</p><h3 id="PMT"><a class="header-anchor" href="#PMT">¬∂</a>PMT</h3><p><strong>Partial Match Table (PMT) ‰∏≠ÁöÑÂÄºÊòØÂ≠óÁ¨¶‰∏≤ÁöÑÂâçÁºÄÈõÜÂêà‰∏éÂêéÁºÄÈõÜÂêàÁöÑ‰∫§ÈõÜ‰∏≠ÊúÄÈïøÂÖÉÁ¥†ÁöÑÈïøÂ∫¶</strong>.</p><blockquote><p>‰æãÂ¶ÇÔºåÂØπ‰∫é‚Äùaba‚ÄùÔºåÂÆÉÁöÑÂâçÁºÄÈõÜÂêà‰∏∫{‚Äùa‚Äù, ‚Äùab‚Äù}ÔºåÂêéÁºÄ ÈõÜÂêà‰∏∫{‚Äùba‚Äù, ‚Äùa‚Äù}„ÄÇ‰∏§‰∏™ÈõÜÂêàÁöÑ‰∫§ÈõÜ‰∏∫{‚Äùa‚Äù}ÔºåÈÇ£‰πàÈïøÂ∫¶ÊúÄÈïøÁöÑÂÖÉÁ¥†Â∞±ÊòØÂ≠óÁ¨¶‰∏≤‚Äùa‚Äù‰∫ÜÔºåÈïø Â∫¶‰∏∫1ÔºåÊâÄ‰ª•ÂØπ‰∫é‚Äùaba‚ÄùËÄåË®ÄÔºåÂÆÉÂú®PMTË°®‰∏≠ÂØπÂ∫îÁöÑÂÄºÂ∞±ÊòØ1„ÄÇÂÜçÊØîÂ¶ÇÔºåÂØπ‰∫éÂ≠óÁ¨¶‰∏≤‚Äùababa‚ÄùÔºåÂÆÉÁöÑÂâçÁºÄÈõÜÂêà‰∏∫{‚Äùa‚Äù, ‚Äùab‚Äù, ‚Äùaba‚Äù, ‚Äùabab‚Äù}ÔºåÂÆÉÁöÑÂêéÁºÄÈõÜÂêà‰∏∫{‚Äùbaba‚Äù, ‚Äùaba‚Äù, ‚Äùba‚Äù, ‚Äùa‚Äù}Ôºå ‰∏§‰∏™ÈõÜÂêàÁöÑ‰∫§ÈõÜ‰∏∫{‚Äùa‚Äù, ‚Äùaba‚Äù}ÔºåÂÖ∂‰∏≠ÊúÄÈïøÁöÑÂÖÉÁ¥†‰∏∫‚Äùaba‚ÄùÔºåÈïøÂ∫¶‰∏∫3„ÄÇ</p></blockquote><blockquote><p>Â¶ÇÂõæ 1.12 ÊâÄÁ§∫ÔºåË¶ÅÂú®‰∏ªÂ≠óÁ¨¶‰∏≤&quot;ababababca&quot;‰∏≠Êü•ÊâæÊ®°ÂºèÂ≠óÁ¨¶‰∏≤&quot;abababca&quot;„ÄÇÂ¶ÇÊûúÂú® len Â§ÑÂ≠óÁ¨¶‰∏çÂåπÈÖçÔºåÈÇ£‰πàÁî±‰∫éÂâçËæπÊâÄËØ¥ÁöÑÊ®°ÂºèÂ≠óÁ¨¶‰∏≤ PMT ÁöÑÊÄßË¥®Ôºå‰∏ªÂ≠óÁ¨¶‰∏≤‰∏≠ i ÊåáÈíà‰πãÂâçÁöÑ PMT[len ‚àí1] ‰ΩçÂ∞±‰∏ÄÂÆö‰∏éÊ®°ÂºèÂ≠óÁ¨¶‰∏≤ÁöÑÁ¨¨ 0 ‰ΩçËá≥Á¨¨ PMT[len‚àí1] ‰ΩçÊòØÁõ∏ÂêåÁöÑ„ÄÇËøôÊòØÂõ†‰∏∫‰∏ªÂ≠óÁ¨¶‰∏≤Âú® i ‰ΩçÂ§±ÈÖçÔºå‰πüÂ∞±ÊÑèÂë≥ÁùÄ‰∏ªÂ≠óÁ¨¶‰∏≤‰ªé i‚àílen Âà∞ i Ëøô‰∏ÄÊÆµÊòØ‰∏éÊ®°ÂºèÂ≠óÁ¨¶‰∏≤ÁöÑ 0 Âà∞ len Ëøô‰∏ÄÊÆµÊòØÂÆåÂÖ®Áõ∏ÂêåÁöÑ„ÄÇËÄåÊàë‰ª¨‰∏äÈù¢‰πüËß£Èáä‰∫ÜÔºåÊ®°ÂºèÂ≠óÁ¨¶‰∏≤‰ªé 0 Âà∞ len‚àí1 ÔºåÂú®Ëøô‰∏™‰æãÂ≠ê‰∏≠Â∞±ÊòØ‚Äùababab‚ÄùÔºåÂÖ∂ÂâçÁºÄÈõÜÂêà‰∏éÂêéÁºÄÈõÜÂêàÁöÑ‰∫§ÈõÜÁöÑÊúÄÈïøÂÖÉÁ¥†‰∏∫‚Äùabab‚ÄùÔºå ÈïøÂ∫¶‰∏∫4„ÄÇÊâÄ‰ª•Â∞±ÂèØ‰ª•Êñ≠Ë®ÄÔºå‰∏ªÂ≠óÁ¨¶‰∏≤‰∏≠iÊåáÈíà‰πãÂâçÁöÑ 4 ‰Ωç‰∏ÄÂÆö‰∏éÊ®°ÂºèÂ≠óÁ¨¶‰∏≤ÁöÑÁ¨¨0‰ΩçËá≥Á¨¨ 4 ‰ΩçÊòØÁõ∏ÂêåÁöÑÔºåÂç≥ÈïøÂ∫¶‰∏∫ 4 ÁöÑÂêéÁºÄ‰∏éÂâçÁºÄÁõ∏Âêå„ÄÇËøôÊ†∑‰∏ÄÊù•ÔºåÊàë‰ª¨Â∞±ÂèØ‰ª•Â∞ÜËøô‰∫õÂ≠óÁ¨¶ÊÆµÁöÑÊØîËæÉÁúÅÁï•Êéâ„ÄÇÂÖ∑‰ΩìÁöÑÂÅöÊ≥ïÊòØÔºå‰øùÊåÅiÊåáÈíà‰∏çÂä®ÔºåÁÑ∂ÂêéÂ∞ÜlenÊåáÈíàÊåáÂêëÊ®°ÂºèÂ≠óÁ¨¶‰∏≤ÁöÑPMT[len ‚àí1]‰ΩçÂç≥ÂèØ„ÄÇ</p></blockquote><p>ÁÆÄËÄåË®Ä‰πãÔºåÈ¶ñÂÖàËøõË°åÊôÆÈÄöÂåπÈÖçÔºåÂèëÁé∞Âú®iÔºåjÂ§ÑÂ§±ÈÖçÔºåÂõ†‰∏∫PMT ÁöÑÊÄßË¥®ÔºåÊàë‰ª¨Áü•ÈÅìÊ®°ÂºèÂ≠óÁ¨¶‰∏≤Ââç6‰ΩçÁöÑÊúÄÈïøÂâçÂêéÁºÄ‰∫§ÈõÜÈïøÂ∫¶‰∏∫4ÔºåÂõ†‰∏∫Ê®°ÂºèÂ≠óÁ¨¶‰∏≤Ââçj-1‰ΩçÈÉΩÊòØÂåπÈÖçÁöÑÔºåÈÇ£‰πà‰πüÂ∞±ÊòØËØ¥‰∏ªÂ≠óÁ¨¶‰∏≤ÁöÑÂêéÁºÄËÉΩÂ§üÂíåÊ®°ÂºèÂ≠óÁ¨¶‰∏≤ÁöÑÂâçÁºÄÂåπÈÖç‰∏ä„ÄÇ ÈÇ£‰πàËá™ÁÑ∂ËÄåÁÑ∂ÁöÑÔºåÂõæ(a) ÁöÑÁÅ∞Ëâ≤ÈÉ®ÂàÜÂ∞±‰∏çÈúÄË¶ÅÂåπÈÖç‰∫Ü„ÄÇÁõ∏ÂΩì‰∫é</p><p><strong>ÂõæÁâáÂú®ÂõûÁ≠î‰∏≠Êü•Áúã</strong></p><h3 id="Next-Table"><a class="header-anchor" href="#Next-Table">¬∂</a>Next Table</h3><p>next table Â∞±ÊòØÊääpmt ÁªôÂè≥Áßª‰∫ÜÔºåÂπ∂‰∏îÂú®Á¨¨0‰∏™‰ΩçÁΩÆÂèòÊàê‰∫Ü -1</p><p><strong>ÂõæÁâáÂú®ÂõûÁ≠î‰∏≠Êü•Áúã</strong></p><h3 id="Â¶Ç‰ΩïÂàõÂª∫-next-table"><a class="header-anchor" href="#Â¶Ç‰ΩïÂàõÂª∫-next-table">¬∂</a>Â¶Ç‰ΩïÂàõÂª∫ next table</h3><p>È¶ñÂÖàÊàë‰ª¨ÂèØ‰ª•ÂèëÁé∞‰∏Ä‰∏™ËßÑÂæãÔºöÂ¶ÇÊûúÂàó‰∏æÂá∫ÊâÄÊúâÊ®°ÂºèÂ≠óÁ¨¶‰∏≤ÁöÑsubstring:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># Given: P= ABABCABA</span><br><span class="hljs-comment"># All possible substrings in a list :</span><br><span class="hljs-attribute">A</span>              #  substrings[<span class="hljs-number">0</span>]     next table: <span class="hljs-number">0</span><br><span class="hljs-attribute">AB</span>   #  substrings[<span class="hljs-number">1</span>]     next table: <span class="hljs-number">0</span><br><span class="hljs-attribute">ABA</span>            #  substrings[<span class="hljs-number">2</span>]     next table: <span class="hljs-number">1</span><br><span class="hljs-attribute">ABAB</span>           #  substrings[<span class="hljs-number">3</span>]     next table: <span class="hljs-number">2</span><br><span class="hljs-attribute">ABABC</span>          #  substrings[<span class="hljs-number">4</span>]     next table: <span class="hljs-number">0</span><br><span class="hljs-attribute">ABABCA</span>         #  substrings[<span class="hljs-number">5</span>]     next table: <span class="hljs-number">1</span><br><span class="hljs-attribute">ABABCAB</span>        #  substrings[<span class="hljs-number">6</span>]     next table: <span class="hljs-number">2</span><br><span class="hljs-attribute">ABABCABA</span>       #  substrings[<span class="hljs-number">7</span>]     next table: <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>Â¶ÇÊûúÂ∑≤Áü•Êüê‰∏Ä‰∏™substrings[i] ÁöÑpmt ÂÄºÔºåÊÉ≥ÂæóÂà∞ substrings[ i+1 ]ÁöÑpmt ÂÄºÔºåÊàë‰ª¨ÂèëÁé∞Â¶ÇÊûúsubstrings[i+1] ÁöÑÊúÄÂêé‰∏Ä‰ΩçÂ¶ÇÊûúÁ≠â‰∫é Âú®substrings[i] ÁöÑpmtÂÄº ÊâÄÂØπÂ∫îÁöÑÈÇ£‰∏Ä‰ΩçÔºàÊääËøô‰∏™pmtÂΩìÊàêindexÔºâÔºåÈÇ£‰πà substrings[ i+1 ]ÁöÑpmt ÂÄº Á≠â‰∫ésubstrings[i] ÁöÑpmtÂÄº+1„ÄÇ</p><p>‰πüÂ∞±ÊòØËØ¥ÔºåÂØπ‰∫éÊüê‰∏™next table ‰∏≠ÁöÑÂÄºÔºàÁß∞‰∏∫ nextÔºâÔºåÊàë‰ª¨ÂèØ‰ª•ÁêÜËß£‰∏∫ÂåÖÂê´ÂΩìÂâçÂ≠óÊØçÁöÑsubstring ÁöÑÊúÄÈïøÂÖ¨ÂÖ±ÂâçÂêéÁºÄÁöÑÂ§ßÂ∞èÔºå‰πüÂèØ‰ª•Ë°®ÊòéÂΩìÂâçsubstring ÁöÑÁ¨¨next-1 ‰ΩçÂ≠óÊØçÂíå‰∏∫ÊúÄÈïøÂÖ¨ÂÖ±ÂâçÂêéÁºÄÁöÑÊúÄÂêé‰∏Ä‰∏™Â≠óÊØç</p><p>Ê†óÂ≠êÂ∞±ÊòØ‰∏äÈù¢ABABCA ÁöÑpmt ÊòØ1ÔºåÂ¶ÇÊûúB ==  P[ABABCABÁöÑpmt] ÂèØ‰ª•ÂæóÂà∞ABABCABÁöÑpmt+1„ÄÇ</p><p>Â¶ÇÊûú‰∏çÁõ∏Á≠âÔºåÊàë‰ª¨ÂàôÂõûÊ∫ØÂà∞len=next[len-1]„ÄÇÊàë‰ª¨Âπ∂ÈùûÊòØÂú®ÊñúÁùÄÂØπÔºå<strong>ÁõÆÁöÑÊòØÊâæÂà∞‰πãÂâçÊúÄÈïøprefixÈáåÈù¢ÁöÑÊúÄÈïøprefixÊòØÂ§öÂ∞ëÔºå‰ªéËÄåÂà§Êñ≠ÊúÄÂêéÂä†ËøõÊù•ÁöÑÈÇ£‰∏™Â≠óÁ¨¶ÂèØËÉΩÁªÑÊàê‰∏∫Â§öÈïøÁöÑÊñ∞ÁöÑprefix</strong>„ÄÇ‰æãÂ¶Ç p = aaabaaaaËøô‰∏™‰æãÂ≠êÔºåÂΩìÂÄíÊï∞Á¨¨‰∏Ä‰∏™a Ôºåi=7Ôºå len=3Ôºå È¶ñÂÖàa‰∏çÁ≠â‰∫ébÔºå ÊâÄ‰ª•Êàë‰ª¨ÊéíÈô§bÔºåËÄÉËôë len= next[2] = 2 „ÄÇËÆ∞‰ΩèÔºånextË°®Á§∫ÁöÑÊòØÊúÄÂ§ßÂâçÂêéÁºÄÔºå Âç≥aa‰∏∫ÊúÄÂ§ßÂâçÂêéÁºÄÔºåÊ≠§Êó∂p[i] == p[2] ÔºåÂç≥next[i]  = len+1!</p><p>ËøôÁßçÂàõÂª∫ÊñπÊ≥ïÂèØ‰ª•ÂèÇËÄÉ‰∏äÈù¢Ë¥¥ÁöÑÊ≤πÁÆ°ÈìæÊé•„ÄÇ</p><p>Ê†πÊçÆÂéüÁêÜÊàë‰ª¨ÂèØ‰ª•ÂæóÂà∞next:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getNext</span>(<span class="hljs-params">pattern: <span class="hljs-built_in">str</span></span>) -&gt; List[int]:</span><br>            <span class="hljs-built_in">next</span> = [<span class="hljs-literal">None</span>] * <span class="hljs-built_in">len</span>(pattern)<br>            <span class="hljs-built_in">next</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span><br>            i = <span class="hljs-number">1</span> <span class="hljs-comment"># start from next[1]</span><br>            <span class="hljs-built_in">len</span> = <span class="hljs-number">0</span><br>            <span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(pattern):<br>                <span class="hljs-keyword">if</span> pattern[i] == pattern[<span class="hljs-built_in">len</span>]: <span class="hljs-comment">#next[1] = 0 </span><br>                    <span class="hljs-built_in">len</span>+=<span class="hljs-number">1</span><br>                    <span class="hljs-built_in">next</span>[i] = <span class="hljs-built_in">len</span><br>                    i+=<span class="hljs-number">1</span><br>                <span class="hljs-keyword">else</span>:<br>                    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>&gt;<span class="hljs-number">0</span>:<br>                        <span class="hljs-built_in">len</span> = <span class="hljs-built_in">next</span>[<span class="hljs-built_in">len</span>-<span class="hljs-number">1</span>] <span class="hljs-comment">#ÂõûÊ∫ØÂà∞‰∏ä‰∏Ä‰∏™</span><br>                    <span class="hljs-keyword">else</span>:<br>                        <span class="hljs-built_in">next</span>[i] = <span class="hljs-built_in">len</span> <span class="hljs-comment"># =0</span><br>                        i+=<span class="hljs-number">1</span><br>            <span class="hljs-comment"># Right shift 1 </span><br>            i = <span class="hljs-built_in">len</span>(<span class="hljs-built_in">next</span>)-<span class="hljs-number">1</span><br>            <span class="hljs-keyword">while</span> i &gt; <span class="hljs-number">0</span>:<br>                <span class="hljs-built_in">next</span>[i] = <span class="hljs-built_in">next</span>[i-<span class="hljs-number">1</span>]<br>                i-=<span class="hljs-number">1</span><br>            <span class="hljs-built_in">next</span>[<span class="hljs-number">0</span>] = -<span class="hljs-number">1</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">next</span><br>        <br></code></pre></td></tr></table></figure><p>ÊàñËÄÖÊúâÁßçÁÆÄÂçïÁöÑÊÉ≥Ê≥ïÔºö</p><blockquote><p>ÂÖ∂ÂÆûÔºåÊ±ÇnextÊï∞ÁªÑÁöÑËøáÁ®ãÂÆåÂÖ®ÂèØ‰ª•ÁúãÊàêÂ≠óÁ¨¶‰∏≤ÂåπÈÖçÁöÑËøáÁ®ãÔºåÂç≥‰ª•Ê®°ÂºèÂ≠óÁ¨¶‰∏≤‰∏∫‰∏ªÂ≠óÁ¨¶‰∏≤Ôºå‰ª•Ê®°ÂºèÂ≠óÁ¨¶‰∏≤ÁöÑÂâçÁºÄ‰∏∫ÁõÆÊ†áÂ≠óÁ¨¶‰∏≤Ôºå‰∏ÄÊó¶Â≠óÁ¨¶‰∏≤ÂåπÈÖçÊàêÂäüÔºåÈÇ£‰πàÂΩìÂâçÁöÑnextÂÄºÂ∞±ÊòØÂåπÈÖçÊàêÂäüÁöÑÂ≠óÁ¨¶‰∏≤ÁöÑÈïøÂ∫¶„ÄÇ</p><p>ÂÖ∑‰ΩìÊù•ËØ¥ÔºåÂ∞±ÊòØ‰ªéÊ®°ÂºèÂ≠óÁ¨¶‰∏≤ÁöÑÁ¨¨‰∏Ä‰Ωç(Ê≥®ÊÑèÔºå‰∏çÂåÖÊã¨Á¨¨0‰Ωç)ÂºÄÂßãÂØπËá™Ë∫´ËøõË°åÂåπÈÖçËøêÁÆó„ÄÇ Âú®‰ªª‰∏Ä‰ΩçÁΩÆÔºåËÉΩÂåπÈÖçÁöÑÊúÄÈïøÈïøÂ∫¶Â∞±ÊòØÂΩìÂâç‰ΩçÁΩÆÁöÑnextÂÄº„ÄÇ</p></blockquote><p>Note: next ÁöÑÁ¨¨‰∏Ä‰ΩçÊòØË¢´shift ÂæóÂà∞ÁöÑÔºå‰∏ÄÂÆö‰∏∫-1ÔºåÁ¨¨‰∫å‰ΩçÂõ†‰∏∫ÊòØÊ±ÇÂæó‰∫éÈïøÂ∫¶‰ªÖ‰∏∫1 ÁöÑsubstringÔºå ÂøÖÂÆöÊ≠§next ÂÄº‰∏∫0„ÄÇÊúÄÂêé‰∏Ä‰Ωç‰ºöË¢´shiftÊéâÔºåÊâÄ‰ª•‰πü‰∏çÁî®care\</p><p>ÊÄª‰ª£Á†ÅÔºö</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">strStr</span>(<span class="hljs-params">self, haystack: <span class="hljs-built_in">str</span>, needle: <span class="hljs-built_in">str</span></span>) -&gt; int:</span><br>        <span class="hljs-keyword">if</span> needle == <span class="hljs-string">&quot;&quot;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br><br>        <span class="hljs-built_in">next</span> = self.next_table(needle)<br>        i = <span class="hljs-number">0</span> <span class="hljs-comment"># for haystack</span><br>        j = <span class="hljs-number">0</span> <span class="hljs-comment"># for needle</span><br>        <span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(haystack):<br>            <span class="hljs-keyword">if</span> j == <span class="hljs-built_in">len</span>(needle) -<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> haystack[i] == needle[j]:<br>                <span class="hljs-keyword">return</span> i-j<br>            <span class="hljs-keyword">if</span> haystack[i] == needle[j]:<br>                i += <span class="hljs-number">1</span><br>                j += <span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                j = <span class="hljs-built_in">next</span>[j]<br>                <span class="hljs-keyword">if</span> j == -<span class="hljs-number">1</span>:<br>                    i += <span class="hljs-number">1</span><br>                    j += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span><br><br><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">next_table</span>(<span class="hljs-params">self, arr</span>):</span><br>        <span class="hljs-built_in">next</span> = [<span class="hljs-literal">None</span>] * <span class="hljs-built_in">len</span>(arr)<br>        <span class="hljs-built_in">next</span>[<span class="hljs-number">0</span>] = <span class="hljs-number">0</span><br>        <span class="hljs-comment"># i represents the substring [0:i]</span><br>        i = <span class="hljs-number">1</span><br>            <span class="hljs-comment"># j represents the possible next value </span><br>        j = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> i &lt; <span class="hljs-built_in">len</span>(arr):<br>            <span class="hljs-keyword">if</span> arr[i] == arr[j]:<br>                j+=<span class="hljs-number">1</span><br>                <span class="hljs-built_in">next</span>[i] = j<br>                i+=<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">if</span> j &gt; <span class="hljs-number">0</span>:<br>                    j = <span class="hljs-built_in">next</span>[j-<span class="hljs-number">1</span>]<br>                <span class="hljs-keyword">else</span>:<br>                    <span class="hljs-built_in">next</span>[i] = j<br>                    i+=<span class="hljs-number">1</span><br>        <span class="hljs-comment"># right shift</span><br>        i = <span class="hljs-built_in">len</span>(<span class="hljs-built_in">next</span>) - <span class="hljs-number">1</span><br>        <span class="hljs-keyword">while</span> i &gt;= <span class="hljs-number">0</span>:<br>            <span class="hljs-built_in">next</span>[i] =<span class="hljs-built_in">next</span>[i-<span class="hljs-number">1</span>]<br>            i-=<span class="hljs-number">1</span><br>        <span class="hljs-built_in">next</span>[<span class="hljs-number">0</span>] = -<span class="hljs-number">1</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">next</span><br>    <br></code></pre></td></tr></table></figure><h1 id="ËøêË°åÊó∂Èó¥-Run-time"><a class="header-anchor" href="#ËøêË°åÊó∂Èó¥-Run-time">¬∂</a>ËøêË°åÊó∂Èó¥ Run-time</h1><p>Êö¥ÂäõÁÆóÊ≥ï O(mn)</p><p>KMPÁÆóÊ≥ï O(m+n)</p><h1 id="ÂèçÊÄù-Introspection"><a class="header-anchor" href="#ÂèçÊÄù-Introspection">¬∂</a>ÂèçÊÄù Introspection</h1><p>ÈúÄË¶ÅÂ§öÊ¨°Â§ç‰π†Âä†Ê∑±Âç∞Ë±°</p><p>ÂØπ‰∫é getNext ÁöÑÁªÜËäÇÔºåÈúÄË¶ÅÂ§öÂä†Â§ç‰π†</p>]]></content>
    
    
    <categories>
      
      <category>Algo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Longest-Increasing-Subsequence</title>
    <link href="/2021/04/18/Longest-Increasing-Subsequence/"/>
    <url>/2021/04/18/Longest-Increasing-Subsequence/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ÂºÄÂßã-Starting"><a class="header-anchor" href="#ÂºÄÂßã-Starting">¬∂</a>ÂºÄÂßã Starting</h1><p>Longest Increasing Subsequence</p><p><em>Algorithm by Sanjoy Dasgupta  p. 171</em></p><p><a href="https://leetcode.com/problems/longest-increasing-subsequence/">https://leetcode.com/problems/longest-increasing-subsequence/</a></p><span id="more"></span><h1 id="È¢òÁõÆ-Question"><a class="header-anchor" href="#È¢òÁõÆ-Question">¬∂</a>È¢òÁõÆ Question</h1><p>Given an integer array <code>nums</code>, return the length of the longest strictly increasing subsequence.</p><p>A <strong>subsequence</strong> is a sequence that can be derived from an array by deleting some or no elements without changing the order of the remaining elements. For example, <code>[3,6,2,7]</code> is a subsequence of the array <code>[0,3,1,6,2,2,7]</code>.</p><h1 id="ÊÉ≥Ê≥ï-Thinking"><a class="header-anchor" href="#ÊÉ≥Ê≥ï-Thinking">¬∂</a>ÊÉ≥Ê≥ï Thinking</h1><p>Âü∫‰∫éRecursionÔºåÂèØ‰ª•Áî® DP ËäÇÁúÅÊó∂Èó¥ÔºåÂ§ßÊ¶ÇÂõ†‰∏∫Ëá™Â∑±Âü∫Á°Ä‰∏çÂ§™Â•ΩÁöÑÂéüÂõ†ÔºåÂê¨Áé∞Âú®Ëøô‰∏™ËÄÅÂ∏àÁöÑËÆ≤ËØæÂê¨ÂæóÊàëÂæàËø∑Ëå´Ôºå‰∫éÊòØÂáÜÂ§áÈáçÊñ∞Êêû‰∏Ä‰∏ãËøôÈÅìÈ¢ò„ÄÇ</p><p>ÂØπ‰∫éDynamic ProgrammingÔºöËØæ‰∏äÊÄªÁªì‰∫Ü‰ª•‰∏ãÁöÑgeneral steps:</p><ol><li>Break problem into smaller subproblem</li><li>Solve smaller subproblems first (bottom-up)</li><li>Use information from smaller problem to solve a large subproblem</li></ol><p>Âú®Ëøô‰∏ÄÈ¢ò‰∏≠Ôºå‰π¶‰∏äÊèê‰æõÁöÑÊÄùË∑Ø‰∏∫Êääinput Áúã‰ΩúÊòØ‰∏Ä‰∏™DAG (<em>directed acyclic graph</em>) $E$ÔºåÊØè‰∏™node ÊòØ‰∏Ä‰∏™Êï∞Â≠óÔºåÂØπ‰∫éËøô‰∏™DAG ‰∏äÁöÑnodeÔºå Áºñ‰∏äÂ∫èÂè∑‰∏∫ $a_{i}$ Âíå $a_{j}$ Ôºåedge ÁöÑÂàõÂª∫Êù°‰ª∂Â¶Ç‰∏ãÔºàÂºïÁî®ÂéüÊñáÔºâÔºö</p><blockquote><p>Establish a node i for each element ai , and add directed edges (i, j) whenever it is possible for ai and aj to be consecutive elements in an increasing subsequence, that is, whenever i &lt; j and ai &lt; aj</p></blockquote><h1 id="ÁÆóÊ≥ï-Algorithm"><a class="header-anchor" href="#ÁÆóÊ≥ï-Algorithm">¬∂</a>ÁÆóÊ≥ï Algorithm</h1><p>for j = 1,2,3,‚Ä¶,n:</p><p>‚Äã$L(j) = 1+max{L(i): (i,j) \in E}$</p><p>return $max_{j}L(j)$</p><p>Âç≥Ôºö</p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-comment"># Dynamic programming Python implementation</span><br><span class="hljs-comment"># of LIS problem</span><br> <br><span class="hljs-comment"># lis returns length of the longest</span><br><span class="hljs-comment"># increasing subsequence in arr of size n</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lis</span>(<span class="hljs-params">arr</span>):</span><br>    n = <span class="hljs-built_in">len</span>(arr)<br> <br>    <span class="hljs-comment"># Declare the list (array) for LIS and</span><br>    <span class="hljs-comment"># initialize LIS values for all indexes</span><br>    lis = [<span class="hljs-number">1</span>]*n<br> <br>    <span class="hljs-comment"># Compute optimized LIS values in bottom up manner</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">1</span> , n):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span> , i):<br>            <span class="hljs-keyword">if</span> arr[i] &gt; arr[j] <span class="hljs-keyword">and</span> lis[i]&lt; lis[j] + <span class="hljs-number">1</span> :<br>                lis[i] = lis[j]+<span class="hljs-number">1</span><br> <br>    <span class="hljs-comment"># Initialize maximum to 0 to get</span><br>    <span class="hljs-comment"># the maximum of all LIS</span><br>    maximum = <span class="hljs-number">0</span><br> <br>    <span class="hljs-comment"># Pick maximum of all LIS values</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        maximum = <span class="hljs-built_in">max</span>(maximum , lis[i])<br> <br>    <span class="hljs-keyword">return</span> maximum<br><span class="hljs-comment"># end of lis function</span><br> <br><span class="hljs-comment"># Driver program to test above function</span><br>arr = [<span class="hljs-number">10</span>, <span class="hljs-number">22</span>, <span class="hljs-number">9</span>, <span class="hljs-number">33</span>, <span class="hljs-number">21</span>, <span class="hljs-number">50</span>, <span class="hljs-number">41</span>, <span class="hljs-number">60</span>]<br><span class="hljs-built_in">print</span> <span class="hljs-string">&quot;Length of lis is&quot;</span>, lis(arr)<br><span class="hljs-comment"># This code is contributed by Nikhil Kumar Singh</span><br></code></pre></td></tr></table></figure><p>Êù•Ê∫êÔºö<a href="https://www.geeksforgeeks.org/longest-increasing-subsequence-dp-3">GeeksForGeeks</a></p><p>node ÊòØÂê¶Â≠òÂú® Áî±Ôºö<code>if arr[i] &gt; arr[j]</code> ÂÆûÁé∞</p><p>max functionÊòØ Áî±: <code>lis[i]&lt; lis[j] + 1 </code> ÂÆûÁé∞</p><h1 id="ËøêË°åÊó∂Èó¥-Run-time"><a class="header-anchor" href="#ËøêË°åÊó∂Èó¥-Run-time">¬∂</a>ËøêË°åÊó∂Èó¥ Run-time</h1><p>$O(n^2)$</p><p>Âõ†‰∏∫DP ÊòØÂü∫‰∫é recursion ‰∏äÊõ¥ÊîπÁöÑÔºàIteration ÁâàÊú¨ÊØèÊ¨°iterateÊï¥‰∏™arr[0:i] for i&lt; len(arr)„ÄÇ DP ÁöÑ‰ºòÂäøÂú®‰∫é ÊääÊØè‰∏™node ÁöÑLIS result ÈÉΩÂ≠òÂà∞‰∫Ü‰∏Ä‰∏™array‰∏≠ÔºåËøôÊ†∑‰∏çÈúÄË¶ÅÈáçÂ§çËÆ°ÁÆóÂ∑≤ÁªèËÆ°ÁÆóËøáÁöÑsub-problem„ÄÇ</p><h1 id="ÂèçÊÄù-Introspection"><a class="header-anchor" href="#ÂèçÊÄù-Introspection">¬∂</a>ÂèçÊÄù Introspection</h1><p>Â≠¶‰π†ÁÆóÊ≥ïÔºåÂÖâËÆ§ÁúüÂê¨ËØæÊî∂Ëé∑‰∏ç‰ºöÂæàÂ§ßÔºåÁªìÂêà‰π¶Êú¨ÔºåÁΩëÁªúÔºåÊ≤πÁÆ°ÂØπÁÆóÊ≥ïËøõË°åËøõ‰∏ÄÊ≠•ÁöÑÂÆûÁé∞‰ºöÊúâÊõ¥Â§ßÂ∏ÆÂä©</p>]]></content>
    
    
    <categories>
      
      <category>algo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CMPSC465</tag>
      
      <tag>DP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Edit-Distance</title>
    <link href="/2021/04/14/Edit-Distance/"/>
    <url>/2021/04/14/Edit-Distance/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ÂºÄÂßã-Starting"><a class="header-anchor" href="#ÂºÄÂßã-Starting">¬∂</a>ÂºÄÂßã Starting</h1><p>Edit Distance</p><p><em>Algorithm by Sanjoy Dasgupta</em></p><p>p.175</p><p><a href="https://leetcode.com/problems/edit-distance/">https://leetcode.com/problems/edit-distance/</a></p><span id="more"></span><h1 id="È¢òÁõÆ-Question"><a class="header-anchor" href="#È¢òÁõÆ-Question">¬∂</a>È¢òÁõÆ Question</h1><p>Given two strings <code>word1</code> and <code>word2</code>, return <em>the minimum number of operations required to convert <code>word1</code> to <code>word2</code></em>.</p><p>You have the following three operations permitted on a word:</p><ul><li>Insert a character</li><li>Delete a character</li><li>Replace a character</li></ul><h1 id="ÊÉ≥Ê≥ï-Thinking"><a class="header-anchor" href="#ÊÉ≥Ê≥ï-Thinking">¬∂</a>ÊÉ≥Ê≥ï Thinking</h1><p>Êàë‰ª¨ÂÖàÊÉ≥ÂΩìÊúÄÂ•ΩÊÉÖÂÜµ‰∏ãÁöÑalignment between $x[1:i]$ Âíå $y[1:j]$ : Êúâ‰∏âÁßçÊÉÖÂÜµÔºö</p><table><thead><tr><th>x[1:i-1] and y[1:j] remains</th><th>x[1:i] and y[1:j-1] remains</th><th>x[1:i-1] and y[1:j-1] remains</th></tr></thead><tbody><tr><td>x[i]</td><td>‚Äî</td><td>x[i]</td></tr><tr><td>‚Äî</td><td>y[j]</td><td>y[j]</td></tr></tbody></table><p>Ââç‰∏§ËÄÖÊÉÖÂÜµ Cost ÈÉΩ‰∏∫ 1Ôºå ÊúÄÂêé‰∏ÄÁßçÊÉÖÂÜµ Â¶ÇÊûúÁõ∏Á≠âÂàôcost ‰∏∫0Ôºåotherwise ‰∏∫1</p><blockquote><p>In short, we have expressed E(i, j) in terms of three smaller subproblems E(i ‚àí 1, j), E(i, j ‚àí 1), E(i ‚àí 1, j ‚àí 1).</p></blockquote><p>Âõ†‰∏∫Êó†‰ªéÁü•ÊôìÂì™ÁßçÊÉÖÂÜµÊòØÊúÄ‰ºòÔºåÂÅö‰∏Ä‰∏™minÔºö</p><p>$E(i, j) = min$ {$1 + E(i ‚àí 1, j), 1 + E(i, j ‚àí 1), diff(i, j) + E(i ‚àí 1, j ‚àí 1)$}</p><p>‰πüÂ∞±ÊòØËØ¥ÔºåÊàë‰ª¨ÁöÑproblem Â∑≤ÁªèÂèØ‰ª•ËΩ¨ÂåñÊàêÂ§ö‰∏™sub-problemÔºåÁÑ∂Âêé optimal ÊòØÁî±ÂÖ∂‰∏≠ÊúÄÂ∞èÁöÑÁªÑÊàê„ÄÇ Êàë‰ª¨ÂèØ‰ª•Áî®matrix ÊääÊâÄÊúâÂèØËÉΩÁöÑ (i,j) ÁªÑÂêàË°®Á§∫Âá∫Êù•</p><p><img src="../images/Figure6-4.png" alt="image-20210414172023798"></p><p><img src="../images/figure6-5.png" alt="image-20210414173117110"></p><p>Êàë‰ª¨ÂèØ‰ª•ÂêåÊó∂ËÆ∞ÂΩïpathÔºå ËøôÊ†∑Âà∞ÊúÄÂêéÁªìÊûúÁöÑpathÂ∞±ËÉΩË¢´ËÆ∞ÂΩï‰∏ãÊù•„ÄÇÂæÄ‰∏ãËµ∞ÊòØdelete ÔºàÁ¨¨‰∏ÄÁßçÊÉÖÂÜµÔºâ ÔºåÂæÄÂè≥Ëµ∞ÊòØinsert ÔºàÁ¨¨‰∫åÁßçÊÉÖÂÜµÔºâ, ÊñúÁùÄËµ∞ÊòØ match or substitution</p><h1 id="ÁÆóÊ≥ï-Algorithm"><a class="header-anchor" href="#ÁÆóÊ≥ï-Algorithm">¬∂</a>ÁÆóÊ≥ï Algorithm</h1><figure class="highlight reasonml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">//Psedo-code</span><br><span class="hljs-keyword">for</span> i = <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, . . . , m:<br><span class="hljs-constructor">E(<span class="hljs-params">i</span>, 0)</span> = i<br><span class="hljs-keyword">for</span> j = <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, . . . , n:<br><span class="hljs-constructor">E(0, <span class="hljs-params">j</span>)</span> = j<br><span class="hljs-keyword">for</span> i = <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, . . . , m:<br><span class="hljs-keyword">for</span> j = <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, . . . , n:<br><span class="hljs-constructor">E(<span class="hljs-params">i</span>, <span class="hljs-params">j</span>)</span> = min&#123;<span class="hljs-constructor">E(<span class="hljs-params">i</span> ‚àí 1, <span class="hljs-params">j</span>)</span> + <span class="hljs-number">1</span>, <span class="hljs-constructor">E(<span class="hljs-params">i</span>, <span class="hljs-params">j</span> ‚àí 1)</span> + <span class="hljs-number">1</span>, <span class="hljs-constructor">E(<span class="hljs-params">i</span> ‚àí 1, <span class="hljs-params">j</span> ‚àí 1)</span> + diff(i, j)&#125;<br>return <span class="hljs-constructor">E(<span class="hljs-params">m</span>, <span class="hljs-params">n</span>)</span><br><br></code></pre></td></tr></table></figure><p>ÂâçÈù¢‰∏§‰∏™for loop initialize Ëøô‰∏™matrixÔºå Á¨¨‰∏â‰∏™ for loop ÈÅçÂéÜÊâÄÊúâÁöÑÊ†ºÂ≠êÔºàrow by rowÔºâ</p><h1 id="ËøêË°åÊó∂Èó¥-Run-time"><a class="header-anchor" href="#ËøêË°åÊó∂Èó¥-Run-time">¬∂</a>ËøêË°åÊó∂Èó¥ Run-time</h1><p>ÊØèÊ¨°Â°´ÂÜôÊ†ºÂ≠êÂ∏∏Êï∞Êó∂Èó¥ÔºåÊâÄ‰ª•ÂÖ±O(mn)</p><h1 id="ÂèçÊÄù-Introspection"><a class="header-anchor" href="#ÂèçÊÄù-Introspection">¬∂</a>ÂèçÊÄù Introspection</h1><p>üòÇÁúã‰π¶ÊØî‰∏äËØæÁÆ°Áî®</p>]]></content>
    
    
    <categories>
      
      <category>algo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CMPSC465</tag>
      
      <tag>DP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>jQuery(1)</title>
    <link href="/2021/03/18/jQuery_1/"/>
    <url>/2021/03/18/jQuery_1/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ÁÆÄÂçïÂÖ•Èó®-jQueryÔºà1Ôºâ"><a class="header-anchor" href="#ÁÆÄÂçïÂÖ•Èó®-jQueryÔºà1Ôºâ">¬∂</a>ÁÆÄÂçïÂÖ•Èó® jQueryÔºà1Ôºâ</h1><p>Â∞è‰ºô‰º¥‰∏ÄËµ∑ÂÅöprojectÔºå Ëá™Â≠¶jQuery Ë∑ü‰∏äËøõÂ∫¶</p><p>‰∏ªË¶ÅÈÉΩÊå∫ÊúâÁî®ÔºåÊâÄ‰ª•Áõ∏ÂΩì‰∫éÊê¨Ëøê‰∫ÜËøáÊù•ÔºåÊúâÊÑèÊÄùÁöÑËØùÂêåÂ≠¶‰ª¨ÂèØ‰ª•ÂéªÂÆûÈ™åÊ•ºÂ≠¶‰∏Ä‰∏ã</p><span id="more"></span><p>‰ª•‰∏ãÂÜÖÂÆπÂÖ®ÈÉ®Êù•Ê∫êÔºö</p><p><a href="https://www.lanqiao.cn/courses/22/">https://www.lanqiao.cn/courses/22/</a></p><p>[TOC]</p><h1 id="ÂºïÂÖ•"><a class="header-anchor" href="#ÂºïÂÖ•">¬∂</a>ÂºïÂÖ•</h1><p>jQuery ÂèØ‰ª•‰ΩøÁî® CDN ÂºïÂÖ•Ôºö</p><p><strong>Google CDN</strong></p><figure class="highlight html"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  &lt;script<br>    type=&quot;text/javascript&quot;<br>    src=&quot;http://ajax.googleapis.com/ajax/libs<br>/jquery/1.4.0/jquery.min.js&quot;<br>  &gt;<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br></code></pre></td></tr></table></figure><p>MicroSoft CDN</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  &lt;script<br>    type=&quot;text/javascript&quot;<br>    src=&quot;http://ajax.microsoft.com/ajax/jquery<br>/jquery-1.4.min.js&quot;<br>  &gt;<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="Syntax"><a class="header-anchor" href="#Syntax">¬∂</a>Syntax</h1><blockquote><p>jQuery ËØ≠Ê≥ïÊòØ‰∏∫ HTML ÂÖÉÁ¥†ÁöÑÈÄâÂèñÁºñÂà∂ÁöÑÔºåÂèØ‰ª•ÂØπÂÖÉÁ¥†ÊâßË°åÊüê‰∫õÊìç‰Ωú„ÄÇ</p><p>Âü∫Á°ÄËØ≠Ê≥ïÊòØÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">$(selector).action();<br></code></pre></td></tr></table></figure><ul><li>ÁæéÂÖÉÁ¨¶Âè∑ $ ÂÆö‰πâ jQuery„ÄÇ</li><li>ÈÄâÊã©Á¨¶ÔºàselectorÔºâ‚ÄúÊü•ËØ¢‚ÄùÂíå‚ÄúÊü•Êâæ‚Äù HTML ÂÖÉÁ¥†„ÄÇ</li><li>jQuery ÁöÑ action() ÊâßË°åÂØπÂÖÉÁ¥†ÁöÑÊìç‰Ωú„ÄÇ</li></ul><p>Âè¶Â§ñÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºöÂú® jQuery Â∫ì‰∏≠ $ Á¨¶Âè∑Â∞±ÊòØ jQuery ÁöÑ‰∏Ä‰∏™ÁÆÄÂÜôÂΩ¢ÂºèÔºå‰æãÂ¶Ç <code>$(&quot;#syl&quot;)</code> Âíå <code>jQuery(&quot;#syl&quot;)</code> ÊòØÁ≠â‰ª∑ÁöÑÔºå<code>$.ajax</code> Âíå <code>jQuery.ajax</code> ÊòØÁ≠â‰ª∑ÁöÑÔºåÂ¶ÇÊûúÊ≤°ÊúâÁâπÂà´ËØ¥ÊòéÔºåÁ®ãÂ∫è‰∏≠ÁöÑ <code>$</code> Á¨¶Âè∑ÈÉΩÊòØ jQuery ÁöÑ‰∏Ä‰∏™ÁÆÄÂÜôÂΩ¢Âºè„ÄÇ</p></blockquote><p>ÊâÄÊúâÁöÑ jQuery ÂáΩÊï∞‰Ωç‰∫é‰∏Ä‰∏™ document ready ÂáΩÊï∞‰∏≠Ôºö</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br><br>&#125;);<br><br><span class="hljs-comment">// ÂèØ‰ª•ÁÆÄÂÜôÊàê</span><br><br>$(<span class="hljs-function"><span class="hljs-title">funciton</span>(<span class="hljs-params"></span>)</span>&#123;<br><br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="DOM"><a class="header-anchor" href="#DOM">¬∂</a>DOM</h2><blockquote><p>DOM ÔºàDocument Object ModelÔºâÂØπË±°Ôºå‰πüÂ∞±ÊòØÊàë‰ª¨ÁªèÂ∏∏ËØ¥ÁöÑÊñáÊ°£ÂØπË±°Ê®°ÂûãÔºåÊØè‰∏Ä‰ªΩ DOM ÈÉΩÂèØ‰ª•Ë°®Á§∫Êàê‰∏ÄÊ£µ DOM Ê†ëÔºö</p><p><img src="https://doc.shiyanlou.com/document-uid897174labid9222timestamp1547429789687.png" alt="img"></p><p>ÊØîÂ¶ÇËøôÊ†∑ÁöÑ‰∏ÄÊÆµ‰ª£Á†ÅÔºö</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure><p>h1,p,ul ‰ª•Âèä li Ê†áÁ≠æÈÉΩÊòØ DOM ÂÖÉÁ¥†ËäÇÁÇπÔºåÊàë‰ª¨ÂèØ‰ª•ÈÄöËøá JavaScript ‰∏≠ÁöÑ <code>document.getElementById()</code>Ôºå<code>document.getElementsByTagName()</code> Á≠âÊù•Ëé∑ÂèñÂÖÉÁ¥†ËäÇÁÇπÔºåÂÉèËøôÊ†∑Ëé∑ÂèñÁöÑ DOM ÂÖÉÁ¥†Â∞±ÊòØ DOM ÂØπË±°ÔºåDOM ÂØπË±°ÂèØ‰ª•‰ΩøÁî® JavaScript ‰∏≠ÁöÑÊñπÊ≥ïÔºåÊØîÂ¶ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> domObj = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;id&#x27;</span>); <span class="hljs-comment">//Ëé∑ÂèñDOMÂØπË±°</span><br><span class="hljs-keyword">var</span> objHtml = domObj.innerHTML; <span class="hljs-comment">//‰ΩøÁî®JavaScript‰∏≠ÁöÑÂ±ûÊÄßinnerHTML</span><br></code></pre></td></tr></table></figure></blockquote><h2 id="jQuery-ÂØπË±°"><a class="header-anchor" href="#jQuery-ÂØπË±°">¬∂</a>jQuery ÂØπË±°</h2><blockquote><p>jQuery ÂØπË±°Â∞±ÊòØÈÄöËøá jQuery ÂåÖË£Ö DOM ÂØπË±°Âêé‰∫ßÁîüÁöÑÂØπË±°„ÄÇjQuery ÂØπË±°ÊòØ jQuery Áã¨ÊúâÁöÑÔºåÂ¶ÇÊûú‰∏Ä‰∏™ÂØπË±°ÊòØ jQuery ÂØπË±°ÔºåÈÇ£‰πàÂÆÉÂ∞±ÂèØ‰ª•‰ΩøÁî® jQuery ÈáåÁöÑÊñπÊ≥ïÔºåÊØîÂ¶ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">$(<span class="hljs-string">&#x27;#syl&#x27;</span>).html(); <span class="hljs-comment">//Ëé∑Âèñid‰∏∫sylÁöÑÂÖÉÁ¥†ÂÜÖÁöÑhtml‰ª£Á†ÅÔºåhtml()ÊòØjQuery‰∏≠ÁöÑÊñπÊ≥ï</span><br></code></pre></td></tr></table></figure><p>ËøôÊÆµ‰ª£Á†ÅÁ≠âÂêå‰∫éÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;syl&#x27;</span>).innerHTML;<br></code></pre></td></tr></table></figure><p>Âú® jQuery ÂØπË±°‰∏≠Êó†Ê≥ï‰ΩøÁî® DOM ÂØπË±°‰∏≠ÁöÑ‰ªª‰ΩïÊñπÊ≥ïÔºå‰æãÂ¶Ç <code>$(&quot;#syl&quot;).innerHTML;</code> ‰πãÁ±ªÁöÑÂÜôÊ≥ïÊòØÈîôÁöÑÔºåÂèØ‰ª•‰ΩøÁî® <code>$(&quot;#syl&quot;).html();</code> ‰πãÁ±ªÁöÑ jQuery ÊñπÊ≥ïÊù•‰ª£ÊõøÔºåÂêåÊ†∑ÁöÑÈÅìÁêÜÔºåDOM ÂØπË±°‰πü‰∏çËÉΩ‰ΩøÁî® jQuery ÈáåÁöÑÊñπÊ≥ïÔºå‰æãÂ¶Ç:<code>document.getElementById(&quot;syl&quot;).html();</code>‰πüÊòØ‰ºöÊä•ÈîôÁöÑ„ÄÇ</p><p>Ê≥®ÔºöÁî® <code>#id</code> ‰Ωú‰∏∫ÈÄâÊã©Á¨¶ÂèñÂæóÁöÑÊòØ jQuery ÂØπË±°ËÄåÂπ∂Èùû <code>document.getElementById(&quot;id&quot;);</code> ÊâÄÂæóÂà∞ÁöÑ DOM ÂØπË±°Ôºå‰∏§ËÄÖÂπ∂‰∏çÁ≠â‰ª∑„ÄÇÊàë‰ª¨‰∏ÄÂÆöË¶Å‰ªéÂºÄÂßãÂ∞±Ê†ëÁ´ãËøôÊ†∑ÁöÑ‰∏Ä‰∏™ËßÇÂøµÔºöjQuery ÂØπË±°Âíå DOM ÂØπË±°ÊòØÊúâÂå∫Âà´ÁöÑÔºåÂÆÉ‰ª¨Âπ∂‰∏çÊòØÁ≠â‰ª∑ÁöÑ„ÄÇ</p><h4 id="jQuery-ÂØπË±°Âíå-DOM-ÂØπË±°‰πãÈó¥ÁöÑÁõ∏‰∫íËΩ¨Êç¢"><a class="header-anchor" href="#jQuery-ÂØπË±°Âíå-DOM-ÂØπË±°‰πãÈó¥ÁöÑÁõ∏‰∫íËΩ¨Êç¢">¬∂</a>jQuery ÂØπË±°Âíå DOM ÂØπË±°‰πãÈó¥ÁöÑÁõ∏‰∫íËΩ¨Êç¢</h4><p>Âú®ËÆ≤Ëß£ <code>jQuery</code> ÂØπË±°Âíå <code>DOM</code> ÂØπË±°‰πãÈó¥ÁöÑÁõ∏‰∫íËΩ¨Êç¢‰πãÂâçÔºåÊàë‰ª¨ÂÖàÁ∫¶ÂÆöÂ•ΩÂÆö‰πâÂèòÈáèÁöÑÈ£éÊ†ºÔºåÂ¶ÇÊûúËé∑ÂèñÁöÑÊòØ <code>jQuery</code> ÂØπË±°ÔºåÈÇ£‰πàÊàë‰ª¨Âú®ÂèòÈáèÂâçÈù¢Âä†‰∏ä <code>$</code> Á¨¶Âè∑Ôºå‰æãÂ¶ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> $test = jQuery ÂØπË±°;<br></code></pre></td></tr></table></figure><p>Â¶ÇÊûúËé∑ÂèñÁöÑÊòØ DOM ÂØπË±°Ôºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> test = DOM ÂØπË±°;<br><br></code></pre></td></tr></table></figure></blockquote><blockquote><ol><li>jQuery ÂØπË±°ËΩ¨Êç¢‰∏∫ DOM ÂØπË±°</li></ol><p>Êàë‰ª¨ÂâçÈù¢ËØ¥Ëøá jQuery ÂØπË±°‰∏çËÉΩ‰ΩøÁî® DOM ‰∏≠ÁöÑÊñπÊ≥ïÔºå‰ΩÜÊòØÂ¶ÇÊûúÊàë‰ª¨Âèà‰∏çÂæó‰∏ç‰ΩøÁî® DOM ‰∏≠ÁöÑÊñπÊ≥ïÂë¢ÔºüÊØîÂ¶ÇÔºöÂØπ jQuery ÂØπË±°ÊâÄÊèê‰æõÁöÑÊñπÊ≥ï‰∏çÁÜüÊÇâÊàñËÄÖÂøò‰∫Ü‰ΩÜÊòØÁü•ÈÅì DOM ‰∏≠ÁöÑÊñπÊ≥ïÔºåËá™Â∑±ÂèàÂæàÊáí‰∏çÊÉ≥ÂéªÊü• jQuery ÊâãÂÜåÊàñËÄÖ jQuery Êú¨Ë∫´Â∞±Ê≤°ÊúâÂ∞ÅË£ÖÊàë‰ª¨ÊÉ≥Ë¶Å‰ΩøÁî®ÁöÑÊñπÊ≥ï„ÄÇÊúâ‰ª•‰∏ãÁöÑ‰∏§ÁßçÂ§ÑÁêÜÊñπÊ≥ïÔºö</p><ul><li>[index]:jQuery ÂØπË±°ÊòØ‰∏Ä‰∏™Á±ª‰ººÊï∞ÁªÑÁöÑÂØπË±°ÔºåÂèØ‰ª•ÈÄöËøá <code>[index]</code> ÁöÑÊñπÊ≥ïÂæóÂà∞ÂØπÂ∫îÁöÑ DOM ÂØπË±°ÔºåÊØîÂ¶ÇÔºö</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> $cr = $(<span class="hljs-string">&#x27;#cr&#x27;</span>); <span class="hljs-comment">//jQuery ÂØπË±°</span><br><span class="hljs-keyword">var</span> cr = $cr[<span class="hljs-number">0</span>]; <span class="hljs-comment">//DOM ÂØπË±°</span><br></code></pre></td></tr></table></figure><ul><li>ÈÄöËøá get(index) ÊñπÊ≥ïÂæóÂà∞Áõ∏Â∫îÁöÑ DOM ÂØπË±°ÔºåÊØîÂ¶ÇÔºö</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> $cr = $(<span class="hljs-string">&#x27;#cr&#x27;</span>); <span class="hljs-comment">//jQuery ÂØπË±°</span><br><span class="hljs-keyword">var</span> cr = $cr.get(<span class="hljs-number">0</span>); <span class="hljs-comment">//DOM ÂØπË±°</span><br></code></pre></td></tr></table></figure><ol><li>DOM ÂØπË±°ËΩ¨Êç¢‰∏∫ jQuery ÂØπË±°</li></ol><p>ÂØπ‰∫é‰∏Ä‰∏™ DOM ÂØπË±°ÔºåÂè™ÈúÄË¶ÅÁî® <code>$()</code> Êää DOM ÂØπË±°ÂåÖË£ÖËµ∑Êù•ÔºåÂ∞±ÂèØ‰ª•Ëé∑Âæó‰∏Ä‰∏™ jQuery ÂØπË±°‰∫ÜÔºåÊØîÂ¶ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> cr = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;cr&#x27;</span>); <span class="hljs-comment">//DOM ÂØπË±°</span><br><span class="hljs-keyword">var</span> $cr = $(cr); <span class="hljs-comment">//jQuery ÂØπË±°</span><br></code></pre></td></tr></table></figure></blockquote><p>‰æãÂ≠êÔºö</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs html"> $(document).ready(function () &#123;<br>        var $cr = $(&#x27;#cr&#x27;);<br>        $cr.click(function () &#123;<br>          if ($cr.is(&#x27;:checked&#x27;)) &#123;<br>            alert(&#x27;‰Ω†Â∑≤ÂêåÊÑèÊú¨ÂçèËÆÆ&#x27;);<br>          &#125;<br>        &#125;);<br>      &#125;);// DOM ÊñπÂºè Âà§Êñ≠ ÂãæÈÄâÂ§çÈÄâÊ°Ü<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;cr&quot;</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;cr&quot;</span>&gt;</span>ÊàëÂ∑≤ÈòÖËØªÂçèËÆÆ<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      <span class="hljs-comment">//Á≠âÂæÖdomÂÖÉÁ¥†Âä†ËΩΩÂÆåÊØï</span></span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">var</span> $cr = $(<span class="hljs-string">&#x27;#cr&#x27;</span>); <span class="hljs-comment">//jQueryÂØπË±°</span></span><br><span class="javascript">        <span class="hljs-keyword">var</span> cr = $cr[<span class="hljs-number">0</span>]; <span class="hljs-comment">//DOMÂØπË±°ÔºåÊàñËÄÖ$cr.get(0)</span></span><br><span class="javascript">        $cr.click(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br>          if (cr.checked) &#123;<br><span class="javascript">            <span class="hljs-comment">//DOMÊñπÂºèÂà§Êñ≠</span></span><br><span class="javascript">            alert(<span class="hljs-string">&#x27;‰Ω†Â∑≤ÂêåÊÑèÊú¨ÂçèËÆÆ&#x27;</span>);</span><br>          &#125;<br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br>// jQuery ÊñπÂºèÂà§Êñ≠ Â§çÈÄâÊ°Ü<br> $(document).ready(function () &#123;<br>        var $cr = $(&#x27;#cr&#x27;);<br>        $cr.click(function () &#123;<br>          if ($cr.is(&#x27;:checked&#x27;)) &#123;<br>            alert(&#x27;‰Ω†Â∑≤ÂêåÊÑèÊú¨ÂçèËÆÆ&#x27;);<br>          &#125;<br>        &#125;);<br>      &#125;);<br></code></pre></td></tr></table></figure><h2 id="noConflict"><a class="header-anchor" href="#noConflict">¬∂</a>noConflict()</h2><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arcade">$.noConflict(); <span class="hljs-comment">// ÈáäÊîæ $Ê†áËØÜÁ¨¶ÁöÑÊéßÂà∂</span><br><span class="hljs-keyword">var</span> jq = $.noConflict(); <span class="hljs-comment">//Êõø‰ª£</span><br><br></code></pre></td></tr></table></figure><p>Êää <code>$</code> ‰Ωú‰∏∫ ÂèòÈáè‰º†ÈÄíÁªô ready ÊñπÊ≥ï</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>ËøôÊòØ‰∏Ä‰∏™ÊÆµËêΩ„ÄÇ<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>ÁÇπÊàë<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      <span class="hljs-comment">//Á≠âÂæÖdomÂÖÉÁ¥†Âä†ËΩΩÂÆåÊØï</span></span><br><span class="javascript">      $.noConflict();</span><br><span class="javascript">      jQuery(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">$</span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;button&#x27;</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">          $(<span class="hljs-string">&#x27;p&#x27;</span>).text(<span class="hljs-string">&#x27;jQuery ‰ªçÁÑ∂Âú®Â∑•‰Ωú!&#x27;</span>);</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="Selector-ÈÄâÊã©Âô®"><a class="header-anchor" href="#Selector-ÈÄâÊã©Âô®">¬∂</a>Selector ÈÄâÊã©Âô®</h1><blockquote><ul><li>jQuery ‰∏≠ ÁöÑÈÄâÊã©Âô®ÂÆåÂÖ®ÁªßÊâø‰∫Ü CSS ÁöÑÈ£éÊ†ºÔºåÈÄöËøá‰ΩøÁî® jQuery ÈÄâÊã©Âô®ÔºåÊàë‰ª¨ÂèØ‰ª•Âø´ÈÄüÁöÑÊâæÂà∞ÁõÆÊ†á DOM ÂÖÉÁ¥†ÔºåÁÑ∂ÂêéÂØπÂÆÉ‰ª¨ËøõË°å‰∏ÄÁ≥ªÂàóÊìç‰ΩúÔºåÂ≠¶‰ºö‰ΩøÁî®ÈÄâÊã©Âô®ÊòØÂ≠¶‰π† jQuery ÁöÑÂü∫Á°ÄÔºåjQuery ÁöÑË°å‰∏∫ËßÑÂàôÈÉΩÂøÖÈ°ªÂú®Ëé∑ÂèñÂà∞ÂÖÉÁ¥†ÂêéÊâçËÉΩÁîüÊïà„ÄÇ</li><li>jQuery ÈÄâÊã©Âô®ÂÖÅËÆ∏ÊÇ®ÂØπ HTML ÂÖÉÁ¥†ÁªÑÊàñÂçï‰∏™ÂÖÉÁ¥†ËøõË°åÊìç‰Ωú„ÄÇ</li><li>jQuery ÈÄâÊã©Âô®Âü∫‰∫éÂÖÉÁ¥†ÁöÑ id„ÄÅÁ±ª„ÄÅÁ±ªÂûã„ÄÅÂ±ûÊÄß„ÄÅÂ±ûÊÄßÂÄºÁ≠â&quot;Êü•Êâæ&quot;ÔºàÊàñÈÄâÊã©ÔºâHTML ÂÖÉÁ¥†„ÄÇ ÂÆÉÂü∫‰∫éÂ∑≤ÁªèÂ≠òÂú®ÁöÑ CSS ÈÄâÊã©Âô®ÔºåÈô§Ê≠§‰πãÂ§ñÔºåÂÆÉËøòÊúâ‰∏Ä‰∫õËá™ÂÆö‰πâÁöÑÈÄâÊã©Âô®„ÄÇ</li><li>jQuery ‰∏≠ÊâÄÊúâÈÄâÊã©Âô®ÈÉΩ‰ª•ÁæéÂÖÉÁ¨¶Âè∑ÂºÄÂ§¥Ôºö<code>$()</code>„ÄÇ</li><li>jQuery ÈÄâÊã©Âô®ÁöÑÂÜôÊ≥ïÂíå CSS ÈÄâÊã©Âô®ÁöÑÂÜôÊ≥ïÂçÅÂàÜÁõ∏‰ººÔºåÂè™‰∏çËøá‰∏§ËÄÖÁöÑ‰ΩúÁî®ÊïàÊûú‰∏çÂêåÔºåCSS ÈÄâÊã©Âô®ÊâæÂà∞ÂÖÉÁ¥†ÂêéÊòØÊ∑ªÂä†Ê†∑ÂºèÔºåËÄå jQuery ÈÄâÊã©Âô®ÊâæÂà∞ÂÖÉÁ¥†ÂêéÊòØÊ∑ªÂä†Ë°å‰∏∫ÔºåjQuery ‰∏≠Ê∂âÂèäÊìç‰Ωú CSS Ê†∑ÂºèÁöÑÈÉ®ÂàÜÊØîÂçïÁ∫ØÁöÑ CSS ÂäüËÉΩÊõ¥‰∏∫Âº∫Â§ßÔºåÂπ∂‰∏îÊã•ÊúâË∑®ÊµèËßàÂô®ÁöÑÂÖºÂÆπÊÄß„ÄÇ</li></ul></blockquote><p>jQuery Êã•ÊúâÊõ¥Â•ΩÁöÑÈîôËØØÂ§ÑÁêÜÊú∫Âà∂</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br>      ÂÆûÈ™åÊ•º<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-string">&#x27;#syl&#x27;</span>).css(<span class="hljs-string">&#x27;color&#x27;</span>, <span class="hljs-string">&#x27;red&#x27;</span>);</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Â∞ΩÁÆ°ÂÖÉÁ¥†‰∏çÂ≠òÂú®Ôºå‰∏ç‰ºöÊä•Èîô</p><blockquote><p>Âè¶Â§ñÈúÄË¶ÅÁâπÂà´Ê≥®ÊÑèÁöÑÊòØÔºå<code>$('#syl')</code> Ëé∑ÂèñÁöÑÊ∞∏ËøúÊòØÂØπË±°ÔºåÂç≥‰ΩøÁΩëÈ°µ‰∏äÊ≤°ÊúâÊ≠§ÂÖÉÁ¥†ÔºåÂõ†‰∏∫ÂΩìË¶ÅÁî® jQuery Êù•Ê£ÄÊü•Êüê‰∏™ÂÖÉÁ¥†ÂÜçÁΩëÈ°µ‰∏äÊòØÂê¶Â≠òÂú®Êó∂Ôºå‰∏çËÉΩ‰ΩøÁî®‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span> ($(<span class="hljs-string">&#x27;#syl&#x27;</span>)) &#123;<br>&#125;<br></code></pre></td></tr></table></figure><p>ËÄåÂ∫îËØ•Ê†πÊçÆËé∑ÂèñÂà∞ÂÖÉÁ¥†ÁöÑÈïøÂ∫¶Êù•Âà§Êñ≠Ôºå‰ª£Á†ÅÂ¶Ç‰∏ãÊâÄÁ§∫Ôºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span> ($(<span class="hljs-string">&#x27;#syl&#x27;</span>).length &gt; <span class="hljs-number">0</span>) &#123;<br>&#125;<br></code></pre></td></tr></table></figure><p>ÊàñËÄÖËΩ¨ÂåñÊàê DOM ÂØπË±°Êù•Âà§Êñ≠Ôºå‰ª£Á†ÅÂ¶Ç‰∏ãÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span> ($(<span class="hljs-string">&#x27;#syl&#x27;</span>)[<span class="hljs-number">0</span>]) &#123;<br>&#125;<br></code></pre></td></tr></table></figure></blockquote><h2 id="1-ID-SelectorÔºö-document-getElementById"><a class="header-anchor" href="#1-ID-SelectorÔºö-document-getElementById">¬∂</a>1. ID SelectorÔºö  document.getElementById()</h2><h4 id="ID-Selector-id-ÈÄâÊã©‰∏Ä‰∏™ÂÖ∑ÊúâÁªôÂÆö-id-Â±ûÊÄßÁöÑÂçï‰∏™ÂÖÉÁ¥†"><a class="header-anchor" href="#ID-Selector-id-ÈÄâÊã©‰∏Ä‰∏™ÂÖ∑ÊúâÁªôÂÆö-id-Â±ûÊÄßÁöÑÂçï‰∏™ÂÖÉÁ¥†">¬∂</a><code>ID Selector (&quot;#id&quot;)</code> ÈÄâÊã©‰∏Ä‰∏™ÂÖ∑ÊúâÁªôÂÆö id Â±ûÊÄßÁöÑÂçï‰∏™ÂÖÉÁ¥†</h4><p>‰æãÂ≠êÔºö</p><p>ÈÄâÊã© id ‰∏∫ demo ÁöÑÂÖÉÁ¥†ÔºåÂπ∂‰∏∫Ê≠§ÂÖÉÁ¥†ËÆæÁΩÆÈïø„ÄÅÂÆΩ„ÄÅËÉåÊôØËâ≤„ÄÇ</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;#demo&#x27;</span>).css(&#123;</span><br><span class="javascript">          width: <span class="hljs-string">&#x27;100px&#x27;</span>,</span><br><span class="javascript">          height: <span class="hljs-string">&#x27;100px&#x27;</span>,</span><br><span class="javascript">          <span class="hljs-string">&#x27;background-color&#x27;</span>: <span class="hljs-string">&#x27;red&#x27;</span>,</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="2-Class-SelectorÔºö-getElementsByClassName"><a class="header-anchor" href="#2-Class-SelectorÔºö-getElementsByClassName">¬∂</a>2. Class SelectorÔºö getElementsByClassName()</h2><h4 id="Class-Selector-class-ÈÄâÊã©ÁªôÂÆöÊ†∑ÂºèÁ±ªÂêçÁöÑÊâÄÊúâÂÖÉÁ¥†"><a class="header-anchor" href="#Class-Selector-class-ÈÄâÊã©ÁªôÂÆöÊ†∑ÂºèÁ±ªÂêçÁöÑÊâÄÊúâÂÖÉÁ¥†">¬∂</a><code>Class Selector (&quot;.class&quot;)</code> ÈÄâÊã©ÁªôÂÆöÊ†∑ÂºèÁ±ªÂêçÁöÑÊâÄÊúâÂÖÉÁ¥†</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;.demo&#x27;</span>).css(&#123;</span><br><span class="javascript">          width: <span class="hljs-string">&#x27;100px&#x27;</span>,</span><br><span class="javascript">          height: <span class="hljs-string">&#x27;100px&#x27;</span>,</span><br><span class="javascript">          <span class="hljs-string">&#x27;background-color&#x27;</span>: <span class="hljs-string">&#x27;red&#x27;</span>,</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="3-Element-Selector-getElementsByTagName"><a class="header-anchor" href="#3-Element-Selector-getElementsByTagName">¬∂</a>3. Element Selector: getElementsByTagName()</h2><h4 id="Element-Selector-element-Ê†πÊçÆÁªôÂÆöÔºàhtmlÔºâÊ†áËÆ∞ÂêçÁß∞ÈÄâÊã©ÊâÄÊúâÁöÑÂÖÉÁ¥†"><a class="header-anchor" href="#Element-Selector-element-Ê†πÊçÆÁªôÂÆöÔºàhtmlÔºâÊ†áËÆ∞ÂêçÁß∞ÈÄâÊã©ÊâÄÊúâÁöÑÂÖÉÁ¥†">¬∂</a><code>Element Selector (&quot;element&quot;)</code> Ê†πÊçÆÁªôÂÆöÔºàhtmlÔºâÊ†áËÆ∞ÂêçÁß∞ÈÄâÊã©ÊâÄÊúâÁöÑÂÖÉÁ¥†</h4><p>‰æãÂ≠êÔºö</p><p>ÈÄâÊã©ÊâÄÊúâ div ÂÖÉÁ¥†,Âπ∂‰∏∫ÊâÄÊúâÂÖÉÁ¥†ËÆæÁΩÆÈïø„ÄÅÂÆΩ„ÄÅËÉåÊôØËâ≤„ÄÇ</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>shiyanlou1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>shiyanlou2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;div&#x27;</span>).css(&#123;</span><br><span class="javascript">          width: <span class="hljs-string">&#x27;100px&#x27;</span>,</span><br><span class="javascript">          height: <span class="hljs-string">&#x27;100px&#x27;</span>,</span><br><span class="javascript">          <span class="hljs-string">&#x27;background-color&#x27;</span>: <span class="hljs-string">&#x27;red&#x27;</span>,</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="4-All-Selector-‚Äú-‚Äù"><a class="header-anchor" href="#4-All-Selector-‚Äú-‚Äù">¬∂</a>4. All Selector (‚Äú*‚Äù)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>shiyanlou1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>shiyanlou2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;*&#x27;</span>).css(&#123;</span><br><span class="javascript">          width: <span class="hljs-string">&#x27;100px&#x27;</span>,</span><br><span class="javascript">          height: <span class="hljs-string">&#x27;100px&#x27;</span>,</span><br><span class="javascript">          <span class="hljs-string">&#x27;background-color&#x27;</span>: <span class="hljs-string">&#x27;red&#x27;</span>,</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="5-Multiple-Selector-‚Äúselector1-selector2-selectorN‚Äù"><a class="header-anchor" href="#5-Multiple-Selector-‚Äúselector1-selector2-selectorN‚Äù">¬∂</a>5. Multiple Selector (‚Äúselector1, selector2, selectorN‚Äù)</h2><h4 id="Â∞ÜÊØè‰∏Ä‰∏™ÈÄâÊã©Âô®ÂåπÈÖçÂà∞ÁöÑÂÖÉÁ¥†ÂêàÂπ∂Âêé‰∏ÄËµ∑ËøîÂõû"><a class="header-anchor" href="#Â∞ÜÊØè‰∏Ä‰∏™ÈÄâÊã©Âô®ÂåπÈÖçÂà∞ÁöÑÂÖÉÁ¥†ÂêàÂπ∂Âêé‰∏ÄËµ∑ËøîÂõû">¬∂</a>Â∞ÜÊØè‰∏Ä‰∏™ÈÄâÊã©Âô®ÂåπÈÖçÂà∞ÁöÑÂÖÉÁ¥†ÂêàÂπ∂Âêé‰∏ÄËµ∑ËøîÂõû</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.lanqiao.cn/&quot;</span>&gt;</span>https://www.lanqiao.cn/<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;div,a&#x27;</span>).css(&#123;</span><br><span class="javascript">          <span class="hljs-string">&#x27;font-size&#x27;</span>: <span class="hljs-string">&#x27;30px&#x27;</span>,</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="Â±ÇÊ¨°ÈÄâÊã©Âô®"><a class="header-anchor" href="#Â±ÇÊ¨°ÈÄâÊã©Âô®">¬∂</a>Â±ÇÊ¨°ÈÄâÊã©Âô®</h1><h2 id="1-Descendant-Selector-‚Äúancestor-descendant‚Äù"><a class="header-anchor" href="#1-Descendant-Selector-‚Äúancestor-descendant‚Äù">¬∂</a>1. Descendant Selector (‚Äúancestor descendant‚Äù)</h2><p>Â¶ÇÊûúÊÉ≥ÈÄöËøá DOM ÂÖÉÁ¥†‰πãÈó¥ÁöÑÂ±ÇÊ¨°ÂÖ≥Á≥ªÊù•Ëé∑ÂèñÁâπÂÆöÂÖÉÁ¥†Ôºå‰æãÂ¶ÇÂêé‰ª£ÂÖÉÁ¥†„ÄÅÂ≠êÂÖÉÁ¥†„ÄÅÁõ∏ÈÇªÂÖÉÁ¥†ÂíåÂêåËæàÂÖÉÁ¥†Á≠âÔºåÈÇ£‰πàÊàë‰ª¨ÂèØ‰ª•‰ΩøÁî® jQuery Â±ÇÊ¨°ÈÄâÊã©Âô®„ÄÇ</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.lanqiao.cn/&quot;</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;innerDemo&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.lanqiao.cn/&quot;</span>&gt;</span>SHIYANLOU<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;.demo a&#x27;</span>).css(&#123;</span><br><span class="javascript">          <span class="hljs-string">&#x27;font-size&#x27;</span>: <span class="hljs-string">&#x27;30px&#x27;</span>,</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="2-Child-Selector-‚Äúparent-child‚Äù"><a class="header-anchor" href="#2-Child-Selector-‚Äúparent-child‚Äù">¬∂</a>2. Child Selector (‚Äúparent &gt; child‚Äù)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.lanqiao.cn/&quot;</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;innerDemo&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.lanqiao.cn/&quot;</span>&gt;</span>SHIYANLOU<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;.demo&gt;a&#x27;</span>).css(&#123;</span><br><span class="javascript">          <span class="hljs-string">&#x27;font-size&#x27;</span>: <span class="hljs-string">&#x27;30px&#x27;</span>,</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="3-Next-Adjacent-Selector-‚Äúprev-next‚Äù"><a class="header-anchor" href="#3-Next-Adjacent-Selector-‚Äúprev-next‚Äù">¬∂</a>3. Next Adjacent Selector (‚Äúprev + next‚Äù)</h2><p>prev Âíå next ÊòØ‰∏§‰∏™ÂêåÁ∫ßÂà´ÁöÑÂÖÉÁ¥†ÔºåÈÄâ‰∏≠Âú® prev ÂÖÉÁ¥†ÂêéÈù¢ÁöÑ next ÂÖÉÁ¥†„ÄÇ</p><p>‰æãÂ≠êÔºö</p><p>ÈÄâ‰∏≠ class ‰∏∫ demo ÂêéÈù¢ÁöÑ a ÂÖÉÁ¥†ÔºåÂπ∂ËÆæÁΩÆÂ≠ó‰ΩìÂ§ßÂ∞è„ÄÇ</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.lanqiao.cn/&quot;</span>&gt;</span>SHIYANLOU<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;.demo+a&#x27;</span>).css(&#123;</span><br><span class="javascript">          <span class="hljs-string">&#x27;font-size&#x27;</span>: <span class="hljs-string">&#x27;30px&#x27;</span>,</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="4-Next-Siblings-Selector-‚Äúprev-siblings‚Äù"><a class="header-anchor" href="#4-Next-Siblings-Selector-‚Äúprev-siblings‚Äù">¬∂</a>4. Next Siblings Selector (‚Äúprev ~ siblings‚Äù)</h2><p><code>prev + next</code> Âíå <code>prev ~ siblings</code> ‰πãÈó¥ÊúÄÂÄºÂæóÊ≥®ÊÑèÁöÑ‰∏çÂêåÁÇπÊòØ‰ªñ‰ª¨ÂêÑËá™ÁöÑÂèØÂèä‰πãËåÉÂõ¥„ÄÇÂâçËÄÖÂè™ËææÂà∞Á¥ßÈöèÁöÑÂêåÁ∫ßÂÖÉÁ¥†ÔºåÂêéËÄÖÊâ©Â±ï‰∫ÜËØ•ËææÂà∞Ë∑üÈöèÂÖ∂ÁöÑÊâÄÊúâÂêåÁ∫ßÂÖÉÁ¥†„ÄÇ</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span>demo<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.lanqiao.cn/&quot;</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.lanqiao.cn/&quot;</span>&gt;</span>SHIYANLOU<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;.demo~a&#x27;</span>).css(&#123;</span><br><span class="javascript">          <span class="hljs-string">&#x27;font-size&#x27;</span>: <span class="hljs-string">&#x27;30px&#x27;</span>,</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="../images/image-20210319005357146.png" alt=""></p><p>ËøôÊòØ sibling Ôºà~ÔºâÊïàÊûú</p><p><img src="../images/image-20210319005548159.png" alt="image-20210319005548159"></p><p>ËøôÊòØ next (+) ÊïàÊûú</p><blockquote><p>Âú®Â±ÇÊ¨°ÈÄâÊã©Âô®‰∏≠ÔºåÁ¨¨ 1 ‰∏™ÂíåÁ¨¨ 2 ‰∏™ÈÄâÊã©Âô®ÊØîËæÉÂ∏∏Áî®ÔºåËÄåÂêéÈù¢‰∏§‰∏™Âõ†‰∏∫Âú® jQuery ÈáåÈù¢ÂèØ‰ª•Áî®Êõ¥Âä†ÁÆÄÂçïÁöÑÊñπÊ≥ïÊù•‰ª£ÊõøÔºåÊâÄ‰ª•‰ΩøÁî®ÁöÑÂá†ÁéáÁõ∏ÂØπ‰ºöÂ∞ë‰∫õÔºö</p><ul><li>ÂèØ‰ª•‰ΩøÁî® next() ÊñπÊ≥ïÊù•‰ª£Êõø $(‚Äòprev+next‚Äô) ÈÄâÊã©Âô®„ÄÇÊØîÂ¶Ç <code>$(&quot;.one + div);</code> Âíå <code>$(&quot;.one&quot;).next(&quot;div&quot;);</code> ÊòØÁ≠â‰ª∑ÁöÑ„ÄÇ</li><li>ÂèØ‰ª•‰ΩøÁî® nextAll() ÊñπÊ≥ïÊù•‰ª£Êõø $(‚Äòprev~siblings‚Äô) ÈÄâÊã©Âô®„ÄÇÊØîÂ¶Ç <code>$(&quot;#prev~div&quot;);</code>Âíå<code>$(&quot;#prev&quot;).nextAll(&quot;div&quot;);</code> ÊòØÁ≠â‰ª∑ÁöÑ„ÄÇ</li><li>$(‚Äú#prev‚Äù).siblings(‚Äúdiv‚Äù) ÂåÖÂê´ÊâÄÊúâÂêåÁ∫ßÁöÑÂÖÉÁ¥†</li><li>$(‚Äòprev~siblings‚Äô) Âè™ÂåÖÂê´ÂêéÈù¢ÁöÑ</li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;prev&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">            $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">                <span class="hljs-comment">//ÈÄâÂèñ#prev‰πãÂêéÁöÑÊâÄÊúâÂêåËæàdivÂÖÉÁ¥†</span></span><br><span class="javascript">                $(<span class="hljs-string">&quot;#prev~div&quot;</span>).css(<span class="hljs-string">&quot;background&quot;</span>, <span class="hljs-string">&quot;#bbffaa&quot;</span>);</span><br><span class="javascript">                <span class="hljs-comment">//Âêå‰∏ä</span></span><br><span class="javascript">                $(<span class="hljs-string">&quot;#prev&quot;</span>).nextAll(<span class="hljs-string">&quot;div&quot;</span>).css(<span class="hljs-string">&quot;background&quot;</span>, <span class="hljs-string">&quot;#bbffaa&quot;</span>);</span><br><span class="javascript">                <span class="hljs-comment">//ÈÄâÂèñ#prevÊâÄÊúâÁöÑÂêåËæàdivÂÖÉÁ¥†ÔºåÊó†ËÆ∫ÂâçÂêé‰ΩçÁΩÆ </span></span><br><span class="javascript">                $(<span class="hljs-string">&quot;#prev&quot;</span>).siblings(<span class="hljs-string">&quot;div&quot;</span>).css(&#123;</span><br><span class="javascript">                    <span class="hljs-string">&quot;width&quot;</span>: <span class="hljs-string">&quot;100px&quot;</span>,</span><br><span class="javascript">                    <span class="hljs-string">&quot;height&quot;</span>: <span class="hljs-string">&quot;100px&quot;</span>,</span><br><span class="javascript">                    <span class="hljs-string">&quot;border&quot;</span>: <span class="hljs-string">&quot;1px solid red&quot;</span></span><br>                &#125;)<br>            &#125;);<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="ËøáÊª§ÈÄâÊã©Âô®"><a class="header-anchor" href="#ËøáÊª§ÈÄâÊã©Âô®">¬∂</a>ËøáÊª§ÈÄâÊã©Âô®</h1><h2 id="Ôºà1ÔºâÂü∫Êú¨ËøáÊª§ÈÄâÊã©Âô®"><a class="header-anchor" href="#Ôºà1ÔºâÂü∫Êú¨ËøáÊª§ÈÄâÊã©Âô®">¬∂</a>Ôºà1ÔºâÂü∫Êú¨ËøáÊª§ÈÄâÊã©Âô®</h2><blockquote><p>ËøáÊª§ÈÄâÊã©Âô®‰∏ªË¶ÅÊòØÈÄöËøáÁâπÂÆöÁöÑËøáÊª§ËßÑÂàôÊù•Á≠õÈÄâÂá∫ÊâÄÈúÄË¶ÅÁöÑ DOM ÂÖÉÁ¥†ÔºåËøáÊª§ËßÑÂàô‰∏é CSS ‰∏≠ÁöÑ‰º™Á±ªÈÄâÊã©Âô®ËØ≠Ê≥ïÁõ∏ÂêåÔºåÂç≥ÈÄâÊã©Âô®ÈÉΩ‰ª•‰∏Ä‰∏™ÂÜíÂè∑ <code>:</code> ÂºÄÂ§¥ÔºåÊåâÁÖß‰∏çÂêåÁöÑËøáÊª§ËßÑÂàôÔºåËøáÊª§ÈÄâÊã©Âô®ÂèØ‰ª•ÂàÜ‰∏∫Ôºö</p><ul><li><p>Âü∫Êú¨ËøáÊª§ÈÄâÊã©Âô®</p></li><li><p>ÂÜÖÂÆπËøáÊª§ÈÄâÊã©Âô®</p></li><li><p>ÂèØËßÅÊÄßËøáÊª§ÈÄâÊã©Âô®</p></li><li><p>Â±ûÊÄßËøáÊª§ÈÄâÊã©Âô®</p></li><li><p>Â≠êÂÖÉÁ¥†ËøáÊª§ÈÄâÊã©Âô®</p></li><li><p>Ë°®ÂçïÂØπË±°Â±ûÊÄßËøáÊª§ÈÄâÊã©Âô®</p></li><li><p><code>:animated Selector</code> ÈÄâÊã©ÊâÄÊúâÊ≠£Âú®ÊâßË°åÂä®ÁîªÊïàÊûúÁöÑÂÖÉÁ¥†.</p></li><li><p><code>:eq() Selector</code> Âú®ÂåπÈÖçÁöÑÈõÜÂêà‰∏≠ÈÄâÊã©Á¥¢ÂºïÂÄº‰∏∫ index ÁöÑÂÖÉÁ¥†„ÄÇ</p></li><li><p><code>:even Selector</code> ÈÄâÊã©Á¥¢ÂºïÂÄº‰∏∫ÂÅ∂Êï∞ÁöÑÂÖÉÁ¥†Ôºå‰ªé 0 ÂºÄÂßãËÆ°Êï∞„ÄÇ ‰πüÂèØ‰ª•Êü•Áúã odd.</p></li><li><p><code>:first Selector</code> ÈÄâÊã©Á¨¨‰∏Ä‰∏™ÂåπÈÖçÁöÑÂÖÉÁ¥†„ÄÇ</p></li><li><p><code>:focus Selector</code> ÈÄâÊã©ÂΩìÂâçËé∑ÂèñÁÑ¶ÁÇπÁöÑÂÖÉÁ¥†„ÄÇ</p></li><li><p><code>:gt() Selector</code> ÈÄâÊã©ÂåπÈÖçÈõÜÂêà‰∏≠ÊâÄÊúâÂ§ß‰∫éÁªôÂÆö indexÔºàÁ¥¢ÂºïÂÄºÔºâÁöÑÂÖÉÁ¥†„ÄÇ</p></li><li><p><code>:header Selector</code> ÈÄâÊã©ÊâÄÊúâÊ†áÈ¢òÂÖÉÁ¥†ÔºåÂÉè h1, h2, h3 Á≠â.</p></li><li><p><code>:lang() Selector</code> ÈÄâÊã©ÊåáÂÆöËØ≠Ë®ÄÁöÑÊâÄÊúâÂÖÉÁ¥†„ÄÇ</p></li><li><p><code>:last Selector</code> ÈÄâÊã©ÊúÄÂêé‰∏Ä‰∏™ÂåπÈÖçÁöÑÂÖÉÁ¥†„ÄÇ</p></li><li><p><code>:lt() Selector</code> ÈÄâÊã©ÂåπÈÖçÈõÜÂêà‰∏≠ÊâÄÊúâÁ¥¢ÂºïÂÄºÂ∞è‰∫éÁªôÂÆö index ÂèÇÊï∞ÁöÑÂÖÉÁ¥†„ÄÇ</p></li><li><p><code>:not() Selector</code> ÈÄâÊã©ÊâÄÊúâÂÖÉÁ¥†ÂéªÈô§‰∏çÂåπÈÖçÁªôÂÆöÁöÑÈÄâÊã©Âô®ÁöÑÂÖÉÁ¥†„ÄÇ</p></li><li><p><code>:odd Selector</code> ÈÄâÊã©Á¥¢ÂºïÂÄº‰∏∫Â•áÊï∞ÂÖÉÁ¥†Ôºå‰ªé 0 ÂºÄÂßãËÆ°Êï∞„ÄÇÂêåÊ†∑Êü•ÁúãÂÅ∂Êï∞ even.</p></li><li><p><code>:root Selector</code> ÈÄâÊã©ËØ•ÊñáÊ°£ÁöÑÊ†πÂÖÉÁ¥†„ÄÇ</p></li><li><p><code>:target Selector</code> ÈÄâÊã©Áî±ÊñáÊ°£ URI ÁöÑÊ†ºÂºèÂåñËØÜÂà´Á†ÅË°®Á§∫ÁöÑÁõÆÊ†áÂÖÉÁ¥†„ÄÇ</p></li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html">Á§∫‰æãÔºöÈÄâÂèñÊâÄÊúâÁöÑ input ÂÖÉÁ¥†‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™ input ÂÖÉÁ¥†ÔºåÂπ∂ËÆæÁΩÆÈ´òÂ∫¶„ÄÇ<br><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;text&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;textaera&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;input:first&#x27;</span>).css(&#123;</span><br><span class="javascript">          height: <span class="hljs-string">&#x27;300px&#x27;</span>,</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Êõ¥Â§öËØ¶ÁªÜÁöÑÔºöÁúãDoc</p><h2 id="Ôºà2Ôºâ-ÂÜÖÂÆπËøáÊª§ÈÄâÊã©Âô®"><a class="header-anchor" href="#Ôºà2Ôºâ-ÂÜÖÂÆπËøáÊª§ÈÄâÊã©Âô®">¬∂</a>Ôºà2Ôºâ ÂÜÖÂÆπËøáÊª§ÈÄâÊã©Âô®</h2><p>ÂÜÖÂÆπËøáÊª§ÈÄâÊã©Âô®ÁöÑËøáÊª§ËßÑÂàô‰∏ªË¶Å‰ΩìÁé∞Âú®ÂÆÉÊâÄÂåÖÂê´ÁöÑÂ≠êÂÖÉÁ¥†ÊàñÊñáÊú¨ÂÜÖÂÆπ‰∏ä„ÄÇ</p><ul><li><p><code>:contains() Selector</code> ÈÄâÊã©ÊâÄÊúâÂåÖÂê´ÊåáÂÆöÊñáÊú¨ÁöÑÂÖÉÁ¥†„ÄÇ</p></li><li><p><code>:empty Selector</code> ÈÄâÊã©ÊâÄÊúâÊ≤°ÊúâÂ≠êÂÖÉÁ¥†ÁöÑÂÖÉÁ¥†ÔºàÂåÖÊã¨ÊñáÊú¨ËäÇÁÇπÔºâ„ÄÇ</p></li><li><p><code>:has() Selector</code> ÈÄâÊã©ÂÖÉÁ¥†ÂÖ∂‰∏≠Ëá≥Â∞ëÂåÖÂê´ÊåáÂÆöÈÄâÊã©Âô®ÂåπÈÖçÁöÑ‰∏Ä‰∏™ÁßçÂÖÉÁ¥†„ÄÇ</p></li><li><p><code>:parent Selector</code> ÈÄâÊã©ÊâÄÊúâÂê´ÊúâÂ≠êÂÖÉÁ¥†ÊàñËÄÖÊñáÊú¨ÁöÑÁà∂Á∫ßÂÖÉÁ¥†„ÄÇ</p></li></ul><p>Á§∫‰æãÔºöÈÄâÂèñÂåÖÂê´ÊñáÊú¨‚Äúshiyanlou‚ÄùÁöÑ div ÂÖÉÁ¥†ÔºåÂπ∂ËÆæÁΩÆÂ≠ó‰ΩìÂ§ßÂ∞è„ÄÇ</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>demo<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&quot;div:contains(&#x27;shiyanlou&#x27;)&quot;</span>).css(&#123;</span><br><span class="javascript">          <span class="hljs-string">&#x27;font-size&#x27;</span>: <span class="hljs-string">&#x27;30px&#x27;</span>,</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Ôºà3ÔºâÂèØËßÅÊÄßËøáÊª§ÈÄâÊã©Âô®"><a class="header-anchor" href="#Ôºà3ÔºâÂèØËßÅÊÄßËøáÊª§ÈÄâÊã©Âô®">¬∂</a>Ôºà3ÔºâÂèØËßÅÊÄßËøáÊª§ÈÄâÊã©Âô®</h2><p>ÂèØËßÅÊÄßËøáÊª§ÈÄâÊã©Âô®ÊòØÊ†πÊçÆÂÖÉÁ¥†ÁöÑÂèØËßÅÂíå‰∏çÂèØËßÅÁä∂ÊÄÅÊù•ÈÄâÊã©Áõ∏Â∫îÁöÑÂÖÉÁ¥†„ÄÇ</p><ul><li><code>:hidden Selector</code> ÈÄâÊã©ÊâÄÊúâÈöêËóèÁöÑÂÖÉÁ¥†„ÄÇ</li><li><code>:visible Selector</code> ÈÄâÊã©ÊâÄÊúâÂèØËßÅÁöÑÂÖÉÁ¥†„ÄÇ</li></ul><p>Ê≥®ÊÑèÔºöÂú®ÂèØËßÅÊÄßÈÄâÊã©Âô®‰∏≠ÔºåÈúÄË¶ÅÁâπÂà´Ê≥®ÊÑèÁöÑÊòØÈÄâÊã©Âô® :hidden,ÂÆÉ‰∏ç‰ªÖÂåÖÊã¨Ê†∑ÂºèÂ±ûÊÄß display ‰∏∫ ‚Äúnone‚Äù ÁöÑÂÖÉÁ¥†Ôºå‰πüÂåÖÊã¨ÊñáÊú¨ÈöêËóèÂüüÔºà<input type="hidden" />ÔºâÂíå visibility:hidden; ‰πãÁ±ªÁöÑÂÖÉÁ¥†„ÄÇ</p><h2 id="Ôºà4ÔºâÂ±ûÊÄßËøáÊª§ÈÄâÊã©Âô®"><a class="header-anchor" href="#Ôºà4ÔºâÂ±ûÊÄßËøáÊª§ÈÄâÊã©Âô®">¬∂</a>Ôºà4ÔºâÂ±ûÊÄßËøáÊª§ÈÄâÊã©Âô®</h2><p>Â±ûÊÄßËøáÊª§ÈÄâÊã©Âô®ÁöÑËøáÊª§ËßÑÂàôÊòØÈÄöËøáÂÖÉÁ¥†ÁöÑÂ±ûÊÄßÊù•Ëé∑ÂèñÁõ∏Â∫îÁöÑÂÖÉÁ¥†„ÄÇ</p><ul><li><code>Attribute Contains Prefix Selector [name|=&quot;value&quot;]</code> ÈÄâÊã©ÊåáÂÆöÂ±ûÊÄßÂÄºÁ≠â‰∫éÁªôÂÆöÂ≠óÁ¨¶‰∏≤Êàñ‰ª•ËØ•Â≠óÁ¨¶‰∏≤‰∏∫ÂâçÁºÄÔºàËØ•Â≠óÁ¨¶‰∏≤ÂêéË∑ü‰∏Ä‰∏™ËøûÂ≠óÁ¨¶‚Äú-‚Äù ÔºâÁöÑÂÖÉÁ¥†„ÄÇ</li><li><code>Attribute Contains Selector [name*=&quot;value&quot;]</code> ÈÄâÊã©ÊåáÂÆöÂ±ûÊÄßÂÖ∑ÊúâÂåÖÂê´‰∏Ä‰∏™ÁªôÂÆöÁöÑÂ≠êÂ≠óÁ¨¶‰∏≤ÁöÑÂÖÉÁ¥†„ÄÇÔºàÈÄâÊã©ÁªôÂÆöÁöÑÂ±ûÊÄßÊòØ‰ª•ÂåÖÂê´Êüê‰∫õÂÄºÁöÑÂÖÉÁ¥†Ôºâ</li><li><code>Attribute Contains Word Selector [name~=&quot;value&quot;]</code> ÈÄâÊã©ÊåáÂÆöÂ±ûÊÄßÁî®Á©∫Ê†ºÂàÜÈöîÁöÑÂÄº‰∏≠ÂåÖÂê´‰∏Ä‰∏™ÁªôÂÆöÂÄºÁöÑÂÖÉÁ¥†„ÄÇ</li><li><code>Attribute Ends With Selector [name$=&quot;value&quot;]</code> ÈÄâÊã©ÊåáÂÆöÂ±ûÊÄßÊòØ‰ª•ÁªôÂÆöÂÄºÁªìÂ∞æÁöÑÂÖÉÁ¥†„ÄÇËøô‰∏™ÊØîËæÉÊòØÂå∫ÂàÜÂ§ßÂ∞èÂÜôÁöÑ„ÄÇ</li><li><code>Attribute Equals Selector [name=&quot;value&quot;]</code> ÈÄâÊã©ÊåáÂÆöÂ±ûÊÄßÊòØÁªôÂÆöÂÄºÁöÑÂÖÉÁ¥†„ÄÇ</li><li><code>Attribute Not Equal Selector [name!=&quot;value&quot;]</code> ÈÄâÊã©‰∏çÂ≠òÂú®ÊåáÂÆöÂ±ûÊÄßÔºåÊàñËÄÖÊåáÂÆöÁöÑÂ±ûÊÄßÂÄº‰∏çÁ≠â‰∫éÁªôÂÆöÂÄºÁöÑÂÖÉÁ¥†„ÄÇ</li><li><code>Attribute Starts With Selector [name^=&quot;value&quot;]</code> ÈÄâÊã©ÊåáÂÆöÂ±ûÊÄßÊòØ‰ª•ÁªôÂÆöÂ≠óÁ¨¶‰∏≤ÂºÄÂßãÁöÑÂÖÉÁ¥†</li><li><code>Has Attribute Selector [name]</code> ÈÄâÊã©ÊâÄÊúâÂÖ∑ÊúâÊåáÂÆöÂ±ûÊÄßÁöÑÂÖÉÁ¥†ÔºåËØ•Â±ûÊÄßÂèØ‰ª•ÊòØ‰ªª‰ΩïÂÄº„ÄÇ</li><li><code>Multiple Attribute Selector [name=&quot;value&quot;][name2=&quot;value2&quot;]</code> ÈÄâÊã©ÂåπÈÖçÊâÄÊúâÊåáÂÆöÁöÑÂ±ûÊÄßÁ≠õÈÄâÂô®ÁöÑÂÖÉÁ¥†</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html">Á§∫‰æãÔºöÈÄâÂèñÊã•Êúâ class Â±ûÊÄßÁöÑ div ÂÖÉÁ¥†ÔºåÂπ∂ËÆæÁΩÆÂ≠ó‰ΩìÂ§ßÂ∞è„ÄÇ<br><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>demo<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;shiyanlou&quot;</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;div[class]&#x27;</span>).css(&#123;</span><br><span class="javascript">          <span class="hljs-string">&#x27;font-size&#x27;</span>: <span class="hljs-string">&#x27;30px&#x27;</span>,</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="5-Â≠êÂÖÉÁ¥†ËøáÊª§ÈÄâÊã©Âô®"><a class="header-anchor" href="#5-Â≠êÂÖÉÁ¥†ËøáÊª§ÈÄâÊã©Âô®">¬∂</a>(5) Â≠êÂÖÉÁ¥†ËøáÊª§ÈÄâÊã©Âô®</h2><ul><li><code>:first-child Selector</code> ÈÄâÊã©ÊâÄÊúâÁà∂Á∫ßÂÖÉÁ¥†‰∏ãÁöÑÁ¨¨‰∏Ä‰∏™Â≠êÂÖÉÁ¥†„ÄÇ</li><li><code>:first-of-type Selector</code> ÈÄâÊã©ÊâÄÊúâÁõ∏ÂêåÁöÑÂÖÉÁ¥†ÂêçÁß∞ÁöÑÁ¨¨‰∏Ä‰∏™ÂÖÑÂºüÂÖÉÁ¥†„ÄÇ</li><li><code>:last-child Selector</code> ÈÄâÊã©ÊâÄÊúâÁà∂Á∫ßÂÖÉÁ¥†‰∏ãÁöÑÊúÄÂêé‰∏Ä‰∏™Â≠êÂÖÉÁ¥†„ÄÇ</li><li><code>:last-of-type Selector</code> ÈÄâÊã©ÁöÑÊâÄÊúâÂÖÉÁ¥†‰πãÈó¥ÂÖ∑ÊúâÁõ∏ÂêåÂÖÉÁ¥†ÂêçÁß∞ÁöÑÊúÄÂêé‰∏Ä‰∏™ÂÖÑÂºüÂÖÉÁ¥†„ÄÇ</li><li><code>:nth-child() Selector</code> ÈÄâÊã©ÁöÑ‰ªñ‰ª¨ÊâÄÊúâÁà∂ÂÖÉÁ¥†ÁöÑÁ¨¨ n ‰∏™Â≠êÂÖÉÁ¥†„ÄÇ</li><li><code>:nth-last-child() Selector</code> ÈÄâÊã©ÊâÄÊúâ‰ªñ‰ª¨Áà∂ÂÖÉÁ¥†ÁöÑÁ¨¨ n ‰∏™Â≠êÂÖÉÁ¥†„ÄÇËÆ°Êï∞‰ªéÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†ÂºÄÂßãÂà∞Á¨¨‰∏Ä‰∏™„ÄÇ</li><li><code>:nth-last-of-type() Selector</code> ÈÄâÊã©ÁöÑÊâÄÊúâ‰ªñ‰ª¨ÁöÑÁà∂Á∫ßÂÖÉÁ¥†ÁöÑÁ¨¨ n ‰∏™Â≠êÂÖÉÁ¥†ÔºåËÆ°Êï∞‰ªéÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†Âà∞Á¨¨‰∏Ä‰∏™„ÄÇ</li><li><code>:nth-of-type() Selector</code> ÈÄâÊã©ÂêåÂ±û‰∫é‰∏Ä‰∏™Áà∂ÂÖÉÁ¥†‰πã‰∏ãÔºåÂπ∂‰∏îÊ†áÁ≠æÂêçÁõ∏ÂêåÁöÑÂ≠êÂÖÉÁ¥†‰∏≠ÁöÑÁ¨¨ n ‰∏™„ÄÇ</li><li><code>:only-child Selector</code> Â¶ÇÊûúÊüê‰∏™ÂÖÉÁ¥†ÊòØÂÖ∂Áà∂ÂÖÉÁ¥†ÁöÑÂîØ‰∏ÄÂ≠êÂÖÉÁ¥†ÔºåÈÇ£‰πàÂÆÉÂ∞±‰ºöË¢´ÈÄâ‰∏≠„ÄÇ</li><li><code>:only-of-type Selector</code> ÈÄâÊã©ÊâÄÊúâÊ≤°ÊúâÂÖÑÂºüÂÖÉÁ¥†Ôºå‰∏îÂÖ∑ÊúâÁõ∏ÂêåÁöÑÂÖÉÁ¥†ÂêçÁß∞ÁöÑÂÖÉÁ¥†„ÄÇ</li></ul><p>Á§∫‰æãÔºöÈÄâÂèñÁ±ªÂêç‰∏∫ demo ÁöÑÂÖÉÁ¥†ÁöÑÁ¨¨‰∏Ä‰∏™Â≠ê div ÂÖÉÁ¥†ÔºåÂπ∂ËÆæÁΩÆÂ≠ó‰ΩìÂ§ßÂ∞è„ÄÇ</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>SHIYANLOU<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;.demo div:first-child&#x27;</span>).css(&#123;</span><br><span class="javascript">          <span class="hljs-string">&#x27;font-size&#x27;</span>: <span class="hljs-string">&#x27;30px&#x27;</span>,</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Ôºà6ÔºâË°®ÂçïÂØπË±°Â±ûÊÄßËøáÊª§ÈÄâÊã©Âô®"><a class="header-anchor" href="#Ôºà6ÔºâË°®ÂçïÂØπË±°Â±ûÊÄßËøáÊª§ÈÄâÊã©Âô®">¬∂</a>Ôºà6ÔºâË°®ÂçïÂØπË±°Â±ûÊÄßËøáÊª§ÈÄâÊã©Âô®</h2><ul><li><code>:enabled Selector</code> ÈÄâÊã©ÊâÄÊúâÂèØÁî®ÁöÑÔºàÊ≥®ÔºöÊú™Ë¢´Á¶ÅÁî®ÁöÑÂÖÉÁ¥†ÔºâÂÖÉÁ¥†„ÄÇ</li><li><code>:disabled Selector</code> ÈÄâÊã©ÊâÄÊúâË¢´Á¶ÅÁî®ÁöÑÂÖÉÁ¥†„ÄÇ</li><li><code>:checked Selector</code> ÂåπÈÖçÊâÄÊúâÂãæÈÄâÁöÑÂÖÉÁ¥†„ÄÇ</li><li><code>:selected Selector</code> Ëé∑Âèñ select ÂÖÉÁ¥†‰∏≠ÊâÄÊúâË¢´ÈÄâ‰∏≠ÁöÑÂÖÉÁ¥†„ÄÇ</li></ul><p>Á§∫‰æãÔºöÈÄâÊã©Ë¢´ÈÄâ‰∏≠ÂÖÉÁ¥†ÔºåÂπ∂ËÆæÁΩÆÂÆΩÂ∫¶„ÄÇ</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">checked</span>=<span class="hljs-string">&quot;checked&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;input:checked&#x27;</span>).css(&#123;</span><br><span class="javascript">          width: <span class="hljs-string">&#x27;300px&#x27;</span>,</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Ê≥®ÔºöÁâπÂà´ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÈÄâÊã©Âô®‰∏≠ÁöÑÁ©∫Ê†ºÊòØ‰∏çÂÆπÂøΩËßÜÁöÑÔºåÂ§ö‰∏Ä‰∏™Á©∫Ê†ºÊàñËÄÖÂ∞ë‰∏Ä‰∏™Á©∫Ê†º‰πüËÆ∏ÂæóÂà∞ÁöÑÁªìÊûúÂ∞±Êà™ÁÑ∂‰∏çÂêå‰∫ÜÔºåÊØîÂ¶Ç <code>$('.test :hidden');</code> Â∏¶Á©∫Ê†ºÁöÑÊòØÂêé‰ª£ÈÄâÊã©Âô®ÔºåË°®Á§∫ÈÄâÂèñ class ‰∏∫ test ÁöÑÂÖÉÁ¥†ÈáåÈù¢ÁöÑÈöêËóèÂÖÉÁ¥†ÔºåËÄå <code>$('.test:hidden');</code> ‰∏çÂ∏¶Á©∫Ê†ºÁöÑÊòØËøáÊª§ÈÄâÊã©Âô®ÔºåË°®Á§∫ÈÄâÂèñÈöêËóèÁöÑ class ‰∏∫ test ÁöÑÂÖÉÁ¥†„ÄÇ</p>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JS</tag>
      
      <tag>jQuery</tag>
      
      <tag>front-end</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>jQuery(2)</title>
    <link href="/2021/03/18/jQuery_2/"/>
    <url>/2021/03/18/jQuery_2/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ÁÆÄÂçïÂÖ•Èó®-jQuery-Ôºà2Ôºâ"><a class="header-anchor" href="#ÁÆÄÂçïÂÖ•Èó®-jQuery-Ôºà2Ôºâ">¬∂</a>ÁÆÄÂçïÂÖ•Èó® jQuery Ôºà2Ôºâ</h1><p>Â∞è‰ºô‰º¥‰∏ÄËµ∑ÂÅöprojectÔºå Ëá™Â≠¶jQuery Ë∑ü‰∏äËøõÂ∫¶</p><p>Á¨¨‰∫åÈÉ®ÂàÜ</p><p>ÊàëË∑≥Ëøá‰∫Ü‰∏â‰∏™‰∏çÊòØÂ§™ÈáçË¶ÅÁöÑÁ´†ËäÇÔºåÂèØ‰ª•ÂéªÂÆûÈ™åÊ•ºÁúãÂì¶ÔºåÈìæÊé•Âú®ÈáåÈù¢</p><span id="more"></span><p>‰ª•‰∏ãÂÜÖÂÆπÂÖ®ÈÉ®Êù•Ê∫êÔºö</p><p><a href="https://www.lanqiao.cn/courses/22/">https://www.lanqiao.cn/courses/22/</a></p><p>[TOC]</p><h1 id="DOM-Êìç‰Ωú"><a class="header-anchor" href="#DOM-Êìç‰Ωú">¬∂</a>DOM Êìç‰Ωú</h1><p>‰ΩøÁî® jQuery Âú®ÊñáÊ°£Ê†ë‰∏äÊü•ÊâæËäÇÁÇπÈùûÂ∏∏ÂÆπÊòìÔºåÊàë‰ª¨ÂèØ‰ª•ÈÄöËøáÁ¨¨‰∫å‰∏™ÂÆûÈ™åÊâÄÂ≠¶ÁöÑ jQuery ÈÄâÊã©Âô®Êù•ÂÆåÊàê„ÄÇ</p><h2 id="Ôºà1ÔºâÊü•ÊâæÂÖÉÁ¥†ËäÇÁÇπ"><a class="header-anchor" href="#Ôºà1ÔºâÊü•ÊâæÂÖÉÁ¥†ËäÇÁÇπ">¬∂</a>Ôºà1ÔºâÊü•ÊâæÂÖÉÁ¥†ËäÇÁÇπ</h2><figure class="highlight js"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> $li = $(<span class="hljs-string">&#x27;ol li:eq(0)&#x27;</span>); <span class="hljs-comment">//Ëé∑Âèñ&lt;ol&gt;ÈáåÁ¨¨‰∏Ä‰∏™&lt;li&gt;ËäÇÁÇπ</span><br><span class="hljs-keyword">var</span> li_txt = $li.text(); <span class="hljs-comment">//Ëé∑ÂèñÁ¨¨‰∏Ä‰∏™&lt;li&gt;ÂÖÉÁ¥†ËäÇÁÇπÁöÑÊñáÊú¨ÂÜÖÂÆπ</span><br>alert(li_txt); <span class="hljs-comment">//ÊâìÂç∞ÊñáÊú¨ÂÜÖÂÆπ</span><br></code></pre></td></tr></table></figure><h2 id="Ôºà2ÔºâÊü•ÊâæÂ±ûÊÄßËäÇÁÇπ"><a class="header-anchor" href="#Ôºà2ÔºâÊü•ÊâæÂ±ûÊÄßËäÇÁÇπ">¬∂</a>Ôºà2ÔºâÊü•ÊâæÂ±ûÊÄßËäÇÁÇπ</h2><p>Âà©Áî® jQuery ÈÄâÊã©Âô®Êü•ÊâæÂà∞ÈúÄË¶ÅÁöÑÂÖÉÁ¥†‰πãÂêéÔºåÂ∞±ÂèØ‰ª•‰ΩøÁî® <code>attr()</code> ÊñπÊ≥ïÊù•Ëé∑ÂèñÂÆÉÁöÑÂêÑÁßçÂ±ûÊÄßÁöÑÂÄº„ÄÇattr() ÊñπÊ≥ïÁöÑÂèÇÊï∞ÂèØ‰ª•ÊòØ‰∏Ä‰∏™Ôºå‰πüÂèØ‰ª•ÊòØ‰∏§‰∏™„ÄÇÂΩìÂèÇÊï∞ÊòØ‰∏Ä‰∏™Êó∂ÔºåÂàôÊòØË¶ÅÊü•ËØ¢ÁöÑÂ±ûÊÄßÁöÑÂêçÂ≠óÔºåÊØîÂ¶ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> $para = $(<span class="hljs-string">&#x27;p&#x27;</span>); <span class="hljs-comment">//Ëé∑Âèñ&lt;p&gt;ËäÇÁÇπ</span><br><span class="hljs-keyword">var</span> p_txt = $para.attr(<span class="hljs-string">&#x27;title&#x27;</span>); <span class="hljs-comment">//Ëé∑Âèñ&lt;p&gt;ÂÖÉÁ¥†ËäÇÁÇπÂ±ûÊÄßtitle</span><br>alert(p_txt); <span class="hljs-comment">//ÊâìÂç∞titleÂ±ûÊÄßÂÄº</span><br></code></pre></td></tr></table></figure><blockquote><h2 id="Ôºà1ÔºâÂàõÂª∫ÂÖÉÁ¥†ËäÇÁÇπ"><a class="header-anchor" href="#Ôºà1ÔºâÂàõÂª∫ÂÖÉÁ¥†ËäÇÁÇπ">¬∂</a>Ôºà1ÔºâÂàõÂª∫ÂÖÉÁ¥†ËäÇÁÇπ</h2><p>ÂàõÂª∫ÂÖÉÁ¥†ËäÇÁÇπÂèØ‰ª•Áî® <code>$(html)</code> ÂáΩÊï∞„ÄÇ$(html) ÊñπÊ≥ï‰ºöÊ†πÊçÆ‰º†ÂÖ•ÁöÑ HTML Ê†áËÆ∞Â≠óÁ¨¶‰∏≤ÔºåÂàõÂª∫‰∏Ä‰∏™ DOM ÂØπË±°ÔºåÂπ∂Â∞ÜËøô‰∏™ DOM ÂØπË±°ÂåÖË£ÖÊàê‰∏Ä‰∏™ jQuery ÂØπË±°ÂêéËøîÂõû„ÄÇÈ¶ñÂÖàÂàõÂª∫‰∏Ä‰∏™ li ÂÖÉÁ¥†Â¶Ç‰∏ãÊâÄÁ§∫Ôºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> $li = $(<span class="hljs-string">&#x27;&lt;li&gt;&lt;/li&gt;&#x27;</span>); <span class="hljs-comment">//ÂàõÂª∫‰∏Ä‰∏™&lt;li&gt;ÂÖÉÁ¥†</span><br></code></pre></td></tr></table></figure><p>ÂΩìÁÑ∂‰∏äÈù¢Âè™ÊòØÂàõÂª∫Âá∫Êù•‰∫ÜÔºåË¶Å‰ΩøÁî®ÁöÑËØùÔºåËøòÈúÄË¶Å‰ΩøÁî® <code>append()</code> Á≠âÊñπÊ≥ïÂ∞ÜËØ•ÂÖÉÁ¥†ÊèíÂÖ•ÊñáÊ°£‰∏≠Ôºà‰∏ãÈù¢‰ºöËÆ≤ÊèíÂÖ•ËäÇÁÇπÔºâ„ÄÇ</p><h2 id="Ôºà2ÔºâÂàõÂª∫ÊñáÊú¨ËäÇÁÇπ"><a class="header-anchor" href="#Ôºà2ÔºâÂàõÂª∫ÊñáÊú¨ËäÇÁÇπ">¬∂</a>Ôºà2ÔºâÂàõÂª∫ÊñáÊú¨ËäÇÁÇπ</h2><p>ÂàõÂª∫ÊñáÊú¨ËäÇÁÇπÂ∞±ÊòØÂú®ÂàõÂª∫ÂÖÉÁ¥†ËäÇÁÇπÊó∂Áõ¥Êé•ÊääÊñáÊú¨ÂÜÖÂÆπÂÜôÂá∫Êù•ÔºåÁÑ∂Âêé‰ΩøÁî® <code>append()</code> Á≠âÊñπÊ≥ïÂ∞ÜÂÆÉ‰ª¨Ê∑ªÂä†Âà∞ÊñáÊ°£‰∏≠Â∞±ÂèØ‰ª•‰∫ÜÔºå‰æãÂ¶ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> $li = $(<span class="hljs-string">&#x27;&lt;li&gt;syl&lt;/li&gt;&#x27;</span>); <span class="hljs-comment">//ÂàõÂª∫‰∏Ä‰∏™&lt;li&gt;ÂÖÉÁ¥†,ÂåÖÊã¨ÂÖÉÁ¥†ËäÇÁÇπÂíåÊñáÊú¨ËäÇÁÇπÔºå‚Äúsyl‚ÄùÂ∞±ÊòØÂàõÂª∫ÁöÑÊñáÊú¨ËäÇÁÇπ</span><br></code></pre></td></tr></table></figure><h2 id="Ôºà3ÔºâÂàõÂª∫Â±ûÊÄßËäÇÁÇπ"><a class="header-anchor" href="#Ôºà3ÔºâÂàõÂª∫Â±ûÊÄßËäÇÁÇπ">¬∂</a>Ôºà3ÔºâÂàõÂª∫Â±ûÊÄßËäÇÁÇπ</h2><p>ÂàõÂª∫Â±ûÊÄßËäÇÁÇπÂíåÂàõÂª∫ÊñáÊú¨ËäÇÁÇπÁ±ª‰ººÔºå‰πüÊòØÁõ¥Êé•Âú®ÂàõÂª∫ÂÖÉÁ¥†ËäÇÁÇπÊó∂‰∏ÄËµ∑ÂàõÂª∫ÔºåÊØîÂ¶ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> $li = $(<span class="hljs-string">&quot;&lt;li title=&#x27;syl&#x27;&gt;syl&lt;/li&gt;&quot;</span>); <span class="hljs-comment">//ÂàõÂª∫‰∏Ä‰∏™&lt;li&gt;ÂÖÉÁ¥†,ÂåÖÊã¨ÂÖÉÁ¥†ËäÇÁÇπÂíåÊñáÊú¨ËäÇÁÇπÂíåÂ±ûÊÄßËäÇÁÇπÔºå‚Äúsyl‚ÄùÂ∞±ÊòØÂàõÂª∫ÁöÑÊñáÊú¨ËäÇÁÇπ,title=&#x27;syl&#x27; Â∞±ÊòØÂàõÂª∫ÁöÑÂ±ûÊÄßËäÇÁÇπ</span><br></code></pre></td></tr></table></figure><p>Á§∫‰æãÔºöÂ∞ÜÊñ∞Âª∫ÁöÑ li ÂÖÉÁ¥†ÊèíÂÖ•Âà∞ ul ‰∏≠</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>blue<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>white<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>red<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">var</span> li_obj = $(<span class="hljs-string">&#x27;&lt;li&gt;ÈªÑËâ≤&lt;/li&gt;&#x27;</span>);</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;ul&#x27;</span>).append(li_obj);</span><br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure></blockquote><h2 id="1-DOM-ÊèíÂÖ•Áé∞ÊúâÂÖÉÁ¥†ÂÜÖ"><a class="header-anchor" href="#1-DOM-ÊèíÂÖ•Áé∞ÊúâÂÖÉÁ¥†ÂÜÖ">¬∂</a>(1) DOM ÊèíÂÖ•Áé∞ÊúâÂÖÉÁ¥†ÂÜÖ:</h2><ul><li><code>.append()</code> Âú®ÊØè‰∏™ÂåπÈÖçÂÖÉÁ¥†ÈáåÈù¢ÁöÑÊú´Â∞æÂ§ÑÊèíÂÖ•ÂèÇÊï∞ÂÜÖÂÆπ„ÄÇ</li><li><code>.appendTo()</code> Â∞ÜÂåπÈÖçÁöÑÂÖÉÁ¥†ÊèíÂÖ•Âà∞ÁõÆÊ†áÂÖÉÁ¥†ÁöÑÊúÄÂêéÈù¢„ÄÇ</li><li><code>.html()</code> Ëé∑ÂèñÈõÜÂêà‰∏≠Á¨¨‰∏Ä‰∏™ÂåπÈÖçÂÖÉÁ¥†ÁöÑ HTML ÂÜÖÂÆπ ËÆæÁΩÆÊØè‰∏Ä‰∏™ÂåπÈÖçÂÖÉÁ¥†ÁöÑ html ÂÜÖÂÆπ„ÄÇ</li><li><code>.prepend()</code> Â∞ÜÂèÇÊï∞ÂÜÖÂÆπÊèíÂÖ•Âà∞ÊØè‰∏™ÂåπÈÖçÂÖÉÁ¥†ÁöÑÂâçÈù¢ÔºàÂÖÉÁ¥†ÂÜÖÈÉ®Ôºâ„ÄÇ</li><li><code>.prependTo()</code> Â∞ÜÊâÄÊúâÂÖÉÁ¥†ÊèíÂÖ•Âà∞ÁõÆÊ†áÂâçÈù¢ÔºàÂÖÉÁ¥†ÂÜÖÔºâ„ÄÇ</li><li><code>.text()</code> ÂæóÂà∞ÂåπÈÖçÂÖÉÁ¥†ÈõÜÂêà‰∏≠ÊØè‰∏™ÂÖÉÁ¥†ÁöÑÂêàÂπ∂ÊñáÊú¨ÔºåÂåÖÊã¨‰ªñ‰ª¨ÁöÑÂêé‰ª£ËÆæÁΩÆÂåπÈÖçÂÖÉÁ¥†ÈõÜÂêà‰∏≠ÊØè‰∏™ÂÖÉÁ¥†ÁöÑÊñáÊú¨ÂÜÖÂÆπ‰∏∫ÊåáÂÆöÁöÑÊñáÊú¨ÂÜÖÂÆπ„ÄÇ</li></ul><h2 id="2-DOM-ÊèíÂÖ•Áé∞ÊúâÂÖÉÁ¥†Â§ñ"><a class="header-anchor" href="#2-DOM-ÊèíÂÖ•Áé∞ÊúâÂÖÉÁ¥†Â§ñ">¬∂</a>(2) DOM ÊèíÂÖ•Áé∞ÊúâÂÖÉÁ¥†Â§ñ:</h2><ul><li><code>.after()</code> Âú®ÂåπÈÖçÂÖÉÁ¥†ÈõÜÂêà‰∏≠ÁöÑÊØè‰∏™ÂÖÉÁ¥†ÂêéÈù¢ÊèíÂÖ•ÂèÇÊï∞ÊâÄÊåáÂÆöÁöÑÂÜÖÂÆπÔºå‰Ωú‰∏∫ÂÖ∂ÂÖÑÂºüËäÇÁÇπ„ÄÇ</li><li><code>.before()</code> Ê†πÊçÆÂèÇÊï∞ËÆæÂÆöÔºåÂú®ÂåπÈÖçÂÖÉÁ¥†ÁöÑÂâçÈù¢ÊèíÂÖ•ÂÜÖÂÆπ„ÄÇ</li><li><code>.insertAfter()</code> Âú®ÁõÆÊ†áÂÖÉÁ¥†ÂêéÈù¢ÊèíÂÖ•ÈõÜÂêà‰∏≠ÊØè‰∏™ÂåπÈÖçÁöÑÂÖÉÁ¥†(Ê≥®ÔºöÊèíÂÖ•ÁöÑÂÖÉÁ¥†‰Ωú‰∏∫ÁõÆÊ†áÂÖÉÁ¥†ÁöÑÂÖÑÂºüÂÖÉÁ¥†)„ÄÇ</li><li><code>.insertBefore()</code> Âú®ÁõÆÊ†áÂÖÉÁ¥†ÂâçÈù¢ÊèíÂÖ•ÈõÜÂêà‰∏≠ÊØè‰∏™ÂåπÈÖçÁöÑÂÖÉÁ¥†(Ê≥®ÔºöÊèíÂÖ•ÁöÑÂÖÉÁ¥†‰Ωú‰∏∫ÁõÆÊ†áÂÖÉÁ¥†ÁöÑÂÖÑÂºüÂÖÉÁ¥†)„ÄÇ</li></ul><p>Ê≥®ÔºöËøô‰∫õÊèíÂÖ•ËäÇÁÇπÁöÑÊñπÊ≥ï‰∏ç‰ªÖËÉΩÂ∞ÜÊñ∞ÂàõÂª∫ÁöÑ DOM ÂÖÉÁ¥†ÊèíÂÖ•Âà∞ÊñáÊ°£‰∏≠Ôºå‰πüËÉΩÂØπÂéüÊúâÁöÑ DOM ÂÖÉÁ¥†ËøõË°åÁßªÂä®„ÄÇ</p><p>ÊèíÂÖ•ËäÇÁÇπÁ§∫‰æãÔºöÂ∞ÜÊñ∞Âª∫ÁöÑ li ÂÖÉÁ¥†ÊèíÂÖ•Âà∞ ul ‰∏≠</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>blue<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>white<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>red<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;&lt;li&gt;yellow&lt;/li&gt;&#x27;</span>).appendTo(<span class="hljs-string">&#x27;ul&#x27;</span>);</span><br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="ÁßªÂä®ËäÇÁÇπ"><a class="header-anchor" href="#ÁßªÂä®ËäÇÁÇπ">¬∂</a>ÁßªÂä®ËäÇÁÇπ</h2><p>Á§∫‰æãÔºö</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>blue<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>white<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>red<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>I like<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">var</span> $li = $(<span class="hljs-string">&#x27;ul li:eq(1)&#x27;</span>); <span class="hljs-comment">//Ëé∑Âèñ&lt;ul&gt;ËäÇÁÇπ‰∏≠ÁöÑÁ¨¨2‰∏™&lt;li&gt;ÂÖÉÁ¥†ËäÇÁÇπ</span></span><br><span class="javascript">        <span class="hljs-keyword">var</span> $h1 = $(<span class="hljs-string">&#x27;h1&#x27;</span>); <span class="hljs-comment">//Ëé∑Âèñ&lt;h1&gt;ËäÇÁÇπ</span></span><br><span class="javascript">        $h1.insertBefore($li); <span class="hljs-comment">//ÁßªÂä®ËäÇÁÇπ</span></span><br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><img src="https://doc.shiyanlou.com/document-uid897174labid9222timestamp1554967438062.png" alt="Ê≠§Â§ÑËæìÂÖ•ÂõæÁâáÁöÑÊèèËø∞" style="zoom: 67%;" /><h2 id="Âà†Èô§ËäÇÁÇπ"><a class="header-anchor" href="#Âà†Èô§ËäÇÁÇπ">¬∂</a>Âà†Èô§ËäÇÁÇπ</h2><h3 id="detach-ÊñπÊ≥ï"><a class="header-anchor" href="#detach-ÊñπÊ≥ï">¬∂</a><code>detach()</code> ÊñπÊ≥ï</h3><p>‰ªé DOM ‰∏≠ÂéªÊéâÊâÄÊúâÂåπÈÖçÁöÑÂÖÉÁ¥†„ÄÇ<code>.detach()</code> ÊñπÊ≥ïÂíå <code>.remove()</code> ‰∏ÄÊ†∑, Èô§‰∫Ü <code>.detach()</code> ‰øùÂ≠òÊâÄÊúâ jQuery Êï∞ÊçÆËÄå‰∏îÂíåË¢´ÁßªËµ∞ÁöÑÂÖÉÁ¥†Áõ∏ÂÖ≥ËÅî„ÄÇÂΩìÈúÄË¶ÅÁßªËµ∞‰∏Ä‰∏™ÂÖÉÁ¥†Ôºå‰∏ç‰πÖÂèàÂ∞ÜËØ•ÂÖÉÁ¥†ÊèíÂÖ• DOM Êó∂ÔºåËøôÁßçÊñπÊ≥ïÂæàÊúâÁî®„ÄÇ</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>blue<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;syl&quot;</span>&gt;</span>white<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>red<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;ul li&#x27;</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">          alert($(<span class="hljs-built_in">this</span>).html());</span><br>        &#125;);<br><span class="javascript">        <span class="hljs-keyword">var</span> $li = $(<span class="hljs-string">&#x27;ul li:eq(1)&#x27;</span>).detach(); <span class="hljs-comment">//Âà†Èô§ÂÖÉÁ¥†</span></span><br><span class="javascript">        $li.appendTo(<span class="hljs-string">&#x27;ul&#x27;</span>); <span class="hljs-comment">//ÈáçÊñ∞ËøΩÂä†Ê≠§ÂÖÉÁ¥†,ÂèëÁé∞ÂÆÉ‰πãÂâçÁªëÂÆöÁöÑ‰∫ã‰ª∂ËøòÂú®,Â¶ÇÊûú‰ΩøÁî®remove()ÊñπÊ≥ïÂà†Èô§ÂÖÉÁ¥†ÁöÑËØù,ÈÇ£‰πàÂÆÉ‰πãÂâçÁªëÂÆöÁöÑ‰∫ã‰ª∂Â∞ÜÂ§±Êïà</span></span><br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="empty-ÊñπÊ≥ï"><a class="header-anchor" href="#empty-ÊñπÊ≥ï">¬∂</a>empty() ÊñπÊ≥ï</h3><p>‰ªé DOM ‰∏≠ÁßªÈô§ÈõÜÂêà‰∏≠ÂåπÈÖçÂÖÉÁ¥†ÁöÑÊâÄÊúâÂ≠êËäÇÁÇπ„ÄÇËøô‰∏™ÊñπÊ≥ï‰∏çÊé•Âèó‰ªª‰ΩïÂèÇÊï∞„ÄÇËøô‰∏™ÊñπÊ≥ï‰∏ç‰ªÖÁßªÈô§Â≠êÂÖÉÁ¥†ÔºàÂíåÂÖ∂‰ªñÂêé‰ª£ÂÖÉÁ¥†ÔºâÔºåÂêåÊ†∑ÁßªÈô§ÂÖÉÁ¥†ÈáåÁöÑÊñáÊú¨„ÄÇÂõ†‰∏∫ÔºåÊ†πÊçÆËØ¥ÊòéÔºåÂÖÉÁ¥†Èáå‰ªª‰ΩïÊñáÊú¨Â≠óÁ¨¶‰∏≤ÈÉΩË¢´ÁúãÂÅöÊòØËØ•ÂÖÉÁ¥†ÁöÑÂ≠êËäÇÁÇπ„ÄÇ</p><h2 id="remove-ÊñπÊ≥ï"><a class="header-anchor" href="#remove-ÊñπÊ≥ï">¬∂</a>remove() ÊñπÊ≥ï</h2><p>ËØ∑ÁúãDoc</p><p><a href="https://www.jquery123.com/category/manipulation/dom-removal/">jQuery ‰∏≠ÊñáÂÆòÁΩë DOM ÁßªÈô§</a></p><h2 id="Â§çÂà∂ËäÇÁÇπ"><a class="header-anchor" href="#Â§çÂà∂ËäÇÁÇπ">¬∂</a>Â§çÂà∂ËäÇÁÇπ</h2><h3 id="Clone"><a class="header-anchor" href="#Clone">¬∂</a>Clone()</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>blue<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;syl&quot;</span>&gt;</span>white<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>red<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;ul li&#x27;</span>).on(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">          $(<span class="hljs-built_in">this</span>).clone().appendTo(<span class="hljs-string">&#x27;ul&#x27;</span>);</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="ÊõøÊç¢ËäÇÁÇπ"><a class="header-anchor" href="#ÊõøÊç¢ËäÇÁÇπ">¬∂</a>ÊõøÊç¢ËäÇÁÇπ</h2><ul><li><code>.replaceAll()</code> Áî®ÈõÜÂêàÁöÑÂåπÈÖçÂÖÉÁ¥†ÊõøÊç¢ÊØè‰∏™ÁõÆÊ†áÂÖÉÁ¥†„ÄÇ</li><li><code>.replaceWith()</code> Áî®Êèê‰æõÁöÑÂÜÖÂÆπÊõøÊç¢ÈõÜÂêà‰∏≠ÊâÄÊúâÂåπÈÖçÁöÑÂÖÉÁ¥†Âπ∂‰∏îËøîÂõûË¢´Âà†Èô§ÂÖÉÁ¥†ÁöÑÈõÜÂêà„ÄÇ</li></ul><p>Ê≥®Ôºö<code>.replaceAll()</code> Âíå <code>.replaceWith()</code> ÂäüËÉΩ‰∏ÄÊ†∑Ôºå‰ΩÜÊòØÁõÆÊ†áÂíåÊ∫êÁõ∏Âèç„ÄÇ</p><p>Á§∫‰æãÔºöÊõøÊç¢ p ÂÖÉÁ¥†</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;p&#x27;</span>).replaceWith(<span class="hljs-string">&#x27;&lt;p&gt;SHIYANLOU&lt;/p&gt;&#x27;</span>);</span><br><span class="javascript">        <span class="hljs-comment">//Ê≥®Èáä‰ª£Á†Å‰∏é‰∏äÈù¢ÁöÑ‰ª£Á†Å‰ΩúÁî®‰∏ÄÊ†∑</span></span><br><span class="handlebars"><span class="xml">        // $(&quot;<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>SHIYANLOU<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>&quot;).replaceAll(&quot;p&quot;);</span></span><br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Wrap-ÂåÖË£πËäÇÁÇπ"><a class="header-anchor" href="#Wrap-ÂåÖË£πËäÇÁÇπ">¬∂</a>Wrap() ÂåÖË£πËäÇÁÇπ</h2><blockquote><p>ÊØè‰∏™ÂåπÈÖçÁöÑÂÖÉÁ¥†Â§ñÂ±ÇÂåÖ‰∏ä‰∏Ä‰∏™ html ÂÖÉÁ¥†„ÄÇ<code>.wrap()</code> ÂáΩÊï∞ÂèØ‰ª•Êé•Âèó‰ªª‰ΩïÂ≠óÁ¨¶‰∏≤ÊàñÂØπË±°ÔºåÂèØ‰ª•‰º†ÈÄíÁªô $() Â∑•ÂéÇÂáΩÊï∞Êù•ÊåáÂÆö‰∏Ä‰∏™ DOM ÁªìÊûÑ„ÄÇËøôÁßçÁªìÊûÑÂèØ‰ª•ÂµåÂ•ó‰∫ÜÂ•ΩÂá†Â±ÇÊ∑±Ôºå‰ΩÜÂ∫îËØ•Âè™ÂåÖÂê´‰∏Ä‰∏™Ê†∏ÂøÉÁöÑÂÖÉÁ¥†„ÄÇÊØè‰∏™ÂåπÈÖçÁöÑÂÖÉÁ¥†ÈÉΩ‰ºöË¢´ËøôÁßçÁªìÊûÑÂåÖË£π„ÄÇËØ•ÊñπÊ≥ïËøîÂõûÂéüÂßãÁöÑÂÖÉÁ¥†ÈõÜÔºå‰ª•‰æø‰πãÂêé‰ΩøÁî®ÈìæÂºèÊñπÊ≥ï</p></blockquote><p>‰æãÂ≠êÔºö</p><p>Áî®‰∏Ä‰∏™ÊúâËæπÊ°ÜÁöÑ DIV Â∞Ü P ÂÖÉÁ¥†ÂåÖË£πËµ∑Êù•</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;p&#x27;</span>).wrap(<span class="hljs-string">&quot;&lt;div style=&#x27;border:1px red solid;&#x27;&gt;&lt;/div&gt;&quot;</span>);</span><br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>ËøêË°åÊïàÊûú‰∏∫Ôºö</p><p><img src="https://doc.shiyanlou.com/document-uid897174labid9222timestamp1554973461328.png" alt="Ê≠§Â§ÑËæìÂÖ•ÂõæÁâáÁöÑÊèèËø∞"></p><p>Ôºà2Ôºâ<code>wrapAll()</code> ÊñπÊ≥ï</p><p>Âú®ÊâÄÊúâÂåπÈÖçÂÖÉÁ¥†Â§ñÈù¢ÂåÖ‰∏ÄÂ±Ç HTML ÁªìÊûÑ„ÄÇ<code>.wrapAll()</code> ÂáΩÊï∞ÂèØ‰ª•Êé•Âèó‰ªª‰ΩïÂ≠óÁ¨¶‰∏≤ÊàñÂØπË±°ÔºåÂèØ‰ª•‰º†ÈÄíÁªô <code>\$()</code> Â∑•ÂéÇÂáΩÊï∞Êù•ÊåáÂÆö‰∏Ä‰∏™ DOM ÁªìÊûÑ„ÄÇËøôÁßçÁªìÊûÑÂèØ‰ª•ÂµåÂ•óÂ§öÂ±ÇÔºå‰ΩÜÊòØÊúÄÂÜÖÂ±ÇÂè™ËÉΩÊúâ‰∏Ä‰∏™ÂÖÉÁ¥†„ÄÇÊâÄÊúâÂåπÈÖçÂÖÉÁ¥†Â∞Ü‰ºöË¢´ÂΩì‰ΩúÊòØ‰∏Ä‰∏™Êï¥‰ΩìÔºåÂú®Ëøô‰∏™Êï¥‰ΩìÁöÑÂ§ñÈÉ®Áî®ÊåáÂÆöÁöÑ HTML ÁªìÊûÑËøõË°åÂåÖË£π„ÄÇ</p><p>Ê≥®ÔºöËØ•ÂÖÉÁ¥†‰ºöÂ∞ÜÊâÄÊúâÂåπÈÖçÁöÑÂÖÉÁ¥†Áî®‰∏Ä‰∏™ÂÖÉÁ¥†Êù•ÂåÖË£πÔºåÂÆÉ‰∏çÂêå‰∫é <code>wrap()</code> ÊñπÊ≥ïÔºå<code>wrap()</code> ÊñπÊ≥ïÊòØÂ∞ÜÊâÄÊúâÁöÑÂÖÉÁ¥†ËøõË°åÂçïÁã¨ÁöÑÂåÖË£π„ÄÇ</p><p>‰æãÂ≠êÔºö</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;p&#x27;</span>).wrapAll(<span class="hljs-string">&quot;&lt;div style=&#x27;border:1px red solid;&#x27;&gt;&lt;/div&gt;&quot;</span>);</span><br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>ËøêË°åÊïàÊûú‰∏∫Ôºö</p><p><img src="https://doc.shiyanlou.com/document-uid897174labid9222timestamp1554973617931.png" alt="Ê≠§Â§ÑËæìÂÖ•ÂõæÁâáÁöÑÊèèËø∞"></p><p>Ôºà3Ôºâ<code>wrapInner()</code> ÊñπÊ≥ï</p><p>Âú®ÂåπÈÖçÂÖÉÁ¥†ÈáåÁöÑÂÜÖÂÆπÂ§ñÂåÖ‰∏ÄÂ±ÇÁªìÊûÑ„ÄÇ<code>.wrapInner()</code> ÂáΩÊï∞ÂèØ‰ª•Êé•Âèó‰ªª‰ΩïÂ≠óÁ¨¶‰∏≤ÊàñÂØπË±°ÔºåÂèØ‰ª•‰º†ÈÄíÁªô <code>$()</code> Â∑•ÂéÇÂáΩÊï∞Êù•ÊåáÂÆö‰∏Ä‰∏™ DOM ÁªìÊûÑ„ÄÇËøôÁßçÁªìÊûÑÂèØ‰ª•ÂµåÂ•óÂ§öÂ±ÇÔºå‰ΩÜÊòØÊúÄÂÜÖÂ±ÇÂè™ËÉΩÊúâ‰∏Ä‰∏™ÂÖÉÁ¥†„ÄÇÊØè‰∏™ÂåπÈÖçÂÖÉÁ¥†ÁöÑÂÜÖÂÆπÈÉΩ‰ºöË¢´ËøôÁßçÁªìÊûÑÂåÖË£π„ÄÇ<code>wrapInner()</code> ÊñπÊ≥ïÂ∞ÜÊØè‰∏Ä‰∏™ÂåπÈÖçÁöÑÂÖÉÁ¥†ÁöÑÂ≠êÂÜÖÂÆπÔºàÂåÖÊã¨ÊñáÊú¨ËäÇÁÇπÔºâÁî®ÂÖ∂‰ªñÁªìÊûÑÂåñÁöÑÊ†áËÆ∞ÂåÖË£πËµ∑Êù•„ÄÇ</p><p>‰æãÂ≠êÔºö</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;p&#x27;</span>).wrapInner(<span class="hljs-string">&quot;&lt;div style=&#x27;border:1px red solid;&#x27;&gt;&lt;/div&gt;&quot;</span>);</span><br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>ËøêË°åÊïàÊûú‰∏∫Ôºö</p><p><img src="https://doc.shiyanlou.com/document-uid897174labid9222timestamp1554973962583.png" alt="Ê≠§Â§ÑËæìÂÖ•ÂõæÁâáÁöÑÊèèËø∞"></p><p>ËØ¶ÊÉÖÁúã ÂÆòÁΩëÂìà</p><h2 id="Â±ûÊÄßÊìç‰Ωú"><a class="header-anchor" href="#Â±ûÊÄßÊìç‰Ωú">¬∂</a>Â±ûÊÄßÊìç‰Ωú</h2><p>Á§∫‰æãÔºöËé∑Âèñ P ÂÖÉÁ¥†ÁöÑ class Â±ûÊÄßÂÄºÔºåÂπ∂ËøΩÂä†Âà∞ div ‰∏≠</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;shiyanlou-class&quot;</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">var</span> p_class = $(<span class="hljs-string">&#x27;p&#x27;</span>).attr(<span class="hljs-string">&#x27;class&#x27;</span>);</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;div&#x27;</span>).append(p_class);</span><br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://doc.shiyanlou.com/document-uid897174labid9222timestamp1554974979373.png" alt="Ê≠§Â§ÑËæìÂÖ•ÂõæÁâáÁöÑÊèèËø∞"></p><h3 id="Ôºà2ÔºâËÆæÁΩÆÂÖÉÁ¥†Â±ûÊÄß"><a class="header-anchor" href="#Ôºà2ÔºâËÆæÁΩÆÂÖÉÁ¥†Â±ûÊÄß">¬∂</a>Ôºà2ÔºâËÆæÁΩÆÂÖÉÁ¥†Â±ûÊÄß</h3><p>Â¶ÇÊûúÈúÄË¶ÅËÆæÁΩÆÂÖÉÁ¥†ÁöÑÂ±ûÊÄßÂÄºÔºå‰πüÂèØ‰ª•‰ΩøÁî® <code>attr()</code> ÊñπÊ≥ïÔºå‰∏çÂêåÁöÑÊòØÔºåÈúÄË¶Å‰º†ÈÄí‰∏§‰∏™ÂèÇÊï∞Âç≥Â±ûÊÄßÂêçÁß∞ÂíåÂØπÂ∫îÁöÑÂÄº„ÄÇ</p><p>Á§∫‰æãÔºöËÆæÁΩÆ div ÁöÑ class ÂÄº</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><br>      .demo &#123;<br><span class="css">        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br>      &#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;div&#x27;</span>).attr(<span class="hljs-string">&#x27;class&#x27;</span>, <span class="hljs-string">&#x27;demo&#x27;</span>);</span><br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="Ôºà3ÔºâÂà†Èô§ÂÖÉÁ¥†Â±ûÊÄß"><a class="header-anchor" href="#Ôºà3ÔºâÂà†Èô§ÂÖÉÁ¥†Â±ûÊÄß">¬∂</a>Ôºà3ÔºâÂà†Èô§ÂÖÉÁ¥†Â±ûÊÄß</h3><p>Áî® <code>removeAttr()</code> ÊñπÊ≥ïÊù•ÂÆûÁé∞Âà†Èô§ÂÖÉÁ¥†Â±ûÊÄß„ÄÇ<code>.removeAttr()</code> ÊñπÊ≥ï‰ΩøÁî®ÂéüÁîüÁöÑ JavaScript removeAttribute() ÂáΩÊï∞,‰ΩÜÊòØÂÆÉÁöÑ‰ºòÁÇπÊòØÂèØ‰ª•Áõ¥Êé•Âú®‰∏Ä‰∏™ jQuery ÂØπË±°‰∏äË∞ÉÁî®ËØ•ÊñπÊ≥ïÔºåÂπ∂‰∏îÂÆÉËß£ÂÜ≥‰∫ÜË∑®ÊµèËßàÂô®ÁöÑÂ±ûÊÄßÂêç‰∏çÂêåÁöÑÈóÆÈ¢ò„ÄÇ</p><p>Á§∫‰æãÔºöÂà†Èô§ div ÁöÑ class</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><br>      .demo &#123;<br><span class="css">        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br>      &#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;div&#x27;</span>).removeAttr(<span class="hljs-string">&#x27;class&#x27;</span>);</span><br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="Ê†∑ÂºèÊìç‰Ωú-Class"><a class="header-anchor" href="#Ê†∑ÂºèÊìç‰Ωú-Class">¬∂</a>Ê†∑ÂºèÊìç‰Ωú Class</h2><h3 id="attr"><a class="header-anchor" href="#attr">¬∂</a>attr()</h3><p>HTML ‰ª£Á†ÅÔºö</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;syl&quot;</span>&gt;</span>ÂÆûÈ™åÊ•º<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>ÂÖ∂‰∏≠ class ‰πüÊòØ p Ê†áÁ≠æÁöÑÂ±ûÊÄßÔºåÂõ†Ê≠§Ëé∑Âèñ class Âíå ËÆæÁΩÆ class ÈÉΩÂèØ‰ª•‰ΩøÁî®Êàë‰ª¨ÂâçÈù¢ÊâÄÂ≠¶ÁöÑ <code>attr()</code> ÊñπÊ≥ï„ÄÇÊØîÂ¶ÇÔºö</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><br>            .syl &#123;<br><span class="css">                <span class="hljs-attribute">background-color</span>: red;</span><br>            &#125;<br>            .SYL &#123;<br><span class="css">                <span class="hljs-attribute">background-color</span>: yellow;</span><br>            &#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;syl&quot;</span>&gt;</span>ÂÆûÈ™åÊ•º<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">            $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">                    <span class="hljs-keyword">var</span>  p_class = $(<span class="hljs-string">&quot;p&quot;</span>).attr(<span class="hljs-string">&quot;class&quot;</span>);<span class="hljs-comment">//Ëé∑Âèñ&lt;p&gt;ÂÖÉÁ¥†ÁöÑclass</span></span><br><span class="javascript">                    <span class="hljs-built_in">console</span>.log(p_class);<span class="hljs-comment">//ÊâìÂç∞ÂÄº‰∏∫syl</span></span><br><span class="javascript">                    $(<span class="hljs-string">&quot;p&quot;</span>).attr(<span class="hljs-string">&quot;class&quot;</span>,<span class="hljs-string">&quot;SYL&quot;</span>);<span class="hljs-comment">//ÊõøÊç¢classÊ†∑ÂºèÔºåÂ¶ÇÊûúÊÉ≥Ë¶ÅÊ∑ªÂä†ÂèØ‰ª•‰ΩøÁî®addClass()ÊñπÊ≥ï</span></span><br>            &#125;);<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="Ôºà2ÔºâËøΩÂä†Ê†∑Âºè"><a class="header-anchor" href="#Ôºà2ÔºâËøΩÂä†Ê†∑Âºè">¬∂</a>Ôºà2ÔºâËøΩÂä†Ê†∑Âºè</h3><p><code>.addClass()</code> ÊñπÊ≥ï‰∏∫ÊØè‰∏™ÂåπÈÖçÁöÑÂÖÉÁ¥†Ê∑ªÂä†ÊåáÂÆöÁöÑÊ†∑ÂºèÁ±ªÂêçÔºåÂÄºÂæóÊ≥®ÊÑèÁöÑÊòØËøô‰∏™ÊñπÊ≥ï‰∏ç‰ºöÊõøÊç¢‰∏Ä‰∏™Ê†∑ÂºèÁ±ªÂêç„ÄÇÂÆÉÂè™ÊòØÁÆÄÂçïÁöÑÊ∑ªÂä†‰∏Ä‰∏™Ê†∑ÂºèÁ±ªÂêçÂà∞ÂÖÉÁ¥†‰∏ä„ÄÇ</p><p>Á§∫‰æãÔºö‰∏∫ div ËøΩÂä†‰∏Ä‰∏™Êñ∞Ê†∑Âºè another</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><br>      .demo &#123;<br><span class="css">        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br>      &#125;<br><br>      .another &#123;<br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">50%</span>;</span><br>      &#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;div&#x27;</span>).addClass(<span class="hljs-string">&#x27;another&#x27;</span>);</span><br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Ê≥®Ôºö‰∏ä‰æã‰∏≠ div ÂÖÉÁ¥†ÂêåÊó∂Êã•Êúâ‰∏§‰∏™ class ÂÄºÔºåÂç≥ ‚Äúdemo‚Äù Âíå ‚Äúanother‚Äù ÔºåÂú® css ‰∏≠Êúâ‰ª•‰∏ã‰∏§Êù°ËßÑÂÆöÔºö</p><ul><li>Â¶ÇÊûúÁªô‰∏Ä‰∏™ÂÖÉÁ¥†Ê∑ªÂä†‰∫ÜÂ§ö‰∏™ class ÂÄºÔºåÈÇ£‰πàÂ∞±Áõ∏ÂΩì‰∫éÂêàÂπ∂‰∫ÜÂÆÉ‰ª¨ÁöÑÊ†∑Âºè„ÄÇ</li><li>Â¶ÇÊûúÊúâ‰∏çÂêåÁöÑ class ËÆæÂÆö‰∫ÜÂêå‰∏ÄÊ†∑ÂºèÂ±ûÊÄßÔºåÂàôÂêéËÄÖË¶ÜÁõñÂâçËÄÖ„ÄÇ</li></ul><p>Ôºà3ÔºâÁßªÈô§Ê†∑Âºè</p><p><code>.removeClass()</code> ÊñπÊ≥ïÁßªÈô§ÈõÜÂêà‰∏≠ÊØè‰∏™ÂåπÈÖçÂÖÉÁ¥†‰∏ä‰∏Ä‰∏™ÔºåÂ§ö‰∏™ÊàñÂÖ®ÈÉ®Ê†∑Âºè„ÄÇÂ¶ÇÊûú‰∏Ä‰∏™Ê†∑ÂºèÁ±ªÂêç‰Ωú‰∏∫‰∏Ä‰∏™ÂèÇÊï∞,Âè™ÊúâËøôÊ†∑ÂºèÁ±ª‰ºöË¢´‰ªéÂåπÈÖçÁöÑÂÖÉÁ¥†ÈõÜÂêà‰∏≠Âà†Èô§ „ÄÇÂ¶ÇÊûúÊ≤°ÊúâÊ†∑ÂºèÂêç‰Ωú‰∏∫ÂèÇÊï∞ÔºåÈÇ£‰πàÊâÄÊúâÁöÑÊ†∑ÂºèÁ±ªÂ∞ÜË¢´ÁßªÈô§„ÄÇ</p><p>Á§∫‰æãÔºöÁßªÈô§ div ÁöÑ another Ê†∑Âºè</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><br>      .demo &#123;<br><span class="css">        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br>      &#125;<br><br>      .another &#123;<br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">50%</span>;</span><br>      &#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo another&quot;</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;div&#x27;</span>).removeClass(<span class="hljs-string">&#x27;another&#x27;</span>);</span><br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Ê≥®ÔºöÂ¶ÇÊûúË¶ÅÂà†Èô§Â§ö‰∏™ class ÂÄºÔºåÊàë‰ª¨ÂèØ‰ª•‰ª•Á©∫Ê†ºÁöÑÊñπÂºèÂà†Èô§Â§ö‰∏™ class ÂêçÔºåÊØîÂ¶ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">$(<span class="hljs-string">&#x27;div&#x27;</span>).removeClass(<span class="hljs-string">&#x27;another demo&#x27;</span>); <span class="hljs-comment">//Âà†Èô§ another Á±ªÂíå demo Á±ª</span><br></code></pre></td></tr></table></figure><p>Â¶ÇÊûú <code>removeClass()</code> ÊñπÊ≥ï‰∏çÂ∏¶ÂèÇÊï∞ÔºåÂ∞±‰ºöÂ∞Ü class ÁöÑÂÄºÂÖ®ÈÉ®Âà†Èô§ÔºåÊØîÂ¶ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">$(<span class="hljs-string">&#x27;div&#x27;</span>).removeClass(); <span class="hljs-comment">//Âà†Èô§&lt;div&gt;ÂÖÉÁ¥†ÁöÑÊâÄÊúâclass</span><br></code></pre></td></tr></table></figure><h4 id="Ôºà4ÔºâÂàáÊç¢Ê†∑Âºè"><a class="header-anchor" href="#Ôºà4ÔºâÂàáÊç¢Ê†∑Âºè">¬∂</a>Ôºà4ÔºâÂàáÊç¢Ê†∑Âºè</h4><p><code>.toggleClass()</code> Âú®ÂåπÈÖçÁöÑÂÖÉÁ¥†ÈõÜÂêà‰∏≠ÁöÑÊØè‰∏™ÂÖÉÁ¥†‰∏äÊ∑ªÂä†ÊàñÂà†Èô§‰∏Ä‰∏™ÊàñÂ§ö‰∏™Ê†∑ÂºèÁ±ª,ÂèñÂÜ≥‰∫éËøô‰∏™Ê†∑ÂºèÁ±ªÊòØÂê¶Â≠òÂú®ÊàñÂÄºÂàáÊç¢Â±ûÊÄß„ÄÇÂç≥ÔºöÂ¶ÇÊûúÂ≠òÂú®Ôºà‰∏çÂ≠òÂú®ÔºâÂ∞±Âà†Èô§ÔºàÊ∑ªÂä†Ôºâ‰∏Ä‰∏™Á±ª„ÄÇ</p><p>‰æãÂ≠êÔºö</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><br>      .main &#123;<br><span class="css">        <span class="hljs-attribute">color</span>: red;</span><br>      &#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>ÂÆûÈ™åÊ•º<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn1&quot;</span>&gt;</span>ÂàáÊç¢ÊÆµËêΩÁöÑ &quot;main&quot; Á±ª<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;button&#x27;</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">          $(<span class="hljs-string">&#x27;p&#x27;</span>).toggleClass(<span class="hljs-string">&#x27;main&#x27;</span>);</span><br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>ËøêË°åÊïàÊûú‰∏∫Ôºö</p><p><img src="https://doc.shiyanlou.com/document-uid897174labid9222timestamp1555039666845.png" alt="Ê≠§Â§ÑËæìÂÖ•ÂõæÁâáÁöÑÊèèËø∞"></p><h4 id="Ôºà5ÔºâÂà§Êñ≠ÊòØÂê¶Âê´ÊúâÊüê‰∏™Ê†∑Âºè"><a class="header-anchor" href="#Ôºà5ÔºâÂà§Êñ≠ÊòØÂê¶Âê´ÊúâÊüê‰∏™Ê†∑Âºè">¬∂</a>Ôºà5ÔºâÂà§Êñ≠ÊòØÂê¶Âê´ÊúâÊüê‰∏™Ê†∑Âºè</h4><p><code>.hasClass()</code> ÂèØ‰ª•Áî®Êù•Âà§Êñ≠ÂÖÉÁ¥†‰∏≠ÊòØÂê¶Âê´ÊúâÊüê‰∏™ classÔºåÂ¶ÇÊûúÊúâÂàôËøîÂõû trueÔºåÂê¶ÂàôËøîÂõû false„ÄÇÊØîÂ¶ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">$(<span class="hljs-string">&#x27;p&#x27;</span>).hasClass(<span class="hljs-string">&#x27;another&#x27;</span>);<br></code></pre></td></tr></table></figure><h2 id="Ëé∑Âèñ-HTMLÔºå-ÊñáÊú¨ÂíåÂÄº"><a class="header-anchor" href="#Ëé∑Âèñ-HTMLÔºå-ÊñáÊú¨ÂíåÂÄº">¬∂</a>Ëé∑Âèñ HTMLÔºå ÊñáÊú¨ÂíåÂÄº</h2><h3 id="Ôºà1Ôºâ-html-ÊñπÊ≥ï"><a class="header-anchor" href="#Ôºà1Ôºâ-html-ÊñπÊ≥ï">¬∂</a>Ôºà1Ôºâ<code>.html()</code> ÊñπÊ≥ï</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">     $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">       <span class="hljs-keyword">var</span> div_html = $(<span class="hljs-string">&#x27;div&#x27;</span>).html(); <span class="hljs-comment">//Ëé∑Âèñ&lt;div&gt;ÂÖÉÁ¥†ÁöÑHTML‰ª£Á†Å</span></span><br><span class="javascript">       alert(div_html); <span class="hljs-comment">//ÊâìÂç∞&lt;div&gt;ÂÖÉÁ¥†ÁöÑHTML‰ª£Á†Å</span></span><br>     &#125;);<br>   <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://doc.shiyanlou.com/document-uid897174labid9222timestamp1555061984913.png" alt="Ê≠§Â§ÑËæìÂÖ•ÂõæÁâáÁöÑÊèèËø∞"></p><p>ËÆæÁΩÆ div ‰∏≠ÁöÑ HTML ÂÜÖÂÆπ</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">     $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">       $(<span class="hljs-string">&#x27;div&#x27;</span>).html(<span class="hljs-string">&#x27;&lt;span&gt;shiyanlou&lt;/span&gt;&#x27;</span>);</span><br>     &#125;);<br>   <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="Ôºà2Ôºâ-text-ÊñπÊ≥ï"><a class="header-anchor" href="#Ôºà2Ôºâ-text-ÊñπÊ≥ï">¬∂</a>Ôºà2Ôºâ<code>.text()</code> ÊñπÊ≥ï</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>       <span class="hljs-keyword">var</span> p_text = $(<span class="hljs-string">&#x27;div&#x27;</span>).text();<br>       alert(p_text);<br>     &#125;);<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>        $(<span class="hljs-string">&#x27;div&#x27;</span>).text(<span class="hljs-string">&#x27;shiyanlou&#x27;</span>);<br>      &#125;); <span class="hljs-comment">//ËÆæÁΩÆ ÂÄº</span><br></code></pre></td></tr></table></figure><h3 id="3-val-ÊñπÊ≥ï"><a class="header-anchor" href="#3-val-ÊñπÊ≥ï">¬∂</a>(3) .val() ÊñπÊ≥ï</h3><p>‰æãÂ¶ÇÔºöËÆæÁΩÆÊñáÊú¨Ê°ÜÁöÑÂÄº</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;input&#x27;</span>).val(<span class="hljs-string">&#x27;shiyanlou&#x27;</span>);</span><br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://doc.shiyanlou.com/document-uid897174labid9222timestamp1555062428371.png" alt="Ê≠§Â§ÑËæìÂÖ•ÂõæÁâáÁöÑÊèèËø∞"></p><h2 id="ÈÅçÂéÜËäÇÁÇπ"><a class="header-anchor" href="#ÈÅçÂéÜËäÇÁÇπ">¬∂</a>ÈÅçÂéÜËäÇÁÇπ</h2><h3 id="Ôºà1Ôºâ-children-ÊñπÊ≥ï"><a class="header-anchor" href="#Ôºà1Ôºâ-children-ÊñπÊ≥ï">¬∂</a>Ôºà1Ôºâ<code>.children()</code> ÊñπÊ≥ï</h3><p>Ëé∑ÂæóÂåπÈÖçÂÖÉÁ¥†ÈõÜÂêà‰∏≠ÊØè‰∏™ÂÖÉÁ¥†ÁöÑÂ≠êÂÖÉÁ¥†ÔºåÈÄâÊã©Âô®ÈÄâÊã©ÊÄßÁ≠õÈÄâ„ÄÇ</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>blue<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>white<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>red<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-keyword">var</span> ul_chlildList = $(<span class="hljs-string">&#x27;ul&#x27;</span>).children();</span><br><span class="javascript">        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, len = ul_chlildList.length; i &lt; len; i++) &#123;</span><br>          alert(ul_chlildList[i].innerHTML);<br>        &#125;<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://doc.shiyanlou.com/document-uid897174labid9222timestamp1555062497856.png" alt="Ê≠§Â§ÑËæìÂÖ•ÂõæÁâáÁöÑÊèèËø∞"></p><h3 id="Ôºà2Ôºâ-next-ÊñπÊ≥ï"><a class="header-anchor" href="#Ôºà2Ôºâ-next-ÊñπÊ≥ï">¬∂</a>Ôºà2Ôºâ<code>.next()</code> ÊñπÊ≥ï</h3><p>‰∏çËØ¥‰∫Ü</p><h3 id="Ôºà3Ôºâ-prev"><a class="header-anchor" href="#Ôºà3Ôºâ-prev">¬∂</a>Ôºà3Ôºâ<code>.prev()</code></h3><h3 id="Ôºà4Ôºâ-siblings-ÊñπÊ≥ï"><a class="header-anchor" href="#Ôºà4Ôºâ-siblings-ÊñπÊ≥ï">¬∂</a>Ôºà4Ôºâ<code>.siblings()</code> ÊñπÊ≥ï</h3><h3 id="Ôºà5Ôºâ-parent-ÊñπÊ≥ï"><a class="header-anchor" href="#Ôºà5Ôºâ-parent-ÊñπÊ≥ï">¬∂</a>Ôºà5Ôºâ<code>.parent()</code> ÊñπÊ≥ï</h3><p>ÁªÜËäÇÁúã ÂÆûÈ™åÊ•º</p><h2 id="CSS-DOM"><a class="header-anchor" href="#CSS-DOM">¬∂</a>CSS DOM</h2><p>CSS-DOM ÊäÄÊúØÁÆÄÂçïÊù•ËØ¥Â∞±ÊòØËØªÂèñÂíåËÆæÁΩÆ style ÂØπË±°ÁöÑÂêÑÁßçÂ±ûÊÄß„ÄÇ</p><h3 id="Ôºà1Ôºâ-css"><a class="header-anchor" href="#Ôºà1Ôºâ-css">¬∂</a>Ôºà1Ôºâ<code>.css()</code></h3><p>Á§∫‰æãÔºöËé∑Âèñ div ÁöÑËÉåÊôØÈ¢úËâ≤</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><br><span class="css">      <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="css">        <span class="hljs-attribute">background-color</span>: red;</span><br>      &#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      alert($(<span class="hljs-string">&#x27;div&#x27;</span>).css(<span class="hljs-string">&#x27;background-color&#x27;</span>));</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>ËøêË°åÊïàÊûú‰∏∫Ôºö</p><p><img src="https://doc.shiyanlou.com/document-uid897174labid9222timestamp1555062888673.png" alt="Ê≠§Â§ÑËæìÂÖ•ÂõæÁâáÁöÑÊèèËø∞"></p><p>Á§∫‰æãÔºö‰∏∫ div ËÆæÁΩÆËæπÊ°ÜÂíåÈ´òÂ∫¶Â±ûÊÄß</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-string">&#x27;div&#x27;</span>).css(&#123; <span class="hljs-attr">border</span>: <span class="hljs-string">&#x27;1px solid red&#x27;</span>, <span class="hljs-attr">height</span>: <span class="hljs-string">&#x27;100px&#x27;</span> &#125;);</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>ËøêË°åÊïàÊûú‰∏∫Ôºö</p><p><img src="https://doc.shiyanlou.com/document-uid897174labid9222timestamp1555062949580.png" alt="Ê≠§Â§ÑËæìÂÖ•ÂõæÁâáÁöÑÊèèËø∞"></p><p>ÂØπ‰∫éÈÄèÊòéÂ∫¶ÁöÑËÆæÁΩÆÔºåÂèØ‰ª•Áõ¥Êé•‰ΩøÁî® opacity Â±ûÊÄßÔºåjQuery Â∑≤ÁªèÂ§ÑÁêÜÂ•Ω‰∫ÜÂÖºÂÆπÊÄßÁöÑÈóÆÈ¢òÔºåÊØîÂ¶ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">$(<span class="hljs-string">&#x27;p&#x27;</span>).css(<span class="hljs-string">&#x27;opacity&#x27;</span>, <span class="hljs-string">&#x27;0.5&#x27;</span>);<br></code></pre></td></tr></table></figure><p>Ôºà2Ôºâ<code>.height()</code>„ÄÅ<code>.width()</code></p><ul><li><code>.height()</code> Ëé∑ÂèñÂåπÈÖçÂÖÉÁ¥†ÈõÜÂêà‰∏≠ÁöÑÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÁöÑÂΩìÂâçËÆ°ÁÆóÈ´òÂ∫¶ÂÄº Êàñ ËÆæÁΩÆÊØè‰∏Ä‰∏™ÂåπÈÖçÂÖÉÁ¥†ÁöÑÈ´òÂ∫¶ÂÄº„ÄÇ</li><li><code>.width()</code> ‰∏∫ÂåπÈÖçÁöÑÂÖÉÁ¥†ÈõÜÂêà‰∏≠Ëé∑ÂèñÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÁöÑÂΩìÂâçËÆ°ÁÆóÂÆΩÂ∫¶ÂÄº Êàñ ÁªôÊØè‰∏™ÂåπÈÖçÁöÑÂÖÉÁ¥†ËÆæÁΩÆÂÆΩÂ∫¶„ÄÇ</li></ul><p>Á§∫‰æãÔºöËé∑Âèñ div ÁöÑÈ´òÂ∫¶ÂíåÂÆΩÂ∫¶</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><br>      .demo &#123;<br><span class="css">        <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;</span><br><span class="css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</span><br>      &#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo&quot;</span>&gt;</span>shiyanlou<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="javascript">      alert($(<span class="hljs-string">&#x27;div&#x27;</span>).height() + <span class="hljs-string">&#x27; &amp;&amp; &#x27;</span> + $(<span class="hljs-string">&#x27;div&#x27;</span>).width());</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>ËøêË°åÊïàÊûú‰∏∫Ôºö</p><p><img src="https://doc.shiyanlou.com/document-uid897174labid9222timestamp1555063004720.png" alt="Ê≠§Â§ÑËæìÂÖ•ÂõæÁâáÁöÑÊèèËø∞"></p><p><code>height()</code> ÊñπÊ≥ï‰πüËÉΩÁî®Êù•ËÆæÁΩÆÂÖÉÁ¥†ÁöÑÈ´òÂ∫¶ÔºåÂ¶ÇÊûú‰º†ÈÄíÁöÑÊòØ‰∏Ä‰∏™Êï∞Â≠óÔºåÂàôÈªòËÆ§Âçï‰ΩçÊòØ pxÔºåÂ¶ÇÊûúË¶ÅÁî®ÂÖ∂‰ªñÂçï‰ΩçÔºåÂàôÂøÖÈ°ª‰º†ÈÄí‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤ÔºåÊØîÂ¶ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">$(<span class="hljs-string">&quot;p&quot;</span>).height(<span class="hljs-number">520</span>);<span class="hljs-comment">//ËÆæÁΩÆ&lt;p&gt;ÂÖÉÁ¥†ÁöÑÈ´òÂ∫¶ÂÄº‰∏∫520px</span><br>$(<span class="hljs-string">&quot;p&quot;</span>).height(10rem);<span class="hljs-comment">//ËÆæÁΩÆ&lt;p&gt;ÂÖÉÁ¥†ÁöÑÈ´òÂ∫¶ÂÄº‰∏∫10rem</span><br></code></pre></td></tr></table></figure><p>ËøòÂèØ‰ª•ÈÄöËøá css ÊñπÊ≥ïÊù•Ëé∑ÂèñÈ´òÂ∫¶ÂÄºÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">$(element).css(<span class="hljs-string">&#x27;height&#x27;</span>);<br></code></pre></td></tr></table></figure><p>‰∏§ËÄÖÁöÑÂå∫Âà´ÊòØÔºö<code>css()</code> ÊñπÊ≥ïËé∑ÂèñÁöÑÈ´òÂ∫¶ÂÄº‰∏éÊ†∑ÂºèÁöÑËÆæÁΩÆÊúâÂÖ≥ÔºåÂèØËÉΩ‰ºöÂæóÂà∞ ‚Äúauto‚Äù Ôºå‰πüÂèØËÉΩÂæóÂà∞ ‚Äú10px‚Äù ‰πãÁ±ªÁöÑÂ≠óÁ¨¶‰∏≤ÔºåËÄå <code>height()</code> ÊñπÊ≥ïËé∑ÂèñÁöÑÈ´òÂ∫¶ÂÄºÂàôÊòØÂÖÉÁ¥†Âú®È°µÈù¢‰∏≠ÁöÑÂÆûÈôÖÈ´òÂ∫¶Ôºå‰∏éÊ†∑ÂºèÁöÑËÆæÁΩÆÊó†ÂÖ≥ÔºåËÄå‰∏î‰∏çÂ∏¶Âçï‰Ωç„ÄÇ</p><p>ÂêåÊ†∑ÁöÑ width ÊñπÊ≥ï‰πüÊòØÁõ∏Á±ª‰ººÁöÑÔºåËøôÈáåÂ∞±‰∏çÂÜçÈáçÂ§çÁöÑËÆ≤Ëß£‰∫ÜÔºåÂ§ßÂÆ∂ÂèØ‰ª•Ëá™Ë°åÂ∞ùËØï‰ΩøÁî®ÁúãÁúãÊïàÊûú„ÄÇ</p><p>Ôºà3ÔºâÂÖÉÁ¥†ÂÆö‰Ωç</p><ul><li><code>offset()</code> ÊñπÊ≥ïÔºåÂú®ÂåπÈÖçÁöÑÂÖÉÁ¥†ÈõÜÂêà‰∏≠ÔºåËé∑ÂèñÁöÑÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÁöÑÂΩìÂâçÂùêÊ†áÔºåÊàñËÆæÁΩÆÊØè‰∏Ä‰∏™ÂÖÉÁ¥†ÁöÑÂùêÊ†áÔºåÂùêÊ†áÁõ∏ÂØπ‰∫éÊñáÊ°£„ÄÇËøô‰∏™ÊñπÊ≥ï‰∏çÊé•Âèó‰ªª‰ΩïÂèÇÊï∞„ÄÇ<code>.offset()</code> ÊñπÊ≥ïÂÖÅËÆ∏Êàë‰ª¨Ê£ÄÁ¥¢‰∏Ä‰∏™ÂÖÉÁ¥†Áõ∏ÂØπ‰∫éÊñáÊ°£ÔºàdocumentÔºâÁöÑÂΩìÂâç‰ΩçÁΩÆ„ÄÇÂíå <code>.position()</code> ÁöÑÂ∑ÆÂà´Âú®‰∫éÔºö<code>.position()</code> ÊòØÁõ∏ÂØπ‰∫éÁõ∏ÂØπ‰∫éÁà∂Á∫ßÂÖÉÁ¥†ÁöÑ‰ΩçÁßª„ÄÇÂΩìÈÄöËøáÂÖ®Â±ÄÊìç‰ΩúÔºàÁâπÂà´ÊòØÈÄöËøáÊãñÊãΩÊìç‰ΩúÔºâÂ∞Ü‰∏Ä‰∏™Êñ∞ÁöÑÂÖÉÁ¥†ÊîæÁΩÆÂà∞Âè¶‰∏Ä‰∏™Â∑≤ÁªèÂ≠òÂú®ÁöÑÂÖÉÁ¥†ÁöÑ‰∏äÈù¢Êó∂ÔºåËã•Ë¶ÅÂèñÂæóËøô‰∏™Êñ∞ÁöÑÂÖÉÁ¥†ÁöÑ‰ΩçÁΩÆÔºåÈÇ£‰πà‰ΩøÁî® <code>.offset()</code> Êõ¥ÂêàÈÄÇ„ÄÇ<code>.offset()</code> ËøîÂõû‰∏Ä‰∏™ÂåÖÂê´ top Âíå left Â±ûÊÄßÁöÑÂØπË±° „ÄÇÊØîÂ¶ÇÔºö</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> p_offset = $(<span class="hljs-string">&#x27;p&#x27;</span>).offset(); <span class="hljs-comment">//Ëé∑Âèñ&lt;p&gt;ÂÖÉÁ¥†ÁöÑoffset()</span><br><span class="hljs-keyword">var</span> p_offsetLeft = p_offset.left; <span class="hljs-comment">//Ëé∑ÂèñÂ∑¶ÂÅèÁßª</span><br><span class="hljs-keyword">var</span> p_offsetTop = p_offset.top; <span class="hljs-comment">//Ëé∑ÂèñÂè≥ÂÅèÁßª</span><br></code></pre></td></tr></table></figure><ul><li><code>position()</code> ÊñπÊ≥ïÔºåËé∑ÂèñÂåπÈÖçÂÖÉÁ¥†‰∏≠Á¨¨‰∏Ä‰∏™ÂÖÉÁ¥†ÁöÑÂΩìÂâçÂùêÊ†áÔºåÁõ∏ÂØπ‰∫é offset parent ÁöÑÂùêÊ†á„ÄÇ(offset parent ÊåáÁ¶ªËØ•ÂÖÉÁ¥†ÊúÄËøëÁöÑËÄå‰∏îË¢´ÂÆö‰ΩçËøáÁöÑÁ•ñÂÖàÂÖÉÁ¥† ) <code>.position()</code> ÊñπÊ≥ïÂèØ‰ª•ÂèñÂæóÂÖÉÁ¥†Áõ∏ÂØπ‰∫éÁà∂ÂÖÉÁ¥†ÁöÑÂÅèÁßª‰ΩçÁΩÆ„ÄÇ‰∏é <code>.offset()</code> ‰∏çÂêå, <code>.offset()</code> ÊòØËé∑ÂæóËØ•ÂÖÉÁ¥†Áõ∏ÂØπ‰∫é documet ÁöÑÂΩìÂâçÂùêÊ†á ÂΩìÊää‰∏Ä‰∏™Êñ∞ÂÖÉÁ¥†ÊîæÂú®Âêå‰∏Ä‰∏™ÂÆπÂô®ÈáåÈù¢Âè¶‰∏Ä‰∏™ÂÖÉÁ¥†ÈôÑËøëÊó∂ÔºåÁî® <code>.position()</code> Êõ¥Â•ΩÁî®„ÄÇ<code>.position()</code>ËøîÂõû‰∏Ä‰∏™ÂåÖÂê´ top Âíå left Â±ûÊÄßÁöÑÂØπË±°„ÄÇ</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> position = $(<span class="hljs-string">&#x27;p&#x27;</span>).position(); <span class="hljs-comment">//Ëé∑Âèñ&lt;p&gt;ÂÖÉÁ¥†ÁöÑposition()</span><br><span class="hljs-keyword">var</span> left = position.left; <span class="hljs-comment">//Ëé∑ÂèñÂ∑¶ÂÅèÁßª</span><br><span class="hljs-keyword">var</span> top = position.top; <span class="hljs-comment">//Ëé∑ÂèñÂè≥ÂÅèÁßª</span><br></code></pre></td></tr></table></figure><ul><li><code>scrollTop()</code> ÊñπÊ≥ïÂíå <code>scrollLeft()</code> ÊñπÊ≥ïÔºåËøô‰∏§‰∏™ÊñπÊ≥ïÁöÑ‰ΩúÁî®ÊòØÂàÜÂà´Ëé∑ÂèñÂÖÉÁ¥†ÁöÑÊªöÂä®Êù°Ë∑ùÈ°∂Á´ØÁöÑË∑ùÁ¶ªÂíåË∑ùÂ∑¶‰æßÁöÑË∑ùÁ¶ª„ÄÇÂè¶Â§ñÂèØ‰ª•‰∏∫Ëøô‰∏§‰∏™ÊñπÊ≥ïÊåáÂÆö‰∏Ä‰∏™ÂèÇÊï∞ÔºåÊéßÂà∂ÂÖÉÁ¥†ÁöÑÊªöÂä®Êù°ÊªöÂä®Âà∞ÊåáÂÆö‰ΩçÁΩÆ„ÄÇÊØîÂ¶ÇÔºö</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> $p = $(<span class="hljs-string">&#x27;p&#x27;</span>);<br><span class="hljs-keyword">var</span> scrollTop = $p.scrollTop(); <span class="hljs-comment">//Ëé∑ÂèñÂÖÉÁ¥†ÁöÑÊªöÂä®Êù°Ë∑ùÈ°∂Á´ØÁöÑË∑ùÁ¶ª</span><br><span class="hljs-keyword">var</span> scrollLeft = $p.scrollLeft(); <span class="hljs-comment">//Ëé∑ÂèñÂÖÉÁ¥†ÁöÑÊªöÂä®Êù°Ë∑ùÂ∑¶‰æßÁöÑË∑ùÁ¶ª</span><br>$(<span class="hljs-string">&#x27;textarea&#x27;</span>).scrollTop(<span class="hljs-number">300</span>); <span class="hljs-comment">//ÂÖÉÁ¥†ÁöÑÂûÇÁõ¥ÊªöÂä®Êù°ÊªöÂä®Âà∞ÊåáÂÆöÁöÑ‰ΩçÁΩÆ</span><br>$(<span class="hljs-string">&#x27;textarea&#x27;</span>).scrollLeft(<span class="hljs-number">300</span>); <span class="hljs-comment">//ÂÖÉÁ¥†ÁöÑÊ®™ÂêëÊªöÂä®Êù°ÊªöÂä®Âà∞ÊåáÂÆöÁöÑ‰ΩçÁΩÆ</span><br></code></pre></td></tr></table></figure><p>ÊÉ≥Ë¶Å‰∫ÜËß£Êõ¥Â§öÂÖ≥‰∫é css Â±ûÊÄßÁöÑÊìç‰ΩúÂèØ‰ª•ËÆøÈóÆ <a href="https://www.jquery123.com/category/manipulation/style-properties/">jQuery ‰∏≠ÊñáÂÆòÁΩë CSS Â±ûÊÄß</a>„ÄÇ</p><h1 id="Event-and-Animation"><a class="header-anchor" href="#Event-and-Animation">¬∂</a>Event and Animation</h1><h1 id="Form"><a class="header-anchor" href="#Form">¬∂</a>Form</h1><h1 id="AJAX"><a class="header-anchor" href="#AJAX">¬∂</a>AJAX</h1><p>ÂàõÂª∫ XMLHttpRequest ÂØπË±°ÁöÑËØ≠Ê≥ïÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> XMLHttpRequest();<br></code></pre></td></tr></table></figure><p>Êàë‰ª¨‰ºö‰ΩøÁî® XMLHttpRequest ÂØπË±°ÁöÑ open() Âíå send() ÊñπÊ≥ïÊù•Â∞ÜËØ∑Ê±ÇÂèëÈÄÅÂà∞ÊúçÂä°Âô®„ÄÇ</p><table><thead><tr><th>ÊñπÊ≥ï</th><th>ÊèèËø∞</th></tr></thead><tbody><tr><td>open(method,url,async)</td><td>ËßÑÂÆöËØ∑Ê±ÇÁöÑÁ±ªÂûã„ÄÅURL ‰ª•ÂèäÊòØÂê¶ÂºÇÊ≠•Â§ÑÁêÜËØ∑Ê±Ç„ÄÇ method: ËØ∑Ê±ÇÁöÑÁ±ªÂûãÔºåhttp ÁöÑËØ∑Ê±ÇÁ±ªÂûãÔºåÂ¶Ç GET„ÄÅPOST„ÄÇ url: ËØ∑Ê±ÇÁöÑÊúçÂä°Á´ØË∑ØÂæÑ async: Boolean Á±ªÂûãÔºåtrue (ÂºÇÊ≠•Â§ÑÁêÜ)Ôºåfalse(ÂêåÊ≠•Â§ÑÁêÜ)</td></tr><tr><td>send(string)</td><td>Â∞ÜËØ∑Ê±ÇÂèëÈÄÅÂà∞ÊúçÂä°Á´Ø„ÄÇ stringÔºö‰ªÖÁî®‰∫é post ËØ∑Ê±Ç„ÄÇ</td></tr></tbody></table><p>Êàë‰ª¨ÂÖàÊù•Áúã‰∏Ä‰∏™ÁÆÄÂçïÁöÑ GET ËØ∑Ê±Ç:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">xhr.open(<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;index.html&#x27;</span>, <span class="hljs-literal">true</span>);<br>xhr.send();<br></code></pre></td></tr></table></figure><p>xhr ÊòØÊàë‰ª¨‰πãÂâçÂàõÂª∫ÁöÑ XMLHttpRequest ÂØπË±°ÁöÑÂÆû‰æãÔºåÈÄöËøáË∞ÉÁî® XMLHttpRequest ÂØπË±°ÁöÑ open Âíå send ÊñπÊ≥ïÔºåÂ∞±ÂÆûÁé∞‰∫Ü‰∏Ä‰∏™ÁÆÄÂçïÁöÑÂêëË∑ØÂæÑ <code>index.html</code> ÂèëËµ∑ÁöÑ GET ËØ∑Ê±ÇÔºåÂºÇÊ≠•Â§ÑÁêÜ„ÄÇÂõ†‰∏∫ GET ËØ∑Ê±ÇÁöÑ header ‰∏≠ÊòØÊ≤°ÊúâÂèÇÊï∞ÁöÑÔºåÊâÄ‰ª• send() ÈáåÁöÑÂÄº‰∏∫ null„ÄÇÂ¶ÇÊûúÊÉ≥Ë¶ÅÂä†‰∏äÂèÇÊï∞ÂàôÈúÄË¶ÅÂú®ËØ∑Ê±ÇÁöÑ url ÂêéÊ∑ªÂä†ÔºåÂ¶ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">xhr.open(<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;http://helloworld.com?id=1&#x27;</span>, <span class="hljs-string">&#x27;true&#x27;</span>);<br>xhr.send();<br></code></pre></td></tr></table></figure><p>Êàë‰ª¨ÂÜçÊù•Áúã‰∏Ä‰∏™ post ËØ∑Ê±ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">xhr.open(<span class="hljs-string">&#x27;POST&#x27;</span>, <span class="hljs-string">&#x27;index.php&#x27;</span>, <span class="hljs-literal">true</span>);<br>xhr.setRequestHeader(<span class="hljs-string">&#x27;Content-type&#x27;</span>, <span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>);<br>xhr.send(<span class="hljs-string">&#x27;name=syl&amp;id=2&#x27;</span>);<br></code></pre></td></tr></table></figure><p>Â¶ÇÊûúÊàë‰ª¨ÊÉ≥ÂÉè HTML Ë°®ÂçïÈÇ£Ê†∑ POST Êï∞ÊçÆÔºåÂàôÈúÄË¶Å‰ΩøÁî® setRequestHeader() Êù•Ê∑ªÂä† HTTP Â§¥ÔºåÁÑ∂ÂêéÂú® send ‰∏≠ËßÑÂÆöË¶ÅÂèëÈÄÅÁöÑÊï∞ÊçÆ„ÄÇ</p><p>Âú®‰∏äÈù¢ÁöÑ‰∏§‰∏™‰æãÂ≠ê‰∏≠Ôºåasync Êàë‰ª¨ÈÉΩÊòØÁî®‰∫Ü trueÔºå‰ΩøÁî® true Âíå false Êúâ‰ªÄ‰πàÂå∫Âà´Âë¢Ôºü</p><p>Êàë‰ª¨Áé∞Âú®Âè™ÊòØÂèëÈÄÅ‰∫ÜËØ∑Ê±ÇÔºå‰∏Ä‰∏™ÂÆåÊï¥ÁöÑ AJAX ËøáÁ®ãËøòË¶ÅÂåÖÊã¨ÊúçÂä°Á´ØËøîÂõû‰ø°ÊÅØÔºåËøô‰∏™ËøáÁ®ãÁöÑÊó∂Èó¥Â∞±ÊòØÊàë‰ª¨Êó†Ê≥ï‰º∞ËÆ°ÁöÑ‰∫ÜÔºåË∞ÅÈÉΩÊ≤°Ê≥ïÁ°ÆÂÆöÊúçÂä°Á´Ø‰ºö‰ªÄ‰πàÊó∂ÂÄôËøîÂõû‰ø°ÊÅØÔºåÊâÄ‰ª•Â¶ÇÊûú async ËÆæ‰∏∫ trueÔºåÂΩìÂèëÈÄÅ‰∫Ü AJAX ËØ∑Ê±ÇÂêéÔºåjs Êó†ÈúÄÁ≠âÂæÖÊúçÂä°Á´ØÁöÑÂìçÂ∫îÔºåËÄåÊòØ‰ºöÂéªÂ§ÑÁêÜÂÖ∂ÂÆÉÁöÑËÑöÊú¨ÔºåÁ≠âÂà∞ÊúçÂä°Á´ØÂìçÂ∫îÂ∞±Áª™ÁöÑÊó∂ÂÄôÔºåjs ‰ºöËøîÂõûÂØπ AJAX ‰∏≠ÁöÑÂâ©‰ΩôÈÉ®ÂàÜ‰ΩúÁõ∏Â∫îÂ§ÑÁêÜÔºåËøô‰∏™Áõ∏Â∫îÂ§ÑÁêÜÈúÄË¶ÅÈÄöËøá <code>onreadystatechange</code> Êù•ÂÆûÁé∞ÔºåÊàë‰ª¨‰ºöÂú®‰∏ã‰∏ÄÈÉ®ÂàÜ‰∏≠‰ªãÁªç„ÄÇÂ¶ÇÊûú async ËÆæ‰∏∫ falseÔºåÂΩìÁÑ∂Ôºå‰∏ÄËà¨‰∏çÊé®Ëçê‰ΩøÁî® async = falseÔºåÂ¶ÇÊûú‰Ω†Ëøô‰πà‰ΩøÁî®‰∫ÜÔºåÈÇ£‰πàËØ∑‰∏çË¶ÅÁºñÂÜô <code>onreadystatechange</code> ÂáΩÊï∞ÔºåÂê¶Âàô js ‰ºöÊåÇËµ∑Âú®Ëøô‰∏™ÂáΩÊï∞ÁöÑÂú∞ÊñπÔºåÁ≠âÂæÖÊúçÂä°Á´ØÂìçÂ∫îÔºåÂ¶ÇÊûúÊúçÂä°Á´ØÁò´Áó™‰∫ÜÔºåÈÇ£‰πà‰Ω†ÁöÑËÑöÊú¨Â∞±‰ºöÊó†Ê≥ïËøêË°å„ÄÇÊâÄ‰ª•Â¶ÇÊûú‰ΩøÁî®‰∫Ü async = falseÔºåÊääÂ§ÑÁêÜ‰ª£Á†ÅÊîæÂà∞ send() ÂêéÈù¢Âç≥ÂèØ„ÄÇ‰æãÂ¶ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">xhr.open(<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;index.text&#x27;</span>, <span class="hljs-literal">false</span>);<br>xhr.send();<br><span class="hljs-built_in">console</span>.log(xhr.responseText);<br></code></pre></td></tr></table></figure><h2 id="ÊúçÂä°Âô®ÂìçÂ∫î"><a class="header-anchor" href="#ÊúçÂä°Âô®ÂìçÂ∫î">¬∂</a>ÊúçÂä°Âô®ÂìçÂ∫î</h2><p>‰∏ÄËà¨ÊÉÖÂÜµ‰∏ãÔºåÊàë‰ª¨ÈúÄË¶ÅÂ§ÑÁêÜÁöÑÂ∞±ÊòØ <code>readyState == 4 &amp;&amp; status == 200</code> ÁöÑÊÉÖÂÜµÔºåÊâÄ‰ª• onreadystatechange ÔºåÁî®‰∫éÂ§ÑÁêÜÊúçÂä°Á´ØÂìçÂ∫îÁöÑÊñπÊ≥ï‰∏ÄËà¨ÂÜôÊ≥ïÂ¶Ç‰∏ãÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">xhr.onreadystatechange = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>  <span class="hljs-keyword">if</span> (xhr.readyState == <span class="hljs-number">4</span> &amp;&amp; xhr.status == <span class="hljs-number">200</span>) &#123;<br>    <span class="hljs-comment">//code ÂâçÁ´ØÂ§ÑÁêÜ‰ª£Á†Å</span><br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="jQuery-Â∞ÅË£Ö-AJAX"><a class="header-anchor" href="#jQuery-Â∞ÅË£Ö-AJAX">¬∂</a>jQuery Â∞ÅË£Ö AJAX</h2><h2 id="3-1-1-load"><a class="header-anchor" href="#3-1-1-load">¬∂</a>3.1.1 load()</h2><p>load() ÊòØ jQuery ‰∏≠ÊúÄÁÆÄÂçïÂíåÂ∏∏Áî®ÁöÑ AJAX ÊñπÊ≥ïÔºåËØ≠Ê≥ï‰∏∫Ôºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">load(url, [data], [callback]);<br></code></pre></td></tr></table></figure><table><thead><tr><th>ÂèÇÊï∞</th><th>Á±ªÂûã</th><th>ÊèèËø∞</th></tr></thead><tbody><tr><td>url</td><td>String</td><td>ËØ∑Ê±ÇÁöÑ url Âú∞ÂùÄ</td></tr><tr><td>data(ÂèØÈÄâ)</td><td>Object</td><td>ÂèëÈÄÅÂà∞ÊúçÂä°Âô®ÁöÑÊï∞ÊçÆ</td></tr><tr><td>callback(ÂèØÈÄâ)</td><td>Function</td><td>ËØ∑Ê±ÇÂÆåÊàêÊó∂ÁöÑÂõûË∞ÉÂáΩÊï∞ÔºåÊó†ËÆ∫ÊàêÂäüÂ§±Ë¥•  function Êúâ‰∏â‰∏™È¢ùÂ§ñÂèÇÊï∞  response ÂåÖÂê´Êù•Ëá™ËØ∑Ê±ÇÁöÑÁªìÊûúÊï∞ÊçÆ status ÂåÖÂê´ËØ∑Ê±ÇÁöÑÁä∂ÊÄÅ xhr ÂåÖÂê´ XMLHttpRequest ÂØπË±°</td></tr></tbody></table><p>‰∏ãÈù¢Ëøô‰∏™Á§∫‰æãÂä†ËΩΩ‰∫Ü‰∏Ä‰∏™ html Êñá‰ª∂Âà∞È°µÈù¢‰∏≠Êù•</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;result&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;#result&#x27;</span>).load(<span class="hljs-string">&#x27;https://042bc5dd9bf0.simplelab.cn/load.html&#x27;</span>);</span><br><span class="javascript">        <span class="hljs-comment">//‰∏äÈù¢ÊòØÂú®ÂÆûÈ™åÊ•ºÁéØÂ¢ÉÈáåËøêË°åËøáÁöÑ urlÔºå‰Ω†ÈúÄË¶ÅÊ†πÊçÆÊ≥®ÊÑèÈáåÁöÑÊ≠•È™§ÔºåÂ∞ÜÂêéÁ´ØËøêË°åËµ∑Êù•ÂêéÔºåÊääweb ÊúçÂä°È°µÈù¢‰∏≠ÁöÑ url ÊõøÊç¢Âà∞ÂØπÂ∫î‰ΩçÁΩÆÔºå‰∏ãÈù¢‰∏ÄË°åÊ≥®ÈáäÁªôÂá∫‰∫ÜÈúÄË¶ÅÊõøÊç¢ÁöÑ‰ΩçÁΩÆ„ÄÇ</span></span><br><span class="javascript">        <span class="hljs-comment">//$(&quot;#result&quot;).load(&quot;ÈúÄË¶ÅÂ∞Ü web ÊúçÂä°‰∏≠ url Á≤òË¥¥Âà∞ËøôÈáå/load.html&quot;);</span></span><br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="3-1-2-get"><a class="header-anchor" href="#3-1-2-get">¬∂</a>3.1.2 $.get()</h2><p>get() ÈÄöËøáËøúÁ®ã HTTP GET ËØ∑Ê±ÇËΩΩÂÖ•‰ø°ÊÅØ„ÄÇËØ≠Ê≥ïÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">$(selector).get(url, data, success(response, status, xhr), dataType);<br></code></pre></td></tr></table></figure><table><thead><tr><th>ÂèÇÊï∞</th><th>ÊèèËø∞</th></tr></thead><tbody><tr><td>url</td><td>ÂøÖÈ°ªÔºåËØ∑Ê±ÇÁöÑ url</td></tr><tr><td>data</td><td>ÂèØÈÄâÔºåÂèëÈÄÅÂà∞ÊúçÂä°Âô®ÁöÑÊï∞ÊçÆ</td></tr><tr><td>success(response,status,xhr)</td><td>ÂèØÈÄâÔºåÂΩìËØ∑Ê±ÇÊàêÂäüÊó∂ËøêË°åËØ•ÊñπÊ≥ï response-ÂåÖÂê´Êù•Ëá™ËØ∑Ê±ÇÁöÑÁªìÊûúÊï∞ÊçÆ status-ÂåÖÂê´ËØ∑Ê±ÇÁöÑÁä∂ÊÄÅ xhr-XMLHttpRequest ÂØπË±°</td></tr><tr><td>dataType</td><td>ÂèØÈÄâÔºåËßÑÂÆöÈ¢ÑËÆ°Êé•Êî∂ÊúçÂä°Á´ØÁöÑÂìçÂ∫îÁöÑÊï∞ÊçÆÔºåÂèØËÉΩÁöÑÁ±ªÂûãÊúâ xml„ÄÅhtml„ÄÅtext„ÄÅscript„ÄÅjson</td></tr></tbody></table><p>get() ÊñπÊ≥ïÊòØ ajax ÊñπÊ≥ïÁöÑÁÆÄÂÜôÂΩ¢ÂºèÔºåÊàë‰ª¨ËøòÊ≤°Êúâ‰ªãÁªç ajax ÊñπÊ≥ïÔºå‰ΩÜÊòØËøôÈáåÊàë‰ª¨ÁªôÂá∫ get Á≠â‰ª∑ÁöÑ ajax ÂΩ¢ÂºèÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">$.ajax(&#123;<br>  type: <span class="hljs-string">&#x27;GET&#x27;</span>,<br>  url: url,<br>  data: data,<br>  success: success,<br>  dataType: dataType,<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="3-1-3-post"><a class="header-anchor" href="#3-1-3-post">¬∂</a>3.1.3 $.post()</h2><p>post() ÊñπÊ≥ïÈÄöËøá HTTP POST ËØ∑Ê±Ç‰ªéÊúçÂä°Âô®ËΩΩÂÖ•Êï∞ÊçÆÔºåpost ÊñπÊ≥ïÂíå get ÊñπÊ≥ïÊØîËæÉÁ±ª‰ºº„ÄÇ‰ΩÜËøòÊòØÂ≠òÂú®‰∏Ä‰∫õÂå∫Âà´Ôºö</p><ul><li>get ËØ∑Ê±Ç‰ºöÂ∞ÜÂèÇÊï∞Ë∑üÂú® url ÂêéÈù¢ËøõË°å‰º†ÈÄíÔºåËÄå post ËØ∑Ê±ÇÁöÑÂèÇÊï∞ÂàôÊòØ‰Ωú‰∏∫ HTTP ÁöÑÊ∂àÊÅØÁöÑÂÆû‰ΩìÂÜÖÂÆπÔºåÂú® AJAX ËØ∑Ê±Ç‰∏≠ÔºåËøôÁßçÂå∫Âà´ÂØπÁî®Êà∑ÊòØ‰∏çÂèØËßÅÁöÑ„ÄÇ</li><li>get ËØ∑Ê±ÇÂØπ‰º†ËæìÁöÑÊï∞ÊçÆÊúâÂ§ßÂ∞èÈôêÂà∂Ôºå‰∏ÄËà¨ÊòØÂ∞è‰∫é 2KB ÁöÑÔºåËÄå post ÁêÜËÆ∫‰∏äÊ≤°ÊúâÈôêÂà∂„ÄÇ</li><li>get ËØ∑Ê±ÇÁöÑÊï∞ÊçÆ‰ºöË¢´ÊµèËßàÂô®ÁºìÂ≠òËµ∑Êù•Ôºå‰∏Ä‰∫õÊïèÊÑüÊï∞ÊçÆÂêåÊ†∑‰ºöË¢´ÁºìÂ≠òÔºåËÄå post ÂàôÂèØ‰ª•ÈÅøÂÖçËøô‰∏™ÈóÆÈ¢ò„ÄÇ</li></ul><p>ËØ≠Ê≥ï:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">jQuery.post(url, data, success(data, textStatus, jqXHR), dataType);<br></code></pre></td></tr></table></figure><table><thead><tr><th>ÂèÇÊï∞</th><th>ÊèèËø∞</th></tr></thead><tbody><tr><td>url</td><td>ÂøÖÈ°ªÔºåËØ∑Ê±ÇÁöÑ url</td></tr><tr><td>data</td><td>ÂèØÈÄâÔºåÂèëÈÄÅÂà∞ÊúçÂä°Âô®ÁöÑÊï∞ÊçÆ</td></tr><tr><td>success(data,textStatus,jqXHR)</td><td>ÂèØÈÄâÔºåÂΩìËØ∑Ê±ÇÊàêÂäüÊó∂ËøêË°åËØ•ÊñπÊ≥ï data-ÂåÖÂê´Êù•Ëá™ËØ∑Ê±ÇÁöÑÁªìÊûúÊï∞ÊçÆ textStatus-ÂåÖÂê´ËØ∑Ê±ÇÁöÑÁä∂ÊÄÅ jqXHR-XMLHttpRequest ÂØπË±°</td></tr><tr><td>dataType</td><td>ÂèØÈÄâÔºåËßÑÂÆöÈ¢ÑËÆ°Êé•Êî∂ÊúçÂä°Á´ØÁöÑÂìçÂ∫îÁöÑÊï∞ÊçÆÔºåÂèØËÉΩÁöÑÁ±ªÂûãÊúâ xml„ÄÅhtml„ÄÅtext„ÄÅscript„ÄÅjson</td></tr></tbody></table><p>post() ÊñπÊ≥ïÊòØ ajax ÊñπÊ≥ïÁöÑÁÆÄÂÜôÂΩ¢ÂºèÔºåÊàë‰ª¨ËøòÊ≤°Êúâ‰ªãÁªç ajax ÊñπÊ≥ïÔºå‰ΩÜÊòØËøôÈáåÊàë‰ª¨ÁªôÂá∫ post Á≠â‰ª∑ÁöÑ ajax ÂΩ¢ÂºèÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">$.ajax(&#123;<br>  type: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>  url: url,<br>  data: data,<br>  success: success,<br>  dataType: dataType,<br>&#125;);<br></code></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>click me<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">      <span class="hljs-keyword">var</span> data = &#123;</span><br><span class="javascript">        name: <span class="hljs-string">&#x27;syl&#x27;</span>,</span><br>        id: 1,<br>      &#125;;<br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;#btn&#x27;</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">          <span class="hljs-comment">//‰∏ãÈù¢ÊòØÂú®ÂÆûÈ™åÊ•ºÁéØÂ¢ÉÈáåËøêË°åËøáÁöÑ urlÔºå‰Ω†ÈúÄË¶ÅÊ†πÊçÆÊ≥®ÊÑèÈáåÁöÑÊ≠•È™§ÔºåÂ∞ÜÂêéÁ´ØËøêË°åËµ∑Êù•ÂêéÔºåÊääweb ÊúçÂä°È°µÈù¢‰∏≠ÁöÑ url ÊõøÊç¢Âà∞ÂØπÂ∫î‰ΩçÁΩÆÔºå‰∏ãÈù¢‰∏ÄË°åÊ≥®ÈáäÁªôÂá∫‰∫ÜÈúÄË¶ÅÊõøÊç¢ÁöÑ‰ΩçÁΩÆ„ÄÇ</span></span><br><span class="javascript">          <span class="hljs-comment">//&quot;ÈúÄË¶ÅÂ∞Ü web ÊúçÂä°‰∏≠ url Á≤òË¥¥Âà∞ËøôÈáå/posttest&quot;</span></span><br><span class="javascript">          $.post(<span class="hljs-string">&#x27;https://042bc5dd9bf0.simplelab.cn/posttest&#x27;</span>, data, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span></span></span><br>            result<br>          ) &#123;<br>            alert(result);<br>          &#125;);<br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>post Âíå get ÊñπÊ≥ïÂè™Â≠òÂú®ÊñπÊ≥ïÂêçÁöÑÂå∫Âà´„ÄÇÂè¶Â§ñÔºåÂΩì load() ÊñπÊ≥ïÂ∏¶ÊúâÂèÇÊï∞‰º†ÈÄíÁöÑÊó∂ÂÄôÔºå‰ºö‰ΩøÁî® POST ÊñπÂºèÂèëÈÄÅËØ∑Ê±ÇÔºåÂõ†Ê≠§Ôºå‰∏äËø∞‰ª£Á†ÅÊàë‰ª¨ÂèØ‰ª•‰ΩøÁî® load Êù•ÊîπÂÜôÔºö</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>click me<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;result&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">      <span class="hljs-keyword">var</span> data = &#123;</span><br><span class="javascript">        name: <span class="hljs-string">&#x27;syl&#x27;</span>,</span><br>        id: 1,<br>      &#125;;<br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;#btn&#x27;</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">          <span class="hljs-comment">//‰∏ãÈù¢ÊòØÂú®ÂÆûÈ™åÊ•ºÁéØÂ¢ÉÈáåËøêË°åËøáÁöÑ urlÔºå‰Ω†ÈúÄË¶ÅÊ†πÊçÆÊ≥®ÊÑèÈáåÁöÑÊ≠•È™§ÔºåÂ∞ÜÂêéÁ´ØËøêË°åËµ∑Êù•ÂêéÔºåÊääweb ÊúçÂä°È°µÈù¢‰∏≠ÁöÑ url ÊõøÊç¢Âà∞ÂØπÂ∫î‰ΩçÁΩÆÔºå‰∏ãÈù¢‰∏ÄË°åÊ≥®ÈáäÁªôÂá∫‰∫ÜÈúÄË¶ÅÊõøÊç¢ÁöÑ‰ΩçÁΩÆ„ÄÇ</span></span><br><span class="javascript">          <span class="hljs-comment">//&quot;ÈúÄË¶ÅÂ∞Ü web ÊúçÂä°‰∏≠ url Á≤òË¥¥Âà∞ËøôÈáå/posttest&quot;</span></span><br><span class="javascript">          $(<span class="hljs-string">&#x27;#result&#x27;</span>).load(</span><br><span class="javascript">            <span class="hljs-string">&#x27;https://042bc5dd9bf0.simplelab.cn/posttest&#x27;</span>,</span><br>            data,<br><span class="javascript">            <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">result</span>) </span>&#123;</span><br>              alert(result);<br>            &#125;<br>          );<br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://doc.shiyanlou.com/courses/uid920932-20190517-1558077410132" alt="ÂõæÁâáÊèèËø∞"></p><h2 id="getScript"><a class="header-anchor" href="#getScript">¬∂</a>$.getScript()</h2><p>jQuery Êèê‰æõ‰∫Ü $.getScript() ÊñπÊ≥ïÊù•Áõ¥Êé•Âä†ËΩΩ js Êñá‰ª∂ÔºåÂä†ËΩΩÁöÑ js Êñá‰ª∂‰ºöËá™Âä®ÊâßË°å„ÄÇgetScript ÈÄöËøá HTTP GET ËØ∑Ê±ÇËΩΩÂÖ•Âπ∂ÊâßË°å JavaScript Êñá‰ª∂ÔºåËØ≠Ê≥ïÔºö</p><p><code>jQuery.getScript(url, success(response, status));</code></p><table><thead><tr><th>ÂèÇÊï∞</th><th>ÊèèËø∞</th></tr></thead><tbody><tr><td>url</td><td>ËØ∑Ê±ÇÁöÑ url Âú∞ÂùÄ</td></tr><tr><td>success(response,status)</td><td>ÂèØÈÄâÔºåËØ∑Ê±ÇÊàêÂäüÂêéÊâßË°åÁöÑÂõûË∞ÉÂáΩÊï∞„ÄÇ  response-ÂåÖÂê´Êù•Ëá™ËØ∑Ê±ÇÁöÑÁªìÊûúÊï∞ÊçÆ status-ÂåÖÂê´ËØ∑Ê±ÇÁöÑÁä∂ÊÄÅ</td></tr></tbody></table><p>Ëøô‰∏™ÂáΩÊï∞ÂêåÊ†∑ÊòØÁÆÄÂÜôÁöÑ ajax ÂáΩÊï∞ÔºåÁ≠â‰ª∑‰∫é</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js">$.ajax(&#123;<br>  type: <span class="hljs-string">&#x27;GET&#x27;</span>,<br>  url: url,<br>  dataType: <span class="hljs-string">&#x27;script&#x27;</span>,<br>  success: success,<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="getJSON"><a class="header-anchor" href="#getJSON">¬∂</a>$.getJSON()</h2><p>.getJson() Áî®‰∫éÂä†ËΩΩ JSON Êñá‰ª∂Ôºå‰∏é.getJson()Áî®‰∫éÂä†ËΩΩJSONÊñá‰ª∂Ôºå‰∏é.getScript() ÁöÑÁî®Ê≥ïÁõ∏Âêå„ÄÇËØ≠Ê≥ïÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">jQuery.getJSON(url, data, success(data, status, xhr));<br></code></pre></td></tr></table></figure><table><thead><tr><th>ÂèÇÊï∞</th><th>ÊèèËø∞</th></tr></thead><tbody><tr><td>url</td><td>ËØ∑Ê±ÇÁöÑ url Âú∞ÂùÄ</td></tr><tr><td>data</td><td>ÂèØÈÄâÔºåÂèëÈÄÅÂà∞ÊúçÂä°Á´ØÁöÑÊï∞ÊçÆ</td></tr><tr><td>success(data,status,xhr)</td><td>ÂèØÈÄâÔºåËØ∑Ê±ÇÊàêÂäüÂêéÊâßË°åÁöÑÂõûË∞ÉÂáΩÊï∞„ÄÇ  data-ÂåÖÂê´Êù•Ëá™ËØ∑Ê±ÇÁöÑÁªìÊûúÊï∞ÊçÆ status-ÂåÖÂê´ËØ∑Ê±ÇÁöÑÁä∂ÊÄÅ xhr-XMLHttpRequest ÂØπË±°</td></tr></tbody></table><p>ËØ•ÂáΩÊï∞ËøòÊòØÁÆÄÂÜôÁöÑ Ajax ÂáΩÊï∞ÔºåÁ≠â‰ª∑‰∫éÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js">$.ajax(&#123;<br>  type: <span class="hljs-string">&#x27;GET&#x27;</span>,<br>  url: url,<br>  data: data,<br>  success: callback,<br>  dataType: json,<br>&#125;);<br></code></pre></td></tr></table></figure><p>ÂèëÈÄÅÂà∞ÊúçÂä°Âô®ÁöÑÊï∞ÊçÆ data ÂèØ‰Ωú‰∏∫Êü•ËØ¢Â≠óÁ¨¶‰∏≤ÈôÑÂä†Âà∞ URL ‰πãÂêé„ÄÇ‰º†ÈÄíÁªô success ÁöÑËøîÂõûÊï∞ÊçÆ data ÂèØ‰ª•ÊòØ js ÂØπË±°Ôºå‰πüÂèØ‰ª•ÊòØ json ÁªìÊûÑÁöÑÊï∞ÁªÑÔºåÈúÄË¶Å‰ΩøÁî® $.parseJSON() ËøõË°åËß£Êûê„ÄÇ</p><p>‰∏ãÈù¢ÁªôÂá∫‰∏Ä‰∏™ÁÆÄÂçïÁöÑÁ§∫‰æãÔºö</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>click me<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;#btn&#x27;</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">          <span class="hljs-comment">//‰∏ãÈù¢ÊòØÂú®ÂÆûÈ™åÊ•ºÁéØÂ¢ÉÈáåËøêË°åËøáÁöÑ urlÔºå‰Ω†ÈúÄË¶ÅÊ†πÊçÆÊ≥®ÊÑèÈáåÁöÑÊ≠•È™§ÔºåÂ∞ÜÂêéÁ´ØËøêË°åËµ∑Êù•ÂêéÔºåÊääweb ÊúçÂä°È°µÈù¢‰∏≠ÁöÑ url ÊõøÊç¢Âà∞ÂØπÂ∫î‰ΩçÁΩÆÔºå‰∏ãÈù¢‰∏ÄË°åÊ≥®ÈáäÁªôÂá∫‰∫ÜÈúÄË¶ÅÊõøÊç¢ÁöÑ‰ΩçÁΩÆ„ÄÇ</span></span><br><span class="javascript">          <span class="hljs-comment">//&quot;ÈúÄË¶ÅÂ∞Ü web ÊúçÂä°‰∏≠ url Á≤òË¥¥Âà∞ËøôÈáå/getjsontest&quot;</span></span><br><span class="javascript">          $.getJSON(<span class="hljs-string">&#x27;https://042bc5dd9bf0.simplelab.cn/getjsontest&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span></span></span><br>            data<br>          ) &#123;<br>            alert(<br><span class="javascript">              <span class="hljs-keyword">typeof</span> data +</span><br><span class="javascript">                <span class="hljs-string">&#x27;\n&#x27;</span> +</span><br>                data[0].id +<br><span class="javascript">                <span class="hljs-string">&#x27; &#x27;</span> +</span><br>                data[0].name +<br><span class="javascript">                <span class="hljs-string">&#x27;\n&#x27;</span> +</span><br>                data[1].id +<br><span class="javascript">                <span class="hljs-string">&#x27; &#x27;</span> +</span><br>                data[1].name +<br><span class="javascript">                <span class="hljs-string">&#x27;\n&#x27;</span> +</span><br>                data[2].id +<br><span class="javascript">                <span class="hljs-string">&#x27; &#x27;</span> +</span><br>                data[2].name +<br><span class="javascript">                <span class="hljs-string">&#x27;\n&#x27;</span></span><br>            );<br>          &#125;);<br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="ajax-options"><a class="header-anchor" href="#ajax-options">¬∂</a>$.ajax(options);</h2><p>ÊúÄÂü∫Êú¨ËØ≠Ê≥ï</p><p>‰æãÂ≠êÔºö</p><p>‰∏ãÈù¢ÁªôÂá∫‰∏Ä‰∏™ ajax ÊñπÊ≥ïÁöÑÁ§∫‰æãÔºö</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jquery-3.3.1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Game<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>ÁåúÊï∞Â≠ó<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>Á≠îÊ°àÊòØ0-100‰πãÈó¥ÁöÑÊï¥Êï∞<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;content&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn&quot;</span>&gt;</span>guess<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        $(<span class="hljs-string">&#x27;#btn&#x27;</span>).click(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">          <span class="hljs-comment">//‰∏ãÈù¢Èù¢ÊòØÂú®ÂÆûÈ™åÊ•ºÁéØÂ¢ÉÈáåËøêË°åËøáÁöÑ urlÔºå‰Ω†ÈúÄË¶ÅÊ†πÊçÆÊ≥®ÊÑèÈáåÁöÑÊ≠•È™§ÔºåÂ∞ÜÂêéÁ´ØËøêË°åËµ∑Êù•ÂêéÔºåÊääweb ÊúçÂä°È°µÈù¢‰∏≠ÁöÑ url ÊõøÊç¢Âà∞ÂØπÂ∫î‰ΩçÁΩÆÔºå‰∏ãÈù¢‰∏ÄË°åÊ≥®ÈáäÁªôÂá∫‰∫ÜÈúÄË¶ÅÊõøÊç¢ÁöÑ‰ΩçÁΩÆ„ÄÇ</span></span><br><span class="javascript">          <span class="hljs-comment">//&quot;ÈúÄË¶ÅÂ∞Ü web ÊúçÂä°‰∏≠ url Á≤òË¥¥Âà∞ËøôÈáå/ajaxtest&quot;</span></span><br><span class="javascript">          $.ajax(&#123;</span><br><span class="javascript">            type: <span class="hljs-string">&#x27;POST&#x27;</span>,</span><br><span class="javascript">            url: <span class="hljs-string">&#x27;https://042bc5dd9bf0.simplelab.cn/ajaxtest&#x27;</span>,</span><br>            data: &#123;<br><span class="javascript">              value: $(<span class="hljs-string">&#x27;#content&#x27;</span>).val(),</span><br>            &#125;,<br><span class="javascript">            dataType: <span class="hljs-string">&#x27;text&#x27;</span>,</span><br><span class="javascript">            beforeSend: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">xhr</span>) </span>&#123;</span><br><span class="javascript">              <span class="hljs-keyword">var</span> reg = <span class="hljs-regexp">/^((?!0)\d&#123;1,2&#125;|100)$/</span>;</span><br><span class="javascript">              <span class="hljs-keyword">if</span> (!reg.test(<span class="hljs-built_in">parseInt</span>($(<span class="hljs-string">&#x27;#content&#x27;</span>).val()))) &#123;</span><br>                xhr.abort();<br><span class="javascript">                alert(<span class="hljs-string">&#x27;ËØ∑ËæìÂÖ• 0 - 100 ÁöÑÊ≠£Êï¥Êï∞ÔºÅ&#x27;</span>);</span><br>              &#125;<br>            &#125;,<br><span class="javascript">            success: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">result</span>) </span>&#123;</span><br>              alert(result);<br>            &#125;,<br><span class="javascript">            error: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">xhr, e</span>) </span>&#123;</span><br><span class="javascript">              <span class="hljs-built_in">console</span>.log(e);</span><br>            &#125;,<br>          &#125;);<br>        &#125;);<br>      &#125;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>ËøôÊòØ‰∏Ä‰∏™ÁåúÊï∞Â≠óÊ∏∏ÊàèÔºåÂú®ËæìÂÖ•Ê°Ü‰∏≠ËæìÂÖ•Êï∞Â≠óÔºåÁÇπÂáªÊåâÈíÆÔºåÂèëÈÄÅ ajax ËØ∑Ê±ÇÔºåÁî±ÂêéÁ´ØÂ§ÑÁêÜÂêéËøîÂõûÁªìÊûúÔºå‰∏ãÈù¢ÁªôÂá∫ÂêéÁ´ØÂ§ÑÁêÜÈÉ®ÂàÜÁöÑÈÄªËæë‰ª£Á†ÅÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">router.post(<span class="hljs-string">&#x27;/ajaxtest&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res, next</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span> (req.body.value == <span class="hljs-number">23</span>) res.send(<span class="hljs-string">&#x27;ÊÅ≠Âñú‰Ω†ÔºåÁåúÂØπ‰∫ÜÔºÅ&#x27;</span>);<br>  <span class="hljs-keyword">else</span> res.send(<span class="hljs-string">&#x27;‰∏çÊòØ &#x27;</span> + req.body.value + <span class="hljs-string">&#x27; Âì¶ÔºåÂà´ÁÅ∞ÂøÉÔºåÂÜçÊé•ÂÜçÂéâÔºÅ&#x27;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><p>Êàë‰ª¨Âú® beforeSend ÂèÇÊï∞‰∏≠ËÆæÁΩÆ‰∫Ü‰∏Ä‰∏™Ê≠£ÂàôÂà§Êñ≠ÔºåÈúÄË¶ÅÊª°Ë∂≥ËæìÂÖ•ÁöÑÊï∞Â≠ó‰∏∫ 0-100 ÁöÑÊï¥Êï∞Êâç‰ºöÂèëÈÄÅ ajax ËØ∑Ê±ÇÔºåÂê¶Âàô‰ºöË∞ÉÁî® abort() ÂèñÊ∂àËøôÊ¨° ajax ËØ∑Ê±Ç„ÄÇ</p><p><img src="https://doc.shiyanlou.com/courses/uid920932-20190517-1558077495738" alt="ÂõæÁâáÊèèËø∞"></p><p><img src="https://doc.shiyanlou.com/courses/uid920932-20190517-1558077514606" alt="ÂõæÁâáÊèèËø∞"></p><h2 id="ÂÖ®Â±Ä-AJAX-‰∫ã‰ª∂-ÈáçË¶ÅÔºÅ"><a class="header-anchor" href="#ÂÖ®Â±Ä-AJAX-‰∫ã‰ª∂-ÈáçË¶ÅÔºÅ">¬∂</a>ÂÖ®Â±Ä AJAX ‰∫ã‰ª∂ ÈáçË¶ÅÔºÅ</h2><p>ÊÉ≥Ë±°ËøôÊ†∑‰∏Ä‰∏™Â∫îÁî®Âú∫ÊôØÔºåÁî®Êà∑ÁÇπÂáª‰∫Ü‰∏Ä‰∏™ÊåâÈíÆÔºåËÄåËøô‰∏™ËØ∑Ê±ÇÈúÄË¶ÅÁõ∏ÂΩìÈïøÁöÑÊó∂Èó¥ÊâçËÉΩËøîÂõûÔºåÂ¶ÇÊûúÈ°µÈù¢‰∏äÊ≤°ÊúâÊèêÁ§∫‰ø°ÊÅØÔºåÁî®Êà∑ÂæàÂÆπÊòìÂ∞±Â§±ÂéªËÄêÂøÉÔºåÊâÄ‰ª•Êàë‰ª¨ÈúÄË¶ÅÂØπ ajax ËØ∑Ê±ÇÊúâ‰∏Ä‰∏™ÂÖ®Â±ÄÁöÑÁõëÊéß„ÄÇjQuery ‰∏≠ AJAX ÁöÑÂÖ®Â±Ä‰∫ã‰ª∂ÊúâÔºö</p><table><thead><tr><th>ÊñπÊ≥ï</th><th>ÊèèËø∞</th></tr></thead><tbody><tr><td>ajaxStart(callback)</td><td>Ajax ËØ∑Ê±ÇÂºÄÂßãÊó∂ÊâßË°åÁöÑÂáΩÊï∞</td></tr><tr><td>ajaxComplete(callback)</td><td>Ajax ËØ∑Ê±ÇÂÆåÊàêÊó∂ÊâßË°åÁöÑÂáΩÊï∞</td></tr><tr><td>ajaxError(callback)</td><td>Ajax ËØ∑Ê±ÇÂèëÁîüÈîôËØØÊó∂ÊâßË°åÁöÑÂáΩÊï∞ÔºåÊçïÊçâÂà∞ÁöÑÈîôËØØÂèØ‰ª•‰Ωú‰∏∫ÊúÄÂêé‰∏Ä‰∏™ÂèÇÊï∞‰º†ÈÄí</td></tr><tr><td>ajaxSend(callback)</td><td>Ajax ËØ∑Ê±ÇÂèëÈÄÅÂâçÊâßË°åÁöÑÂáΩÊï∞</td></tr><tr><td>ajaxSuccess(callback)</td><td>Ajax ËØ∑Ê±ÇÊàêÂäüÊó∂ÊâßË°åÁöÑÂáΩÊï∞</td></tr><tr><td>ajaxStop(callback)</td><td>Ajax ËØ∑Ê±ÇÁªìÊùüÊó∂ÊâßË°åÁöÑÂáΩÊï∞</td></tr></tbody></table><p>‰æãÂ¶ÇÔºö</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js">$(<span class="hljs-string">&#x27;$test&#x27;</span>).ajaxStart(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>  $(<span class="hljs-built_in">this</span>).show();<br>&#125;);<br>$(<span class="hljs-string">&#x27;$test&#x27;</span>).ajaxStop(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<br>  $(<span class="hljs-built_in">this</span>).hide();<br>&#125;);<br></code></pre></td></tr></table></figure><p>Â¶ÇÊûúÊÉ≥Ë¶ÅÊüê‰∏™ ajax ËØ∑Ê±Ç‰∏çÂèóÂÖ®Â±Ä‰∫ã‰ª∂ÁõëÂê¨ÂΩ±ÂìçÔºåÈÇ£‰πàÂèØ‰ª•Âú®‰ΩøÁî® $.ajax Êó∂ÔºåÊääÂèÇÊï∞‰∏≠ÁöÑ global ËÆæÁΩÆ‰∏∫ false„ÄÇ</p>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JS</tag>
      
      <tag>jQuery</tag>
      
      <tag>front-end</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript Hands On Notes</title>
    <link href="/2021/03/02/JsHandsOn/"/>
    <url>/2021/03/02/JsHandsOn/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ËøôÁØáÊñáÂ≠óÈöèÊâãÁî®Êù•ËÆ∞ÂΩï-Js-Âíå-Python-ÁöÑÂå∫Âà´"><a class="header-anchor" href="#ËøôÁØáÊñáÂ≠óÈöèÊâãÁî®Êù•ËÆ∞ÂΩï-Js-Âíå-Python-ÁöÑÂå∫Âà´">¬∂</a>ËøôÁØáÊñáÂ≠óÈöèÊâãÁî®Êù•ËÆ∞ÂΩï Js Âíå Python ÁöÑÂå∫Âà´</h1><p>‰∏ªË¶ÅÂÜÖÂÆπÊù•Ëá™YouTube ËßÜÈ¢ë <a href="https://www.youtube.com/watch?v=PkZNo7MFNFg">Learn JavaScript - Full Course for Beginners</a></p><span id="more"></span><p>[TOC]</p><h1 id="Declare-Variable-Declare-Variable"><a class="header-anchor" href="#Declare-Variable-Declare-Variable">¬∂</a>Declare Variable{Declare Variable}:</h1><h2 id="Declaring"><a class="header-anchor" href="#Declaring">¬∂</a>Declaring</h2><p><code>var</code> can be declared for any types.</p><p>Without the <code>var</code> , the variable will be a global variable, which can be created in a function and accessed from outside of function.</p><h1 id="Declare-function"><a class="header-anchor" href="#Declare-function">¬∂</a><strong>Declare function</strong>:</h1><p><code>function function(val)</code></p><h1 id="Comparison"><a class="header-anchor" href="#Comparison">¬∂</a><strong>Comparison</strong>:</h1><p><code>===, ==</code></p><p><code>===</code> will looks at type difference, <code>==</code> will not</p><p><code>!==</code> will checks types, <code>!=</code> will not</p><h1 id="Js-has-switch"><a class="header-anchor" href="#Js-has-switch">¬∂</a><strong>Js has switch</strong></h1><figure class="highlight javascript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sequentialSizes</span>(<span class="hljs-params">val</span>)</span>&#123;<br><span class="hljs-keyword">var</span> answer = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">switch</span>(val)&#123;<br>case1: <br>case2:<br>case3:<br>answer = <span class="hljs-string">&quot;low&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:<br><span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:<br><span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:<br>anwer = <span class="hljs-string">&#x27;mid&#x27;</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="null"><a class="header-anchor" href="#null">¬∂</a><strong>null</strong></h1><p>null is called <code>undefined</code></p><h1 id="Dictionary-Object"><a class="header-anchor" href="#Dictionary-Object">¬∂</a>Dictionary(Object)</h1><p>(the person in video called this ‚ÄúObject‚Äù) <strong>ËøôÈáåÊòØJSON ObjectÔºÅ</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> Dogs = &#123;<br><span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;Camper&quot;</span>, <span class="hljs-comment">// called property: value</span><br><span class="hljs-string">&quot;legs&quot;</span>: <span class="hljs-number">4</span>,<br><span class="hljs-string">&quot;tails&quot;</span>:<span class="hljs-number">1</span>,<br><span class="hljs-string">&quot;friends&quot;</span>:[<span class="hljs-string">&quot;haha&quot;</span>]<br>&#125;;<br><br><span class="hljs-keyword">var</span> name = Dogs.name <span class="hljs-comment">// one way of accessing</span><br><span class="hljs-keyword">var</span> name = Dogs[name]<br><br><span class="hljs-comment">//Delete</span><br><span class="hljs-keyword">delete</span> Dogs.name<br><span class="hljs-keyword">delete</span> Dogs[name]<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkObj</span>(<span class="hljs-params">checkProp</span>)</span>&#123;  <span class="hljs-comment">//check if a object has a certain property</span><br><span class="hljs-keyword">if</span> (myObj.hasOwnProperty(checkProp))&#123;<br><span class="hljs-keyword">return</span> myObj[checkProp];<br>&#125; <span class="hljs-keyword">else</span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Not Found&quot;</span><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>Object Exercise:</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs xquery">var<span class="hljs-built_in"> collection</span> = &#123;<br><span class="hljs-string">&quot;2548&quot;</span>:&#123;<br><span class="hljs-string">&quot;album&quot;</span>: <span class="hljs-string">&quot;slippery When Wet&quot;</span>,<br><span class="hljs-string">&quot;artist&quot;</span>: <span class="hljs-string">&quot;Bon Jovi&quot;</span>,<br><span class="hljs-string">&quot;tracks&quot;</span>: [<br><span class="hljs-string">&quot;Let it Rock&quot;</span>,<br><span class="hljs-string">&quot;You Give Love a Bad Name&quot;</span><br>]<br>&#125;Ôºå<br><span class="hljs-string">&quot;2523&quot;</span>:&#123;<br><span class="hljs-string">&quot;album&quot;</span>: <span class="hljs-string">&quot;slippery When Wet&quot;</span>,<br><span class="hljs-string">&quot;artist&quot;</span>: <span class="hljs-string">&quot;Bon Jovi&quot;</span>,<br><span class="hljs-string">&quot;tracks&quot;</span>: [<br><span class="hljs-string">&quot;Let it Rock&quot;</span>,<br><span class="hljs-string">&quot;You Give Love a Bad Name&quot;</span><br>]<br>&#125;<br>&#125;<br><br>var collectionCopy = JSON.parse(JSON.stringify<span class="hljs-built_in">(collection</span>))<br><span class="hljs-keyword">function</span> updateRecords<span class="hljs-built_in">(id</span>, prop, <span class="hljs-keyword">value</span>)&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">value</span> === <span class="hljs-string">&quot;&quot;</span>)&#123;<br><span class="hljs-keyword">delete</span><span class="hljs-built_in"> collection</span><span class="hljs-built_in">[id</span>][pro];<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(prop === <span class="hljs-string">&quot;tracks&quot;</span>)&#123;<br><span class="hljs-built_in">collection</span><span class="hljs-built_in">[id</span>][prop] =<span class="hljs-built_in"> collection</span><span class="hljs-built_in">[id</span>][prop] || [];<br><span class="hljs-built_in">collection</span><span class="hljs-built_in">[id</span>][prop].push(<span class="hljs-keyword">value</span>);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-built_in">collection</span><span class="hljs-built_in">[id</span>][prop] = <span class="hljs-keyword">value</span>;<br>&#125;<br><span class="hljs-keyword">return</span><span class="hljs-built_in"> collection</span><br>&#125;<br><br>console.log(updateRecords(<span class="hljs-number">5439</span>, <span class="hljs-string">&quot;artist&quot;</span>, <span class="hljs-string">&quot;ABBA&quot;</span>));<br><br></code></pre></td></tr></table></figure><h1 id="Traverse-the-Array"><a class="header-anchor" href="#Traverse-the-Array">¬∂</a><strong>Traverse the Array</strong></h1><p>ÂíåJava‰∏ÄÊ†∑</p><h1 id="Math"><a class="header-anchor" href="#Math">¬∂</a><strong>Math</strong></h1><p>Js also has Math module</p><h1 id="convert-str-to-int"><a class="header-anchor" href="#convert-str-to-int">¬∂</a><strong>convert str to int</strong></h1><p><code>parseInt(str) </code></p><p><code>parseInt(str, 2)</code>  parse in base 2</p><h1 id="Easy-condition"><a class="header-anchor" href="#Easy-condition">¬∂</a><strong>Easy condition</strong></h1><p>condition? statement-if-true: statement-if-false</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkSign</span>(<span class="hljs-params">num</span>)</span>&#123;<br>retun num &gt; <span class="hljs-number">0</span> ? <span class="hljs-string">&quot;positive&quot;</span> : num &lt;<span class="hljs-number">0</span> ? <span class="hljs-string">&quot;negative&quot;</span> : <span class="hljs-string">&quot;zero&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="let-var-const"><a class="header-anchor" href="#let-var-const">¬∂</a><strong>let, var, const</strong></h1><p><code>let</code> cannot be declared twice</p><p><code>let</code> is defined in scope. <code>var</code> is not</p><p><code>const</code> is read-only, cannot write</p><p><code>const SENTENCE = &quot;good!&quot;;</code></p><h1 id="Array"><a class="header-anchor" href="#Array">¬∂</a><strong>Array</strong></h1><p>array is immutable</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">freezeObj</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-meta">&quot;use strict&quot;</span>;<br><span class="hljs-keyword">const</span> MATH_CONSTANTS = &#123;<br>PI: <span class="hljs-number">3.14</span><br>&#125;;<br><br><span class="hljs-built_in">Object</span>.freeze(MATH_CONSTANTS); <span class="hljs-comment">//make object immutalbe </span><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="Anonymous-function"><a class="header-anchor" href="#Anonymous-function">¬∂</a><strong>Anonymous function</strong></h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> magic = <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(); <span class="hljs-comment">// () means function, =&gt; means return </span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> myConcat = <span class="hljs-function">(<span class="hljs-params">arr1, arr2</span>) =&gt;</span> &#123;arr1.concat(arr2)&#125;;<br></code></pre></td></tr></table></figure><h1 id="Array-filter"><a class="header-anchor" href="#Array-filter">¬∂</a><strong>Array filter</strong></h1><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">arr.filter(<span class="hljs-function"><span class="hljs-params">num</span> =&gt;</span> <span class="hljs-built_in">Number</span>.isInteger(num) &amp;&amp; num &gt;<span class="hljs-number">0</span>).map(<span class="hljs-function"><span class="hljs-params">x</span> =&gt;</span> x *x);<br></code></pre></td></tr></table></figure><h1 id="Default-parameter"><a class="header-anchor" href="#Default-parameter">¬∂</a><strong>Default parameter</strong></h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> increment = (<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-keyword">return</span> funtion <span class="hljs-function"><span class="hljs-title">increment</span>(<span class="hljs-params"><span class="hljs-built_in">number</span>, value =<span class="hljs-number">1</span> </span>)</span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">number</span>+value;<br>&#125;;<br>&#125;)();<br></code></pre></td></tr></table></figure><h1 id="Rest-argument"><a class="header-anchor" href="#Rest-argument">¬∂</a>Rest argument</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> num = (<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>retuurn <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sum</span>(<span class="hljs-params">...args</span>)</span>&#123;<br>   <span class="hljs-keyword">return</span> args.reduce(<span class="hljs-function">(<span class="hljs-params">a,b</span>) =&gt;</span> a+b, <span class="hljs-number">0</span>);<br>   &#125;;<br>&#125;)();<br><span class="hljs-built_in">console</span>.log(sum(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>));<br><br></code></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">arr2</span> = [...arr1]<span class="hljs-comment">; \\ copy values</span><br><span class="hljs-attr">arr2</span> = arr1<span class="hljs-comment">; \\copy the same reference</span><br><br></code></pre></td></tr></table></figure><p><code>const [, , ... arr] = list</code> we can specify which index should be changed.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> greeting = <span class="hljs-string">&quot;Hello, my name is $&#123;person.name&#125;&quot;</span> \\inside curly brase is Js<br></code></pre></td></tr></table></figure><h1 id="Create-an-object"><a class="header-anchor" href="#Create-an-object">¬∂</a><strong>Create an object</strong></h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> createPerson = <span class="hljs-function">(<span class="hljs-params">name, age, gender</span>) =&gt;</span> (&#123;name, age, gender&#125;);<br><span class="hljs-built_in">console</span>.log(createPerson(<span class="hljs-string">&quot;Zodiac Hasbro&quot;</span>, <span class="hljs-number">56</span>, <span class="hljs-string">&quot;male&quot;</span>));<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> SpaceShuttle = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">targetPlanet</span>)</span>&#123;<br><span class="hljs-built_in">this</span>.targetPlanet = targetPlanet;<br>&#125;<br><span class="hljs-keyword">var</span> zeus = <span class="hljs-keyword">new</span> SpaceShuttle(<span class="hljs-string">&quot;Jupiter&quot;</span>);<br><br><span class="hljs-built_in">console</span>.log(zeus.targetPlanet);<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SpaceShuttle</span></span>&#123;<br><span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">targetPlanet</span>)</span>&#123;<br><span class="hljs-built_in">this</span>.targetPlanet = targetPlanet;<br>&#125;<br>&#125; <br><span class="hljs-keyword">var</span> zeus = <span class="hljs-keyword">new</span> SpaceShuttle(<span class="hljs-string">&quot;Jupiter&quot;</span>);<br><br><span class="hljs-built_in">console</span>.log(zeus.targetPlanet);<br></code></pre></td></tr></table></figure><h1 id="Getter-Setter"><a class="header-anchor" href="#Getter-Setter">¬∂</a><strong>Getter, Setter</strong></h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs javascript"> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Book</span></span>&#123;<br><span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">author</span>)</span>&#123;<br>        <span class="hljs-built_in">this</span>._author = author;<br>    &#125;<br>    <span class="hljs-keyword">get</span> <span class="hljs-title">writer</span>()&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._author;<br>    &#125;<br>    <span class="hljs-keyword">set</span> <span class="hljs-title">writer</span>(<span class="hljs-params">updatedAuthor</span>)&#123;<br>            <span class="hljs-built_in">this</span>._author = updatedAuthor;<br>        &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">makeClass</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Thermostat</span></span>&#123;<br>        <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">temp</span>)</span>&#123;<br>            <span class="hljs-built_in">this</span>._temp = <span class="hljs-number">5</span>/<span class="hljs-number">9</span> * (temp-<span class="hljs-number">32</span>);<br>        &#125;  <br>        <span class="hljs-keyword">get</span> <span class="hljs-title">temperature</span>()&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>._temp;<br>        &#125;<br>        <span class="hljs-keyword">set</span> <span class="hljs-title">temperature</span>(<span class="hljs-params">updatedTemp</span>)&#123;<br>            <span class="hljs-built_in">this</span>._temp = updatedTemp;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> Thermostat;<br>&#125;<br><br><span class="hljs-keyword">const</span> Thermostat = makeClass();<br><span class="hljs-keyword">const</span> thermos = <span class="hljs-keyword">new</span> Thermostat(<span class="hljs-number">76</span>);<br><br><span class="hljs-built_in">console</span>.log(thermos._temp)<br></code></pre></td></tr></table></figure><h1 id="export-import"><a class="header-anchor" href="#export-import">¬∂</a><strong>export, import</strong></h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123;capitalizeString&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./string_function&quot;</span><br><span class="hljs-keyword">const</span> cap = capitalizeString(<span class="hljs-string">&quot;hello!&quot;</span>);<br><br><span class="hljs-built_in">console</span>.log(cap)<br><br><span class="hljs-comment">//Âú®Âè¶‰∏Ä‰∏™Êñá‰ª∂Èáå</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> capitalizeString = <span class="hljs-function"><span class="hljs-params">str</span> =&gt;</span> str.toUpperCase()<br><span class="hljs-comment">//capitalizeString ÊòØ‰∏Ä‰∏™ÊñπÊ≥ïÔºåparameter ÊòØstr</span><br><br><span class="hljs-keyword">export</span>&#123;capitalizeString&#125;;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> foo = <span class="hljs-string">&#x27;bar&#x27;</span>;<br><br><span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> capitalizing <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./where&quot;</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subtract</span>(<span class="hljs-params">x,y</span>)</span>&#123;<span class="hljs-keyword">return</span> x-y&#125;;<br><span class="hljs-keyword">import</span> subtract <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./where&quot;</span><br></code></pre></td></tr></table></figure><p>Â∑Æ‰∏çÂ§öËøôÂ∞±ÊòØ‰∏Ä‰∫õSyntaxÂå∫Âà´ÔºåÂÖ∑‰ΩìË¶ÅÁî®ÂÜçÊü•ÊâæÂêßÔºÅ üòÑ</p>]]></content>
    
    
    <categories>
      
      <category>JS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Briefly</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DivideConquer Reci4</title>
    <link href="/2021/02/24/DivideConquerReci4/"/>
    <url>/2021/02/24/DivideConquerReci4/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ÂºÄÂßã-Starting"><a class="header-anchor" href="#ÂºÄÂßã-Starting">¬∂</a>ÂºÄÂßã Starting</h1><p>ÁªèÂÖ∏È¢òÁõÆÔºåÊúÄÂ§ßËá™Â∫èÂíå ÔºåRecitation 4</p><span id="more"></span><h1 id="È¢òÁõÆ-Question"><a class="header-anchor" href="#È¢òÁõÆ-Question">¬∂</a>È¢òÁõÆ Question</h1><p>The Maximum Subarray Problem: Suppose you are given an array of n integers.  The integers may contain negative numbers. We want to find a (contiguous) subarray whose numbers sum to the most possible.  For example, if A= (‚àí5,‚àí6,3,‚àí2,7,‚àí6,2,1), then the maximum subarray would be(3,‚àí2,7)because it sums to 8 and there is no other subarray that sums that high. Solve the problem using divide and conquer, in time O(nlogn).</p><h1 id="ÊÉ≥Ê≥ï-Thinking"><a class="header-anchor" href="#ÊÉ≥Ê≥ï-Thinking">¬∂</a>ÊÉ≥Ê≥ï Thinking</h1><p>Brutal force will consider all possible subarrays, there are $n^2$ subarrays, so the total time is $O(n^2)$ time.</p><p>There are three possible ways of locating the ideal (i,j) for the max array:</p><ol><li>in left half</li><li>in right half</li><li>in the region that cross the middle</li></ol><p>The third case is not a recursion process. All three cases return the max array for that part.(Correctness).</p><p>The termination should be when high == low, return (low, high, A[low ])</p><p>After returning three cases, we should do comparison between them.</p><p>The recursion should return (lower, higher, sum)</p><p>ÂíåReci ‰∏ÄÊ†∑ÁöÑËß£Ê≥ïÔºö‰∏≠Êñá</p><p>ÊúÄ‰ºòËß£‰πüÂπ∂ÈùûËøô‰∏™ ÂàÜÊ≤ªÊ≥ïÔºå‰ΩÜÊòØÊÄùÁª¥ÊØîËæÉÂ∑ßÂ¶ô</p><p><a href="https://leetcode-cn.com/problems/maximum-subarray/solution/zui-da-zi-xu-he-by-shi-yue-40/">https://leetcode-cn.com/problems/maximum-subarray/solution/zui-da-zi-xu-he-by-shi-yue-40/</a></p><h1 id="ÁÆóÊ≥ï-Algorithm"><a class="header-anchor" href="#ÁÆóÊ≥ï-Algorithm">¬∂</a>ÁÆóÊ≥ï Algorithm</h1><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>(<span class="hljs-params"><span class="hljs-built_in">object</span></span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">maxSubArray</span>(<span class="hljs-params">self, nums</span>):</span><br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        :type nums: List[int]</span><br><span class="hljs-string">        :rtype: int</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        <br>        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">crossMaxSubArray</span>(<span class="hljs-params">nums, left, right, middle</span>):</span><br>            <span class="hljs-comment"># left part, summing</span><br>            leftSum = nums[middle]<br>            return_i = middle<br>            i = middle -<span class="hljs-number">1</span><br>            <span class="hljs-keyword">while</span> i &gt;= left:<br>                currentSum = <span class="hljs-built_in">sum</span>(nums[i:middle+<span class="hljs-number">1</span>])  <span class="hljs-comment"># middle is included in this case</span><br>                <span class="hljs-keyword">if</span> currentSum &gt;leftSum:<br>                    leftSum = currentSum<br>                    return_i = i<br>                i-=<span class="hljs-number">1</span><br>            <br>            <span class="hljs-comment"># right part</span><br>            rightSum = nums[middle+<span class="hljs-number">1</span>]<br>            return_j = middle + <span class="hljs-number">1</span><br>            j = middle +<span class="hljs-number">1</span><br>            <span class="hljs-keyword">while</span> j &lt;= right:<br>                currentSum = <span class="hljs-built_in">sum</span>(nums[middle+<span class="hljs-number">1</span>:j+<span class="hljs-number">1</span>]) <span class="hljs-comment"># j is not included in this case </span><br>                <span class="hljs-keyword">if</span> currentSum &gt; rightSum:<br>                    rightSum = currentSum<br>                    return_j = j<br>                j+=<span class="hljs-number">1</span><br>            <br>            <br>            totalSum = leftSum+rightSum<br>            <span class="hljs-keyword">return</span> (return_i, return_j, totalSum)<br>        <br>        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">recursionMax</span>(<span class="hljs-params">nums, left, right</span>):</span><br>            <span class="hljs-comment"># base case</span><br>            <span class="hljs-keyword">if</span> (left == right):<br>                <span class="hljs-keyword">return</span> (left, right, nums[left])<br>            <br>            middle = (right+left)//<span class="hljs-number">2</span><br>            (leftLow, leftHigh, leftSum) = recursionMax(nums, left, middle)<br>            (rightLow, rightHigh, rightSum) = recursionMax(nums, middle+<span class="hljs-number">1</span>, right)<br>            (crossLow, crossHigh, crossSum) = crossMaxSubArray(nums, left, right, middle)<br>            <span class="hljs-comment"># comparison</span><br>            <span class="hljs-keyword">if</span> leftSum &gt;= rightSum <span class="hljs-keyword">and</span> leftSum &gt;= crossSum:<br>                <span class="hljs-keyword">return</span> (leftLow, leftHigh, leftSum)<br>            <span class="hljs-keyword">elif</span> rightSum &gt;= leftSum <span class="hljs-keyword">and</span> rightSum &gt;= crossSum:<br>                <span class="hljs-keyword">return</span> (rightLow, rightHigh, rightSum)<br>            <span class="hljs-keyword">elif</span> crossSum &gt;= leftSum <span class="hljs-keyword">and</span> crossSum &gt;= rightSum:<br>                <span class="hljs-keyword">return</span> (crossLow, crossHigh, crossSum)<br>            <br>        (_,_, s) = recursionMax(nums, <span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(nums)-<span class="hljs-number">1</span>)<br>        <br>        <span class="hljs-keyword">return</span> s<br></code></pre></td></tr></table></figure><h1 id="ËøêË°åÊó∂Èó¥-Run-time"><a class="header-anchor" href="#ËøêË°åÊó∂Èó¥-Run-time">¬∂</a>ËøêË°åÊó∂Èó¥ Run-time</h1><p>T(n) = 2T(n/2) + O(1) (comparing) + O(n)(cross) + O(1)(sum)</p><p>‚Äã        = 2T(n/2) + O(n)</p><p>‚Äã        = O(nlogn) by mastering theorem</p><h1 id="ÂèçÊÄù-Introspection"><a class="header-anchor" href="#ÂèçÊÄù-Introspection">¬∂</a>ÂèçÊÄù Introspection</h1><p>Âõ†‰∏∫Âú®cross ÈáåÈù¢ÁöÑboundary ÈáåÈù¢ÁöÑbugÊîπÊù•ÊîπÂéªÔºåÂ∞±ÊòØÂÅö‰∏çÂ•ΩÔºå‰ªîÁªÜÁúã‰∫ÜÂ•Ω‰∏Ä‰ºöÔºà1‰∏™Â∞èÊó∂‰ª•‰∏äÔºâÊâçÂèëÁé∞ÊòØ‰∏Ä‰∏™Â∞èÈîôËØØ„ÄÇÊâÄ‰ª•‰∏ÄÂÆöË¶ÅÂú®ËÑëÂ≠êÈáåÊÉ≥Â•Ωboundary ÁöÑÊÉÖÂÜµÔºÅÔºÅÔºÅ</p><p>„Åä„ÇÑ„Åô„Åø</p>]]></content>
    
    
    <categories>
      
      <category>algo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CMPSC465</tag>
      
      <tag>DivideAndConquer</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Algo(0) Majority-Element</title>
    <link href="/2021/02/17/Algorithm-Majority-Element/"/>
    <url>/2021/02/17/Algorithm-Majority-Element/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="ÂºÄÂßã"><a class="header-anchor" href="#ÂºÄÂßã">¬∂</a>ÂºÄÂßã</h1><p>ÊúÄËøëÊÉ≥Âá∫Êù•‰∏Ä‰∏™Â•Ω‰∏ªÊÑèÔºåÂõ†‰∏∫ÊúÄËøë‰πüÂú®Â≠¶‰π†‰∏äÁÆóÊ≥ïËØæÔºåÊâìÁÆóÊääÂ≠¶Ê†°Â≠¶‰∫ÜÁöÑÁÆóÊ≥ïËØæÁî®Âú®LeetCodeÂà∑È¢òÂΩì‰∏≠„ÄÇ</p><p>ÊàëÁé∞Âú®ÈÉΩËøòÂú®ÊÉ≥ÊòØÁî®‰∏≠ÊñáÂÜô‰ΩúËøòÊòØËã±ÊñáÂÜô‰ΩúÊñπ‰æø‰∏Ä‰∫õÂë¢„ÄÇÊúÄÂêéËßâÂæó ÊôÆÈÄöÊó•Â∏∏ÈÉ®ÂàÜ‰∏ªË¶ÅÁî®‰∏≠ÊñáÔºå‰ª£Á†ÅÊñπÈù¢ÁöÑËØù‰∏≠Ëã±Â§πÊùÇÁöÑÊÉÖÂÜµËÇØÂÆöÊØîËæÉÂ§ö„ÄÇ</p><p>ÈÇ£ÂÖàÊù•Á¨¨‰∏ÄÈ¢òÂêßÔºåÊ≠£Â•ΩËøôÈÅìÈ¢òÊòØËøôÊòüÊúü465‰Ωú‰∏öÁöÑ‰∏ÄÈÅìÈ¢òÔºåÁî®Divide and Conquer Ëß£ Majority element</p><p>Âú∞ÂùÄÔºö <a href="https://leetcode.com/problems/majority-element/">Majority Element  </a><span id="more"></span></p><h1 id="È¢òÁõÆ"><a class="header-anchor" href="#È¢òÁõÆ">¬∂</a>È¢òÁõÆ</h1><h2 id="Leetcode-ÊèèËø∞"><a class="header-anchor" href="#Leetcode-ÊèèËø∞">¬∂</a>Leetcode ÊèèËø∞</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><pre><code class="hljs livecodeserver">Given <span class="hljs-keyword">an</span> array nums <span class="hljs-keyword">of</span> size n, <span class="hljs-literal">return</span> <span class="hljs-keyword">the</span> majority <span class="hljs-keyword">element</span>.<br><br>The majority <span class="hljs-keyword">element</span> is <span class="hljs-keyword">the</span> <span class="hljs-keyword">element</span> that appears more than ‚åän / <span class="hljs-number">2</span>‚åã times. You may assume that <span class="hljs-keyword">the</span> majority <span class="hljs-keyword">element</span> always exists <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> array.<br><br> <br><br>Example <span class="hljs-number">1</span>:<br><br>Input: nums = [<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br>Output: <span class="hljs-number">3</span><br>Example <span class="hljs-number">2</span>:<br><br>Input: nums = [<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>]<br>Output: <span class="hljs-number">2</span><br> <br><br>Constraints:<br><br>n == nums.<span class="hljs-built_in">length</span><br><span class="hljs-number">1</span> &lt;= n &lt;= <span class="hljs-number">5</span> * <span class="hljs-number">104</span><br><span class="hljs-number">-231</span> &lt;= nums[i] &lt;= <span class="hljs-number">231</span> - <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h2 id="‰Ωú‰∏öÊèèËø∞"><a class="header-anchor" href="#‰Ωú‰∏öÊèèËø∞">¬∂</a>‰Ωú‰∏öÊèèËø∞</h2><p>(16 pts.) Divide-and-Conquer An array A[1‚Ä¶n] is said to have a majority element if more than half of its entries are the same.</p><p>Given an array, the task is to design an efficient algorithm to tell whether the array has a majority element, and, if so, to find that element. The elements of the array are not necessarily from some ordered domain like the integers, and so there can be no comparisons of the form ‚Äúis A[i] &gt; A[ j]?‚Äù (Think of the array elements as GIF files, say.) However you can answer questions of the form: ‚Äúis A[i] = A[ j]?‚Äù in constant time.</p><p>Design a dynamic programming algorithm to solve this problem in O(nlogn) time. You may assume that n is a power of two. (Hint: the divide step is simple: just split the array into the left half and right half. How does knowing the majority elements (if they exist) of the two halves help you figure out the majority element in the whole array? Consider all the possibilities.)</p><ol><li><p>Describe the algorithm, either in pseudo-code or English.</p></li><li><p>Argue why your algorithm is correct</p></li><li><p>Do a running time analysis of your algorithm.</p></li></ol><h1 id="ÊÉ≥Ê≥ï"><a class="header-anchor" href="#ÊÉ≥Ê≥ï">¬∂</a>ÊÉ≥Ê≥ï</h1><p>‰Ωú‰∏ö‰∏≠Â∑≤ÁªèÊèêÂà∞ÊèêÂá∫‰∏Ä‰∏™ $O(nlogn)$ Êó∂Èó¥ÁöÑÁÆóÊ≥ïÔºå‰∏îÊèêÂà∞‰∫Ü Êää array Á≠âÂàÜ‰∏§‰ªΩÔºåÂç≥$T(n) = 2(T/2)+O(?)$ ÔºåIn worst case, if ?=n, the algorithm will be $T(n) = 2(T/2) + O(n)$Ôºå Áî®master theoremÔºå Â∞±ËÉΩÂæóÂà∞ $O(nlogn)$.</p><p>Ê≠§È¢òÁöÑÈáçÁÇπÂú®‰∫éÂ¶ÇÊûúÂ∑≤Áü• ‰∏§‰∏™partÊòØÂê¶Â∑≤ÁªèÊúâmeÔºàmajority elementÔºâËÉΩ‰∏çËÉΩÂ∏ÆÂä©ÂæóÂà∞Êï¥ÂùóÁöÑmajority element„ÄÇ‰∏ÄÊó¶ÊääÊâÄÊúâÁöÑcaseÊÉ≥Ê∏ÖÊ•öÔºåÈÇ£‰πàËøôÈÅìÈ¢òÂ∞±ËøéÂàÉËÄåËß£‰∫Ü„ÄÇ</p><h1 id="ÁÆóÊ≥ï-Âπ∂ÈùûÊúÄ‰ºòËß£"><a class="header-anchor" href="#ÁÆóÊ≥ï-Âπ∂ÈùûÊúÄ‰ºòËß£">¬∂</a>ÁÆóÊ≥ï (Âπ∂ÈùûÊúÄ‰ºòËß£)</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span>(<span class="hljs-params"><span class="hljs-built_in">object</span></span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">majorityElement</span>(<span class="hljs-params">self, nums</span>):</span><br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        :type nums: List[int]</span><br><span class="hljs-string">        :rtype: int</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br><br>        leng = <span class="hljs-built_in">len</span>(nums);<br>        <span class="hljs-keyword">return</span> self.maj(nums, <span class="hljs-number">0</span>, leng);<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">maj</span>(<span class="hljs-params">self, nums, left, right</span>):</span><br>        <span class="hljs-keyword">if</span>(right-left ==<span class="hljs-number">1</span>):<br>            <span class="hljs-keyword">return</span> nums[left];<br>        <span class="hljs-keyword">else</span>:<br>            x= self.maj(nums, left, (left+right)//<span class="hljs-number">2</span>);<br>            y= self.maj(nums, (left+right)//<span class="hljs-number">2</span>, right);<br><br>            <span class="hljs-keyword">if</span>(x==y):<br>                <span class="hljs-keyword">return</span> x;<br>            <span class="hljs-keyword">elif</span>(x!=y):<br>                <span class="hljs-keyword">return</span> x <span class="hljs-keyword">if</span> (nums[left:right+<span class="hljs-number">1</span>].count(x) &gt; nums[left:right+<span class="hljs-number">1</span>].count(y)) <span class="hljs-keyword">else</span> y;<br>            <span class="hljs-keyword">elif</span>(x == <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> y != <span class="hljs-literal">None</span>):<br>                <span class="hljs-keyword">return</span> y;<br>            <span class="hljs-keyword">elif</span>(y == <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> x != <span class="hljs-literal">None</span>):<br>                <span class="hljs-keyword">return</span> x;<br>                <br></code></pre></td></tr></table></figure><h1 id="ÂèçÊÄù"><a class="header-anchor" href="#ÂèçÊÄù">¬∂</a>ÂèçÊÄù</h1><ul><li>ÂÅö‰Ωú‰∏öÊó∂ÂÄôËßâÂæóÂ∞±‰∏çÁÆÄÂçïÔºàÂ•ΩÂêßÂÖ∂ÂÆûËøôÊòØ leetcode ÁÆÄÂçïÁ∫ßÂà´ÁöÑÈ¢òÁõÆÔºå‰∏ªË¶ÅËøòÊòØÊàëÂ§™Ëèú‰∫Ü üò¢ ÔºâÂõ†‰∏∫‰Ωú‰∏öÂ∑≤ÁªèË¶ÅÊ±ÇÁî®divide and conquer ÂÅöÔºåÊâÄ‰ª•Êàë‰πüÊòØÁõ¥Êé•Êää‰Ωú‰∏ö ÁöÑpseudo-code ËΩ¨ÂåñÊàê‰∫ÜpythonÔºà‰∏ÄÂºÄÂßãÁî®java ‰∏ÄÁõ¥ÁºñËØëÂ§±Ë¥•ÔºåÁ¥¢ÊÄßÊç¢ÊàêpythonÂêß üòÇ Ôºâ„ÄÇ</li><li>ÈúÄË¶ÅÁÜüÊÇâ Âπ≥Âè∞ ÂõûÁ≠îÁïåÈù¢ÁöÑÊé•Âè£ÔºåÁâπÂà´ÊòØjava„ÄÇ</li><li>ÈúÄË¶Å‰∫ÜËß£Ëß£È¢òÊó∂ÂÄôÂÖÅËÆ∏ÁöÑÂ∫ì„ÄÇ</li></ul><p>Á¨¨‰∏ÄÊ¨°Êèê‰∫§leetcode ÁöÑ ÁªìÊûúÔºö</p><p><img src="/images/1.png" alt="1"></p><p>üòÇ ‰∏á‰∫ãÂºÄÂ§¥ÈöæÔºåÂä†Ê≤πÔºÅ</p>]]></content>
    
    
    <categories>
      
      <category>algo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CMPSC465</tag>
      
      <tag>DivideAndConquer</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Recent Update</title>
    <link href="/2021/02/12/Recent/"/>
    <url>/2021/02/12/Recent/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>ÊúÄËøëÊàêÂäüÊääÊúçÂä°Âô®‰ªéWordPressËøÅÁßªÂà∞HexoÊ°ÜÊû∂‰∏äÔºåËØïËØïÁúã‰ªÄ‰πàÊïàÊûú~</p><p>Moe-Counter Test:  name: post001</p><p><img src="https://count.getloli.com/get/@post002?theme=rule34" alt="post002"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo Intro</title>
    <link href="/2021/02/11/hexo-intro/"/>
    <url>/2021/02/11/hexo-intro/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hexo-Simple-Command-Collection"><a class="header-anchor" href="#Hexo-Simple-Command-Collection">¬∂</a>Hexo Simple Command Collection</h1><figure class="highlight markdown"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><pre><code class="hljs markdown">hexo new  \\new post<br>hexo g -d   \\generate and push<br>hexo g -w  \\ watch for change<br>hexo s    \\start server<br>hexo pubish \\draft -&gt; post<br>hexo d  \\deploy<br>hexo migrate \\ Ë¶ÅÁî®<br>hexo clean<br><br></code></pre></td></tr></table></figure><h1 id="Font-Matter"><a class="header-anchor" href="#Font-Matter">¬∂</a>Font Matter</h1><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs delphi"><span class="hljs-keyword">Uses</span> the Yamo grammer<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ËøëÂÜµ</title>
    <link href="/2021/01/18/%E8%BF%91%E5%86%B5/"/>
    <url>/2021/01/18/%E8%BF%91%E5%86%B5/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Ê∏ÖÁêÜ‰∫ÜÂæàÂ§öÂûÉÂúæËØÑËÆ∫Ôºå‰øÆÊîπ‰∫ÜËØÑËÆ∫ÂèØËßÅÊñπÂºè</p><p>ÊúÄËøëÊ≤°ÊúâÊõ¥Êñ∞Ôºå‰ΩÜÊòØÊé•‰∏ãÊù•Â∫îËØ•‰ºöÊúâÊõ¥Êñ∞</p><p>ÊúâÊõ¥Êç¢ÊúçÂä°Âô®Êèê‰æõÂïÜÂèØËÉΩÔºåÂä†Âø´Êµ∑Â§ñËÆøÈóÆÈÄüÂ∫¶</p>]]></content>
    
    
    <categories>
      
      <category>uncategorized</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Âà©Áî®FlaskÊê≠Âª∫‰∏Ä‰∏™ÁÆÄÊòìÁöÑÂçöÂÆ¢ÁΩëÁ´ô(5)</title>
    <link href="/2020/08/29/%E5%88%A9%E7%94%A8flask%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%995/"/>
    <url>/2020/08/29/%E5%88%A9%E7%94%A8flask%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%995/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Êú¨Âú∞ÂåñÊó∂Èó¥</p><p>Êàë‰ª¨ÂèØ‰ª•Âà©Áî® Flask-Moment Êù•ÂØπÁΩëÁ´ôÂÅöÁªü‰∏ÄÁöÑÊó∂Èó¥ËßÑÂàí</p><p>Âú®ÂÆâË£ÖÂíåimport Ëøõ <a href="http://app.py">app.py</a> ÂêéÔºåÈÄöËøá Moment(app) Ê≥®ÂÜå</p><p>ËøõÂÖ•Ê®°ÊùøÊñá‰ª∂¬†<code>templates/base.html</code>¬†ÔºåÊ∑ªÂä†</p><p><code>&#123;% block scripts %&#125;`  `&#123;&#123; super() &#125;&#125;`  `&#123;&#123; moment.include_moment() &#125;&#125;`  `&#123;&#123; moment.lang('zh-cn') &#125;&#125;`  `&#123;% endblock %&#125;</code></p><p>ËøôÊ†∑Êàë‰ª¨Â∞±Âú®Ê®°Êùø‰∏äÊàêÂäüÊ≥®ÂÜå‰∫ÜMoment</p><p><a href="http://xn--front-ln2hk9lejk64bfn9ahl7f1ip.py">ÂÜçËøõÂÖ•ËßÜÂõæÊñá‰ª∂front.py</a> import datetime</p><figure class="highlight angelscript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-keyword">from</span> datetime <span class="hljs-keyword">import</span> datetime<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>():</span><br>    <span class="hljs-string">&#x27;&#x27;&#x27;ÁΩëÁ´ôÈ¶ñÈ°µ&#x27;&#x27;&#x27;</span><br>    date_time = datetime.utcnow() <span class="hljs-comment"># Moment ÈªòËÆ§Ëá™Âä®ËΩ¨Êç¢Âà∞ÂΩìÂú∞Êó∂Âå∫</span><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>, date_time=date_time)<br></code></pre></td></tr></table></figure><p>ÂÜçÂú®index‰∏ã Êäädate_time ‰º†ÂÖ•index.html, ÈÄöËøáÂ∑≤ÁªèÊ≥®ÂÜå‰∫ÜÁöÑMoment ËÉΩÂ∏ÆÂä©Êàë‰ª¨ÊòæÁ§∫ÂΩìÂâçÊó∂Èó¥</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;page-header&quot;</span>&gt;</span></span><br><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span></span><br><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span></span><br><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>ÂΩìÂâçÊó∂Èó¥Ôºö</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">moment</span>(<span class="hljs-name">date_time</span>).format(<span class="hljs-name">&#x27;LLL&#x27;</span>) &#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>‰∏äÊ¨°Âà∑Êñ∞È°µÈù¢Êó∂Èó¥ÊçÆÁé∞Âú®Ôºö</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">moment</span>(<span class="hljs-name">date_time</span>).fromNow(<span class="hljs-name">refresh</span>=<span class="hljs-literal">True</span>) &#125;&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>ÂÜçÂêØÂä®Â∫îÁî®ÔºåÂ∞±ËÉΩËá™Âä®ÊòæÁ§∫Âá∫Êó∂Èó¥ÂíåÊó•ÊúüÂï¶</p>]]></content>
    
    
    <categories>
      
      <category>uncategorized</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>‰∫åÂèâÊ†ëÁõ∏ÂÖ≥ÈóÆÈ¢ò</title>
    <link href="/2020/07/22/%E5%85%88%E5%BA%8F%E4%B8%AD%E5%BA%8F%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <url>/2020/07/22/%E5%85%88%E5%BA%8F%E4%B8%AD%E5%BA%8F%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E4%BA%8C%E5%8F%89%E6%A0%91/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>Âêå„Åò‰∫∫„Å™„Çì„Å¶ „ÅÑ„Å™„ÅÑ„Åã„Çâ<br>Â≠§Áã¨„Åß„ÇÇ‰ªïÊñπ„Å™„ÅÑ<br>„Åß„ÇÇ„Å≠<br>„ÅÇ„ÅÅ ËÅ¥„Åç„Åü„ÅÑ Ê≠å„ÇÑ Â£∞„Åå „ÅÇ„Çã„Åã„Çâ<br>„ÅÇ„ÅÅ Ê≥£„ÅÑ„Åü Êú¨„ÇÑ Êò†Áîª„Åå „ÅÇ„Çã„Åã„Çâ<br>„ÅÇ„Å™„Åü„ÇíÂ∞é„ÅèÂ§¢„ÅØ„ÅÇ„Çã<br>ÁÖß„Çâ„Åó„Å¶„Åø„Åõ„Å¶„Çà</p><p>Gifts</p></blockquote><p><strong><em>Gifts - Superfly</em></strong></p><h3 id="Pre-In-Post-Traversal-Successor-Node-Serialization-Origami"><a class="header-anchor" href="#Pre-In-Post-Traversal-Successor-Node-Serialization-Origami">¬∂</a><em>Pre,In,Post Traversal; Successor Node; Serialization; Origami</em></h3><p>‰πãÂâçÂá†Âë®ÈÉΩÊØîËæÉÊ∞¥ÔºåÁÆóÊ≥ïËØæ‰πüÊ≤°ÊúâÊÄé‰πàËÆ§ÁúüÁúãÔºåÊúÄËøëÂæóÊÖ¢ÊÖ¢Ë°•‰∏äÊù•<br>‰∏çËøáÁÆóÊ≥ïËøòÊòØÈúÄË¶ÅÊÖ¢ÊÖ¢Ê∂àÂåñÔºåÁúüÊ≠£ÁêÜËß£Âπ∂‰∏îÂ§öÂ§ç‰π†ÔºåËÆ∞ÂøÜÊâçÊòØÊúÄÈáçË¶ÅÁöÑ</p><h3 id="DFS"><a class="header-anchor" href="#DFS">¬∂</a><em>DFS</em></h3><p>Pre, In, Post Order Traversal in Binary Tree</p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Node</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, data</span>):</span><br>        self.value = data<br>        self.left = <span class="hljs-literal">None</span><br>        self.right = <span class="hljs-literal">None</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">preOrderTraversal</span>(<span class="hljs-params">head</span>):</span><br>    <span class="hljs-keyword">if</span> head <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    print(head.value + <span class="hljs-string">&#x27; &#x27;</span>)<br>    preOrderTraversal(head.left)<br>    preOrderTraversal(head.right)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">inOrderTraversal</span>(<span class="hljs-params">head</span>):</span><br>    <span class="hljs-keyword">if</span> head <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    inOrderTraversal(head.left)<br>    print(head.value + <span class="hljs-string">&#x27; &#x27;</span>)<br>    inOrderTraversal(head.right)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">postOrderTraversal</span>(<span class="hljs-params">head</span>):</span><br>    <span class="hljs-keyword">if</span> head <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    postOrderTraversal(head.left)<br>    postOrderTraversal(head.right)<br>    print(head.value + <span class="hljs-string">&#x27; &#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="Breadth-First-Search-BFS"><a class="header-anchor" href="#Breadth-First-Search-BFS">¬∂</a><em>Breadth First Search (BFS)</em></h3><h4 id="ËøôÈáåÊòØÂÖ≥‰∫é‰∏ÄÈÅìÊ±ÇÊ†ëÊúÄÂ§ßÂÆΩÂ∫¶ÁöÑËß£ÔºåÊú¨Ë¥®ÊòØÁî®‰∫ÜBFS"><a class="header-anchor" href="#ËøôÈáåÊòØÂÖ≥‰∫é‰∏ÄÈÅìÊ±ÇÊ†ëÊúÄÂ§ßÂÆΩÂ∫¶ÁöÑËß£ÔºåÊú¨Ë¥®ÊòØÁî®‰∫ÜBFS">¬∂</a><em>ËøôÈáåÊòØÂÖ≥‰∫é‰∏ÄÈÅìÊ±ÇÊ†ëÊúÄÂ§ßÂÆΩÂ∫¶ÁöÑËß£ÔºåÊú¨Ë¥®ÊòØÁî®‰∫ÜBFS</em></h4><p>ËøôÈáåÊúÄÊ†∏ÂøÉÁöÑBFSÊòØÁî®javaÂÜôÁöÑ</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs lasso"><span class="hljs-keyword">public</span> static <span class="hljs-literal">void</span> treeBFS(Node head) &#123;<br><span class="hljs-keyword">if</span> (head == <span class="hljs-built_in">null</span>) &#123;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-built_in">Queue</span>&lt;Node&gt; <span class="hljs-built_in">queue</span> = <span class="hljs-literal">new</span> LinkedList&lt;&gt;();<br><span class="hljs-built_in">queue</span>.add(head);<br><span class="hljs-keyword">while</span> (!<span class="hljs-built_in">queue</span>.isEmpty()) &#123;<br>Node cur = <span class="hljs-built_in">queue</span>.poll();<br>System.out.println(cur.value+<span class="hljs-string">&quot; &quot;</span>);<br><span class="hljs-keyword">if</span> (cur.left != <span class="hljs-built_in">null</span>) &#123;<br><span class="hljs-built_in">queue</span>.add(cur.left);<br>&#125;<br><span class="hljs-keyword">if</span> (cur.right != <span class="hljs-built_in">null</span>) &#123;<br><span class="hljs-built_in">queue</span>.add(cur.right);<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Ê≠§È¢òÁöÑpythonËß£‰ª•ÂèäÊµãËØïÔºö</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs vim">from collections import deque<br><br>def breathFirstSearch(head):<br>    queue = deque()<br>    <span class="hljs-keyword">if</span> head <span class="hljs-keyword">is</span> None:<br>        <span class="hljs-keyword">return</span> None<br>    levelMap = &#123;&#125;<br>    levelMap[head] = <span class="hljs-number">1</span><br>    queue.<span class="hljs-keyword">append</span>(head)<br><br>    cLevel = <span class="hljs-number">1</span><br>    cNodes = <span class="hljs-number">0</span> # <span class="hljs-keyword">set</span> <span class="hljs-keyword">to</span> <span class="hljs-number">0</span> because we need <span class="hljs-keyword">to</span> use +=<span class="hljs-number">1</span> in <span class="hljs-keyword">while</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">make</span> loop run<br>    maxa = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> queue:<br>        cur = queue.popleft()<br>        level = levelMap.<span class="hljs-built_in">get</span>(cur)<br><br>        <span class="hljs-keyword">if</span> level == cLeve<span class="hljs-variable">l:</span><br>            cNodes += <span class="hljs-number">1</span> # nodes <span class="hljs-keyword">on</span> current level +=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;level: &#123;&#125;, nodes: &#123;&#125;&quot;</span>.format(cLevel, cNodes))<br>            <span class="hljs-keyword">if</span> cNodes &gt; <span class="hljs-built_in">max</span><span class="hljs-variable">a:</span><br>                maxa = cNodes<br>            cLevel += <span class="hljs-number">1</span><br>            cNodes = <span class="hljs-number">1</span> # cNodes <span class="hljs-keyword">is</span> the <span class="hljs-keyword">first</span> element of the level, (it <span class="hljs-built_in">has</span> been popped)<br><br>        <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;Node: &#123;&#125;, level: &#123;&#125;&quot;</span>.format(cur.value, level))<br>        <span class="hljs-keyword">if</span> cur.<span class="hljs-keyword">left</span> <span class="hljs-keyword">is</span> not None:<br>            levelMap[cur.<span class="hljs-keyword">left</span>] = level + <span class="hljs-number">1</span><br>            queue.<span class="hljs-keyword">append</span>(cur.<span class="hljs-keyword">left</span>)<br>        <span class="hljs-keyword">if</span> cur.<span class="hljs-keyword">right</span> <span class="hljs-keyword">is</span> not None:<br>            levelMap[cur.<span class="hljs-keyword">right</span>] = level + <span class="hljs-number">1</span><br>            queue.<span class="hljs-keyword">append</span>(cur.<span class="hljs-keyword">right</span>)<br><br>    <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;level: &#123;&#125;, nodes: &#123;&#125;&quot;</span>.format(level, cNodes))<br><br>    <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">&#x27;catch the max of the last level: it will not enter the while as all stuffs has been poped&#x27;</span><span class="hljs-string">&#x27;&#x27;</span><br><br>    <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;the max level is &#123;&#125;&quot;</span>.format(<span class="hljs-built_in">max</span>(maxa, cNodes)))<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    head = Node(<span class="hljs-number">1</span>)<br>    head.<span class="hljs-keyword">left</span> = Node(<span class="hljs-number">2</span>)<br>    head.<span class="hljs-keyword">right</span> = Node(<span class="hljs-number">3</span>)<br>    head.<span class="hljs-keyword">left</span>.<span class="hljs-keyword">left</span> = Node(<span class="hljs-number">4</span>)<br>    head.<span class="hljs-keyword">left</span>.<span class="hljs-keyword">right</span> = Node(<span class="hljs-number">5</span>)<br>    head.<span class="hljs-keyword">right</span>.<span class="hljs-keyword">left</span> = Node(<span class="hljs-number">6</span>)<br>    head.<span class="hljs-keyword">right</span>.<span class="hljs-keyword">right</span> = Node(<span class="hljs-number">7</span>)<br>    breathFirstSearch(head)<br></code></pre></td></tr></table></figure><hr><h3 id="Âú®‰∏≠Â∫èÈÅçÂéÜ‰∏≠ÂêéÁªßËäÇÁÇπ‰∏éÂâçÈ©±ËäÇÁÇπÁöÑÁõ¥Êé•Êü•Êâæ"><a class="header-anchor" href="#Âú®‰∏≠Â∫èÈÅçÂéÜ‰∏≠ÂêéÁªßËäÇÁÇπ‰∏éÂâçÈ©±ËäÇÁÇπÁöÑÁõ¥Êé•Êü•Êâæ">¬∂</a><em>Âú®‰∏≠Â∫èÈÅçÂéÜ‰∏≠ÂêéÁªßËäÇÁÇπ‰∏éÂâçÈ©±ËäÇÁÇπÁöÑÁõ¥Êé•Êü•Êâæ</em></h3><h4 id="A-direct-way-of-finding-the-successor-node-and-previous-node-in-the-in-order-traversal"><a class="header-anchor" href="#A-direct-way-of-finding-the-successor-node-and-previous-node-in-the-in-order-traversal">¬∂</a><em>A direct way of finding the successor node and previous node in the in-order traversal</em></h4><p><strong>S_uccessor:_</strong><br><strong><em>Two situations:</em></strong></p><ol><li>the leftest child in the right tree of a node X is the next node in the traversal of node X.</li><li>if the X does not have right tree, go to the parent node, and continue if the parent is always the right child of its parent, until it is the left child of the parent Y. this Y is the next node of X. However, there is no such y, means x does not have the next node.</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;&#x27;&#x27; to find the next node of a node in the in-order traversal&#x27;&#x27;&#x27;</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Node</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, val</span>):</span><br>        self.value = val<br>        self.left = <span class="hljs-literal">None</span><br>        self.right = <span class="hljs-literal">None</span><br>        self.parent = <span class="hljs-literal">None</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">two situations:</span><br><span class="hljs-string">1. the leftest child in the right tree of a node X is the next node in the traversal of node X</span><br><span class="hljs-string">2. if the X does not have right tree, go to the parent node, and continue if the parent</span><br><span class="hljs-string">is always the right child of its parent, until it is the left child of the parent Y. this Y</span><br><span class="hljs-string">is the next node of X. However, there is no such y, means x does not have the next node.</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">findSuccessor</span>(<span class="hljs-params">node</span>):</span><br>    <span class="hljs-keyword">if</span> node <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">if</span> node.right <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">return</span> getMostLeft(node.right)<br>    <span class="hljs-keyword">else</span>:<br>        parent = node.parent<br>        <span class="hljs-keyword">while</span> parent <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> node != parent.left:<br>            node = parent<br>            parent = node.parent<br>        <span class="hljs-keyword">return</span> parent<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getMostLeft</span>(<span class="hljs-params">node</span>):</span><br>    <span class="hljs-keyword">if</span> node <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">while</span> node.left <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        node = node.left<br>    <span class="hljs-keyword">return</span> node<br></code></pre></td></tr></table></figure><p><strong><em>Previous Node:</em></strong><br><strong><em>Two situations:</em></strong></p><ol><li>if the node has left child, the prev node is rightest of the left child.</li><li>if the node X does not have left child, we keep going to its parent. if the parent is also the left child of its parent, keep going until it is the right child of a parent. the parent here is its previous node X.</li></ol><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">def getPreviousNode(<span class="hljs-keyword">node</span><span class="hljs-title">):</span><br><span class="hljs-title">    if</span> <span class="hljs-keyword">node</span> <span class="hljs-title">is</span> None:<br>        return None<br>    elif node.left:<br>        return getMostRight(node.left)<br>    else:<br>        parent = node.parent<br>        while parent <span class="hljs-keyword">and</span> <span class="hljs-keyword">node</span> <span class="hljs-title">!= parent</span>.right:<br>            <span class="hljs-keyword">node</span> <span class="hljs-title">= parent</span><br>            parent = node.parent<br>        return parent<br><br>def getMostRight(<span class="hljs-keyword">node</span><span class="hljs-title">):</span><br><span class="hljs-title">    if</span> not <span class="hljs-keyword">node</span><span class="hljs-title">:</span><br><span class="hljs-title">        return</span> None<br>    while node.right:<br>        <span class="hljs-keyword">node</span> <span class="hljs-title">= node</span>.right<br>    return <span class="hljs-keyword">node</span><span class="hljs-title"></span><br></code></pre></td></tr></table></figure><hr><h3 id="Serialization-and-Deserialization"><a class="header-anchor" href="#Serialization-and-Deserialization">¬∂</a>_Serialization and Deserialization</h3><p>Â∫èÂàóÂåñ Âíå ÂèçÂ∫èÂàóÂåñ_</p><p>Serialization:<br>serialize the binary tree in the memory into string and<br>deserialize it from the string to memory.<br>Structure and Data should be preserved.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Node</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, val</span>):</span><br>        self.value = val<br>        self.left = <span class="hljs-literal">None</span><br>        self.right = <span class="hljs-literal">None</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__repr__</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Node &lt;&#123;&#125;&gt;&quot;</span>.<span class="hljs-built_in">format</span>(self.value)<br><br>    __str__ = __repr__<br><br><span class="hljs-string">&#x27;&#x27;&#x27;record a node by _ and do not ignore the None node&#x27;&#x27;&#x27;</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">preOrderSerialize</span>(<span class="hljs-params">head</span>):</span><br>    <span class="hljs-keyword">if</span> head <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;#_&#x27;</span><br>    output = <span class="hljs-built_in">str</span>(head.value) + <span class="hljs-string">&quot;_&quot;</span><br>    output += preOrderSerialize(head.left)  <span class="hljs-comment"># output is waiting for further recursion from the left</span><br>    output += preOrderSerialize(head.right)  <span class="hljs-comment"># waiting for the right</span><br>    <span class="hljs-keyword">return</span> output  <span class="hljs-comment"># return output itself to append to the output on the upper level</span><br><br><br><br><span class="hljs-keyword">from</span> collections <span class="hljs-keyword">import</span> deque<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">preOrderDeserialize_String</span>(<span class="hljs-params">string</span>):</span><br>    values = string.split(<span class="hljs-string">&#x27;_&#x27;</span>)<br>    queue = deque()<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> values:<br>        queue.append(i)<br>    <span class="hljs-keyword">return</span> preOrderDeserialize_Tree_subprocess(queue)<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">preOrderDeserialize_Tree_subprocess</span>(<span class="hljs-params">queue</span>):</span><br>    value = queue.popleft()<br>    <span class="hljs-keyword">if</span> value == <span class="hljs-string">&#x27;#&#x27;</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    head = Node(<span class="hljs-built_in">int</span>(value))<br>    head.left = preOrderDeserialize_Tree_subprocess(queue)<br>    head.right = preOrderDeserialize_Tree_subprocess(queue)<br>    <span class="hljs-keyword">return</span> head<br></code></pre></td></tr></table></figure><p>Â∫îÁî®Ôºö ‰∏Ä‰∏™Ê†ëÊòØÂê¶ÊòØÂè¶Â§ñ‰∏Ä‰∏™Ê†ëÁöÑÂ≠êÊ†ë</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">application: is a tree t1 the subtree of another tree t2 ?</span><br><span class="hljs-string">answer: serialize both and check t1_string is part of t2_string</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">isSubtreeOf</span>(<span class="hljs-params">t1, t2</span>):</span><br>    t1_string = preOrderSerialize(t1)<br>    t2_string = preOrderSerialize(t2)<br>    <span class="hljs-keyword">return</span> t1_string <span class="hljs-keyword">in</span> t2_string<br></code></pre></td></tr></table></figure><p>Test:</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">if __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    head = <span class="hljs-keyword">Node</span><span class="hljs-title">(1</span>)<br>    head.left = <span class="hljs-keyword">Node</span><span class="hljs-title">(2</span>)<br>    head.right = <span class="hljs-keyword">Node</span><span class="hljs-title">(3</span>)<br>    head.left.left = <span class="hljs-keyword">Node</span><span class="hljs-title">(4</span>)<br>    head.left.right = <span class="hljs-keyword">Node</span><span class="hljs-title">(5</span>)<br>    head.right.left = <span class="hljs-keyword">Node</span><span class="hljs-title">(6</span>)<br>    head.right.right = <span class="hljs-keyword">Node</span><span class="hljs-title">(7</span>)<br>    serial = preOrderSerialize(head)<br>    print(<span class="hljs-string">&quot;this is a serialized tree: \n&#123;&#125;&quot;</span>.format(serial))<br>    head = preOrderDeserialize_String(serial)<br>    print(<span class="hljs-string">&quot;Now the tree has be deserialized, start to check&quot;</span>)<br>    print(head, head.left, head.right, head.left.left, head.left.right, head.right.left, head.right.right)<br>    print(<span class="hljs-string">&quot;\nnow check if t2 is a subtree of t1:&quot;</span>)<br>    head_2 = <span class="hljs-keyword">Node</span><span class="hljs-title">(3</span>)<br>    head_2.left = <span class="hljs-keyword">Node</span><span class="hljs-title">(6</span>)<br>    head_2.right = <span class="hljs-keyword">Node</span><span class="hljs-title">(7</span>)<br>    print(isSubtreeOf(head_2, head))<br></code></pre></td></tr></table></figure><hr><h3 id="Origami-ÊäòÁ∫∏ÈóÆÈ¢ò"><a class="header-anchor" href="#Origami-ÊäòÁ∫∏ÈóÆÈ¢ò">¬∂</a><em>Origami ÊäòÁ∫∏ÈóÆÈ¢ò</em></h3><p>ËøôÈÅìÈ¢òÈúÄË¶ÅÂÜçÂÆûÈôÖÊäò‰∏Ä‰∏ãÊõ¥Â•ΩÁêÜËß£</p><p>_Fold the paper inwards (always), everytime after the first inward folding, we will have two new fold mark (one inward mark upon and outward mark below every fold marks in current level<br>(current times of folding))</p><p>Solution: the folding process is a tree with inward mark. all heads of left child is inward, and all head of right child is outward_</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">printAllFolds</span>(<span class="hljs-params">N</span>):</span><br>    printProcess(<span class="hljs-number">1</span>, N, <span class="hljs-literal">True</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">printProcess</span>(<span class="hljs-params">i, N, down</span>):</span>  <span class="hljs-comment"># args: (level, the total times of folding, inwards)</span><br>    <span class="hljs-keyword">if</span> i &gt; N:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>    printProcess(i+<span class="hljs-number">1</span>, N, <span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">if</span> down:<br>        print(<span class="hljs-string">&#x27;inwards&#x27;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        print(<span class="hljs-string">&#x27;outwards&#x27;</span>)<br>    printProcess(i+<span class="hljs-number">1</span>, N, <span class="hljs-literal">False</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    printAllFolds(<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>algo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Âà©Áî®FlaskÊê≠Âª∫‰∏Ä‰∏™ÁÆÄÊòìÁöÑÂçöÂÆ¢ÁΩëÁ´ô(4)</title>
    <link href="/2020/07/11/%E5%88%A9%E7%94%A8flask%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%994/"/>
    <url>/2020/07/11/%E5%88%A9%E7%94%A8flask%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%994/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ÈÖçÁΩÆÊò†Â∞ÑÁ±ªÂíåÊï∞ÊçÆÂ∫ì"><a class="header-anchor" href="#ÈÖçÁΩÆÊò†Â∞ÑÁ±ªÂíåÊï∞ÊçÆÂ∫ì">¬∂</a>ÈÖçÁΩÆÊò†Â∞ÑÁ±ªÂíåÊï∞ÊçÆÂ∫ì</h2><p><img src="https://azumeow.com/wp-content/uploads/2020/08/wm-1024x415.gif" alt=""></p><p>Áõ¥Êé•Ë¥¥‰∏Ä‰∏™ÂÆûÈ™åÊ•ºÁöÑÂõæÊù•Êõ¥Â•ΩÈòêËø∞Êï¥‰∏™ÊµÅÁ®ã„ÄÇ<br>ÂõæÁâáÁâàÊùÉ‰∏∫ÂÆûÈ™åÊ•ºÊâÄÊúâ</p><p>Êàë‰ª¨‰πãÂâçËØ¥Âà∞‰∫ÜMVT modelÔºå Âç≥Êï¥‰∏™ÊúçÂä°ÁöÑÂü∫Êú¨Êû∂ÊûÑÊòØÁî± modelÔºåviewÔºåtemplateÊù•ÂÆûÁé∞ÁöÑ„ÄÇÈÇ£Êàë‰ª¨Â∞±ÂºÄÂßãmodelÈÉ®ÂàÜÁöÑÂõûÈ°æÂêßÔºÅ</p><p>Â¶ÇÂõæÊâÄÁ§∫ÔºåMÊ®°ÂûãÁöÑÂäüËÉΩÊòØÊò†Â∞ÑÁ±ªÔºàORMÔºâÔºåÂç≥ÂØπÊï∞ÊçÆÂ∫ìÔºàÊàë‰ª¨‰ΩøÁî®ÁöÑÊòØMySQL)ËøõË°å‰∫§‰∫í„ÄÇ‰∏∫‰∫ÜÊõ¥Âä†‰æøÊç∑ÂæóËÉΩÂ§ü‰∏éÊï∞ÊçÆÂ∫ìËøõË°å‰∫§‰∫íÔºåÈÅøÂÖçÁõ¥Êé•‰ΩøÁî®SQLËØ≠Âè•Êü•ËØ¢ÔºåÊàë‰ª¨ÂèØ‰ª•Âà©Áî® flask-sqlalchemyÊèí‰ª∂Êù•ËøõË°åORMÁöÑÈÉ®ÁΩ≤ÔºåÂÆÉÊòØ‰∏ìÈó®‰∏∫flaskÊèê‰æõÊîØÊåÅÁöÑsqlalchemyÊãìÂ±ï„ÄÇÁÆÄÂçïÊù•ËØ¥ÔºåÂ¶ÇÊûú‰∏ç‰ΩøÁî®ÂÆÉÔºåÊàë‰ª¨Â∞±ÂøÖÈ°ªËá™Â∑±Êê≠Âª∫ORMÔºåËøôÂ∞±Ê∂âÂèäÂà∞pythonÁöÑÂÖÉÁªÑÔºàmetaclassÔºâÂíåÂä®ÊÄÅÂàõÂª∫Á±ªÁöÑÂÜÖÂÆπ‰∫Ü ÔºàÊàëËøôÈáåÂΩìÊó∂Ëá™Â≠¶Êó∂Ê≤°ÊúâÊáÇ = =Ôºâ</p><p>Êó¢ÁÑ∂ÊúâÁé∞ÊàêÁöÑÂ∑•ÂÖ∑ÔºåÊàë‰ª¨Â∞±ÈúÄË¶ÅÂ•ΩÂ•ΩÂà©Áî®ÂÆÉÔºà‰∏∫Ëá™Â∑±ÁöÑÁ¨®ÊâæÂà∞‰∫ÜÁúã‰ººÂêàÁêÜÁöÑÂÄüÂè£ üòÉ Ôºâ„ÄÇ</p><p><code>pip install flask-sqlalchemy   pip install flask-moment</code></p><p>È¶ñÂÖàÂÆâË£ÖÁõ∏ÂÖ≥ÁöÑÊèí‰ª∂Ôºå<a href="http://xn--model-ep5hjj3315b.py">ÂÜçËøõÂÖ•model.py</a> ‰∏≠importËøô‰∫õÊèí‰ª∂ÔºåÂπ∂Ê∑ªÂä†Â¶Ç‰∏ãÁöÑ‰ª£Á†Å„ÄÇ<br>ÂèØ‰ª•ÂÖàÂøΩÁï•ÂÖ∑‰ΩìÁöÑË°®‰∏≠ Êüê‰∫õColumnÁöÑÂÜÖÂÆπ</p><figure class="highlight pgsql"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">from</span> flask_sqlalchemy <span class="hljs-keyword">import</span> SQLAlchemy<br>db = SQLAlchemy()<br><span class="hljs-keyword">class</span> <span class="hljs-keyword">Role</span>(db.Model):<br>    id = db.<span class="hljs-keyword">Column</span>(db.Integer, primary_key=<span class="hljs-keyword">True</span>)<br>    <span class="hljs-type">name</span> = db.<span class="hljs-keyword">Column</span>(db.String(<span class="hljs-number">64</span>), <span class="hljs-keyword">unique</span>=<span class="hljs-keyword">True</span>)<br>    default = db.<span class="hljs-keyword">Column</span>(db.Boolean, default=<span class="hljs-keyword">False</span>, <span class="hljs-keyword">index</span>=<span class="hljs-keyword">True</span>)<br>    permissions = db.<span class="hljs-keyword">Column</span>(db.Integer)<br><br>    def __repr__(self):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;Role: &#123;&#125;&gt;&#x27;</span>.format(self.name)<br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">class</span> <span class="hljs-keyword">User</span>(db.Model, UserMixin):<br>    def __init__(self, **kw):<br>        <span class="hljs-string">&#x27;&#x27;&#x27;default role&#x27;&#x27;&#x27;</span><br>        # <span class="hljs-keyword">inherit</span> the core <span class="hljs-keyword">of</span> ORM<br>        super().__init__(**kw)<br>        self.<span class="hljs-keyword">role</span> = <span class="hljs-keyword">Role</span>.query.filter_by(default=<span class="hljs-keyword">True</span>).first()<br><br>    # necessary<br>    id = db.<span class="hljs-keyword">Column</span>(db.Integer, primary_key=<span class="hljs-keyword">True</span>)<br>    <span class="hljs-type">name</span> = db.<span class="hljs-keyword">Column</span>(db.String(<span class="hljs-number">64</span>), <span class="hljs-keyword">unique</span>=<span class="hljs-keyword">True</span>, <span class="hljs-keyword">index</span>=<span class="hljs-keyword">True</span>)<br>    email = db.<span class="hljs-keyword">Column</span>(db.String(<span class="hljs-number">64</span>), <span class="hljs-keyword">unique</span>=<span class="hljs-keyword">True</span>, <span class="hljs-keyword">index</span>=<span class="hljs-keyword">True</span>)  # <span class="hljs-keyword">index</span> helps <span class="hljs-keyword">to</span> <span class="hljs-keyword">do</span> query <span class="hljs-keyword">in</span> front<br><br>    # <span class="hljs-keyword">info</span> related<br>    _password = db.<span class="hljs-keyword">Column</span>(<span class="hljs-string">&#x27;password&#x27;</span>, db.String(<span class="hljs-number">128</span>))<br>    confirmed = db.<span class="hljs-keyword">Column</span>(db.Boolean, default=<span class="hljs-keyword">False</span>)<br>    role_id = db.<span class="hljs-keyword">Column</span>(db.Integer, db.ForeignKey(<span class="hljs-string">&#x27;role.id&#x27;</span>))<br>    <span class="hljs-keyword">role</span> = db.relationship(<span class="hljs-string">&#x27;Role&#x27;</span>, backref=db.backref(<span class="hljs-string">&#x27;users&#x27;</span>, lazy=<span class="hljs-string">&#x27;dynamic&#x27;</span>))<br><br>    # personalize<br>    age = db.<span class="hljs-keyword">Column</span>(db.Integer)<br>    gender = db.<span class="hljs-keyword">Column</span>(db.Enum(Gender))<br>    phone_num = db.<span class="hljs-keyword">Column</span>(db.String(<span class="hljs-number">32</span>), <span class="hljs-keyword">unique</span>=<span class="hljs-keyword">True</span>)<br>    <span class="hljs-keyword">location</span> = db.<span class="hljs-keyword">Column</span>(db.String(<span class="hljs-number">64</span>))<br>    about_me = db.<span class="hljs-keyword">Column</span>(db.Text())<br>    avatar_hash = db.<span class="hljs-keyword">Column</span>(db.String(<span class="hljs-number">128</span>))<br>    small_avatar_hash = db.<span class="hljs-keyword">Column</span>(db.String(<span class="hljs-number">128</span>))<br><br>    # other<br>    create_at = db.<span class="hljs-keyword">Column</span>(db.DateTime, default=datetime.utcnow())<br>    last_seen = db.<span class="hljs-keyword">Column</span>(db.DateTime, default=datetime.utcnow())<br><br>    # getter<br>    @property<br>    def <span class="hljs-keyword">password</span>(self):<br>        <span class="hljs-keyword">return</span> self._password<br></code></pre></td></tr></table></figure><p>ÂÖ≥‰∫éÊúÄÂêéËøô‰∏§‰∏™ÊñπÊ≥ïÔºå‰∏Ä‰∏™ÊòØpasswordÁöÑgetterÔºå ‰∏Ä‰∏™ÊòØ passwordÁöÑsetter</p><p>ËøôUserÁ±ª‰æøÊòØ‰∏Ä‰∏™ÁªèÂÖ∏ÁöÑORMÊò†Â∞ÑÂÖ≥Á≥ªÁöÑÂÆûÁé∞ÔºåÂç≥‰∏Ä‰∏™Á±ªÊò†Â∞ÑÂà∞Êï∞ÊçÆÂ∫ìÁöÑ‰∏Ä‰∏™Ë°®„ÄÇ</p><p>RoleË°®ÂêçÈªòËÆ§‰∏∫Á±ªÂêçÔºåËøô‰∏™Ë°®ÂÜÖÊúâËøôÂá†‰∏™ColumnÔºöid, name, default, permissions„ÄÇ __repr__ÊòØÁî®Êù•ÊòæÁ§∫Ëøô‰∏™Á±ªÁöÑÂÆû‰æãÔºåÂç≥Ë°®ÁöÑÊüê‰∏™rowÔºàÂú®ËøôÈáåÊòØÂÖ∑‰ΩìÁöÑÊüê‰∏™ÊùÉÈôêÔºâ„ÄÇÊàë‰ª¨ÊòæÁ§∫ &lt;Role: <a href="http://self.name">self.name</a>&gt; Êù•‰ª£Ë°®Ëøô‰∏™ÊùÉÈôê„ÄÇ</p><p>Áõ∏Â∫îÁöÑÔºå userÁ±ª‰ª£Ë°®ÁöÑÊòØuserË°®ÔºåÊüê‰∏™row‰ª£Ë°®ÁöÑÊòØÂÖ∑‰ΩìÁöÑÁî®Êà∑ÔºåÊØè‰∏™rowÈÉΩÈúÄË¶ÅÊúâÂØπÁî®ÁöÑid, name, email, password‰ø°ÊÅØ„ÄÇdb.Column()Á¨¨‰∏Ä‰∏™ÂèÇÊï∞ÊòØËøô‰∏™columnÁöÑÁ±ªÂûãÊàñËÄÖÊòØÂêçÂ≠óÔºåÂÖ∑‰ΩìÁöÑ‰ø°ÊÅØÂèØ‰ª•Êü•ÈòÖÂÆòÊñπÊñáÊ°£Ôºö</p><p><a href="https://flask-sqlalchemy.palletsprojects.com/en/2.x/models/">https://flask-sqlalchemy.palletsprojects.com/en/2.x/models/</a></p><p>ËøôÊ†∑ÔºåÂü∫Á°ÄÁöÑÊò†Â∞ÑÁ±ªÂ∞±ÂàõÂª∫Â•Ω‰∫ÜÔºåÊàë‰ª¨Áé∞Âú®ÈúÄË¶ÅÂàõÂª∫Áõ∏ÂØπ‰∫éÁöÑÊï∞ÊçÆÂ∫ìÔºàË°®Ôºâ</p><p>ËøõÂÖ•mysql command line, ÁôªÂΩïÔºå Âπ∂‰∏îËæìÂÖ•<code>CREATE SCHEMA flaska CHARSET = UTF8</code> , ÈÄöËøámysqlËØ≠Âè•ÂàõÂª∫Êñ∞ÁöÑÊï∞ÊçÆÂ∫ì„ÄÇÂÜçËøõÂÖ•flask shellÔºå</p><p><code>from models import db   db.create_all()</code></p><p>ËøôÊ†∑ÂÜçÊü•ËØ¢mysql ‰∏≠ÁöÑË°®ÔºåÂ∞±‰ºöÂá∫Áé∞ Role Âíå User„ÄÇËøôÂ∞±ËØ¥ÊòéÊàë‰ª¨ÁöÑÊï∞ÊçÆÂ∫ìÂü∫Êú¨Âú∞Â∞±ÈÖçÁΩÆÂ•Ω‰∫Ü</p>]]></content>
    
    
    <categories>
      
      <category>Flask</category>
      
    </categories>
    
    
    <tags>
      
      <tag>flask</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Âü∫Á°ÄÁÆóÊ≥ïÊÄªËßàÂ§ç‰π†</title>
    <link href="/2020/07/01/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E6%80%BB%E8%A7%88%E5%A4%8D%E4%B9%A0/"/>
    <url>/2020/07/01/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E6%80%BB%E8%A7%88%E5%A4%8D%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>ÊúÄËøëÊ≠£Âú®‰∏äÂ∑¶Á•ûÁöÑÁÆóÊ≥ïÂü∫Á°ÄËØæÔºåÂ∑¶Á•ûËÆ≤ÁöÑÈùûÂ∏∏ÈÄèÂΩªÔºåÈáçË¶ÅÁöÑËøòÊòØËØæ‰∏ãÊääËØæ‰∏äËÆ≤ÁöÑÂíå‰Ωú‰∏öÁöÑËá™Â∑±ÂÆûÁé∞Âπ∂‰∏îÂä†‰ª•Â§ç‰π†„ÄÇ</p><p>ËøôÁØáÂ§ç‰π†ÈõÜÔºàÂßë‰∏îÂèñ‰∏™ÂêçÂ≠óÔºâÊÄªÁªì‰∏ã‰∏™‰∫∫Âú®ËøôÊÆµÊó∂Èó¥Â≠¶‰π†Âà∞ÁöÑÁÆóÊ≥ïtopicsÔºåËøôÊ†∑Êñπ‰æøÊàë‰ª•ÂêéÂõûÊù•Â§ç‰π†„ÄÇ</p><hr><h2 id="ÊéíÂ∫è-Sort"><a class="header-anchor" href="#ÊéíÂ∫è-Sort">¬∂</a>ÊéíÂ∫è Sort</h2><p>Áõ¥Êé•‰∏äÂπ≤Ë¥ß</p><p><strong><em>Sort Algorithm</em></strong></p><p><strong><em>Time Complexity</em></strong></p><p><strong><em>Space Complexity</em></strong></p><p><strong><em>Stability</em></strong></p><p>Selection Sort</p><p>O(N¬≤)</p><p>O(1)</p><p>False</p><p>Bubble Sort</p><p>O(N¬≤)</p><p>O(1)</p><p>True</p><p>Insertion Sort</p><p>O(N¬≤)</p><p>O(1)</p><p>True</p><p><strong>Merge Sort</strong></p><p><strong>O(N*logN)</strong></p><p><strong>O(N)</strong></p><p><strong>True</strong></p><p><strong>Heap Sort</strong></p><p><strong>O(N*logN)</strong></p><p><strong>O(1)</strong></p><p><strong>False</strong></p><p><strong>Quick Sort</strong></p><p><strong>O(N*logN)</strong></p><p><strong>O(logN)</strong></p><p><strong>False</strong></p><p>Bucket Sort</p><p>O(N)</p><p>O(N)</p><p>True</p><p>ÂΩíÂπ∂ÊéíÂ∫èÔºåÂ†ÜÊéíÂ∫èÔºåÂíåÂø´ÈÄüÊéíÂ∫èÊòØÊúÄÂø´Âπ∂‰∏îÊúÄÊñπ‰æø‰ΩøÁî®ÁöÑ‰∏âÁßçÊéíÂ∫è„ÄÇÊ†πÊçÆÈúÄÊ±ÇÈÄâÊã©ÈúÄË¶ÅÁöÑÊéíÂ∫èÁÆóÊ≥ï„ÄÇ</p><p>Ê°∂ÊéíÂ∫èÂåÖÊã¨‰∫Ü ËÆ°Êï∞ÊéíÂ∫èÂíåÂü∫Êï∞ÊéíÂ∫èÔºåÊ°∂ÊéíÂ∫èÂ∞ΩÁÆ°ÂæàÂø´‰ΩÜÊòØÂØπÊï∞ÊçÆÁä∂ÂÜµÊúâË¶ÅÊ±ÇÔºå‰æãÂ¶ÇËÆ°ÊéíË¶ÅÊ±ÇÊï∞ÊçÆÁä∂ÂÜµÂ§Ñ‰∫é‰∏Ä‰∏™Áõ∏ÂØπÁ™ÑÁöÑÂüüÔºåÂü∫Êï∞ÊéíÂ∫èË¶ÅÊ±ÇÊ†∑Êú¨ÈÉΩ‰∏∫ÂçÅËøõÂà∂Êï∞</p><p>ÂØπ‰∫é‰ΩøÁî®ÈÄíÂΩíË∞ÉÁî®ÁöÑÊéíÂ∫èÁÆóÊ≥ïÂèØÂà©Áî®Master TheoremÂàÜÊûêÊó∂Èó¥Â§çÊùÇÂ∫¶Ôºö</p><p><img src="https://azumeow.com/wp-content/uploads/2020/07/6a2b5943d03e647b0061f4c327cc38cf7d43ff03.svg" alt=""></p><p>ÈÄÇÁî®‰∫éÂ≠êËøáÁ®ãÔºàsubprocessÔºâÁº©Â∞èÁöÑËßÑÊ®°ÈÉΩÊòØ n/bÔºåË∞ÉÁî®aÊ¨°subprocessÔºà‰∏îÈÉΩÊòØÁ≠âËßÑÊ®°Âú∞Áº©Â∞èÔºâÔºåÂä†‰∏äÂÖ∂‰ªñÁöÑ f(n) ÊàñËÄÖ ÂèØ‰ª•Ë°®Á§∫‰∏∫ O(n^d)ÁöÑ Êó∂Èó¥Êìç‰Ωú„ÄÇ</p><p>ËøôÊ†∑Â∞±ËÉΩÁªÜÂàÜ‰∏∫‰∏âÁßçÊÉÖÂÜµÔºö</p><ul><li>log b (a) &lt; d =&gt; O(n^d)</li><li>log b (a) &gt; d =&gt; O(n^(log b (a)))</li><li>log b (a) = d =&gt; O(n^(d) * log(n))</li></ul><p>Âø´ÊéíÔºö‰∏çËøΩÊ±ÇÁ®≥ÂÆöÊÄßÔºåÊåáÊ†áÊúÄ‰ºòÔºåÂ∏∏Êï∞ÊúÄ‰ºò„ÄÇ<br>Â†ÜÊéíÔºöËøΩÊ±ÇÊõ¥Â∞ëÁöÑÈ¢ùÂ§ñÁ©∫Èó¥Â§çÊùÇÂ∫¶„ÄÇ<br>ÂΩíÂπ∂ÔºöËøΩÊ±ÇÁ®≥ÂÆöÊÄß„ÄÇ</p><h3 id="ÊéíÂ∫èÁõ∏ÂÖ≥ÁªÉ‰π†È¢òÁõÆ"><a class="header-anchor" href="#ÊéíÂ∫èÁõ∏ÂÖ≥ÁªÉ‰π†È¢òÁõÆ">¬∂</a>ÊéíÂ∫èÁõ∏ÂÖ≥ÁªÉ‰π†È¢òÁõÆ</h3><ul><li>Â±ÄÈÉ®ÊúÄÂ∞èÔºö arrÊó†Â∫èÔºåÁõ∏ÈÇª‰∏çÁõ∏Á≠âÔºåËøîÂõû‰ªªÊÑè‰∏Ä‰∏™Â±ÄÂ∞èindex</li><li>ÊèêÂá∫Â•áÊ¨°Êï∞Ôºöarr‰∏≠Âè™Êúâ‰∏Ä‰∏™Êï∞Âá∫Áé∞‰∫ÜÂ•áÊï∞Ê¨°ÔºåÂÖ∂‰Ωô‰∏∫ÂÅ∂Êï∞Ê¨°ÔºåÊâæÂà∞Ëøô‰∏™Êï∞<ul><li>ÊãìÂ±ïÔºöÊúâ‰∏§‰∏™Êï∞Âá∫Áé∞Â•áÊï∞Ê¨°ÔºåÂÖ∂‰Ωô‰∏∫ÂÅ∂Êï∞Ê¨°ÔºåÊâæÂà∞Ëøô‰∏§Êï∞</li></ul></li><li>Â∞èÂíåÔºàsmall sumÔºâÔºöarr‰∏≠‰∏Ä‰∏™Êï∞Â∑¶ËæπÊØîÂΩìÂâçÊï∞Â∞èÁöÑÊï∞Á¥ØÂä†Ëµ∑Êù•ÔºåÂè´ÂÅöËøô‰∏™Êï∞ÁªÑÁöÑÂ∞èÂíåÔºåÊ±Çarr ÁöÑÂ∞èÂíå</li><li>ÈÄÜÂ∫èÂØπÔºö‰∏Ä‰∏™arr‰∏≠Â∑¶ËæπÁöÑÊï∞Â¶ÇÊûúÊØîÂè≥ËæπÁöÑÊï∞Â§ßÔºåÂàôËøô‰∏§‰∏™Êï∞ÊûÑÊàêÈÄÜÂ∫èÂØπÔºåÊâìÂç∞ÊâÄÊúâÈÄÜÂ∫èÂØπ</li><li>Âá†‰πéÊúâÂ∫èÁöÑÊï∞ÁªÑÔºåÊØè‰∏™ÂÖÉÁ¥†ÊéíÂ•ΩÂ∫èÊúÄÂ§ö‰∏çÁßªÂä®kË∑ùÁ¶ªÔºåÊ±ÇÊúÄÂ•ΩÁöÑÊéíÂ∫èÁÆóÊ≥ïÊéíÂ∫è</li><li>Ëç∑ÂÖ∞ÂõΩÊóó</li></ul><hr><h2 id="ÈìæË°®-Linked-List-Âíå"><a class="header-anchor" href="#ÈìæË°®-Linked-List-Âíå">¬∂</a>ÈìæË°® Linked List Âíå</h2><h2 id="ÂìàÂ∏åË°®ÔºàÂ≠óÂÖ∏ÔºâHash-Table"><a class="header-anchor" href="#ÂìàÂ∏åË°®ÔºàÂ≠óÂÖ∏ÔºâHash-Table">¬∂</a>ÂìàÂ∏åË°®ÔºàÂ≠óÂÖ∏ÔºâHash Table</h2><p>ÂçïÈìæË°®ÂíåÂèåÂêëÈìæË°®ÊòØÈáçË¶ÅÁöÑÊï∞ÊçÆÁªìÊûÑ</p><p>ÂÖ≥‰∫éÈìæË°®Ôºå Âü∫Á°ÄÁöÑÈóÆÈ¢òÊúâÔºö</p><ul><li>ÂèçËΩ¨ÂçïÂêëÈìæË°®ÂíåÂèåÂêëÈìæË°®</li><li>ÊâìÂç∞‰∏§‰∏™ÊúâÂ∫èÈìæË°®ÁöÑÂÖ¨ÂÖ±ÈÉ®ÂàÜ</li></ul><p>ËøõÈò∂‰∏ÄÁÇπÁöÑÈóÆÈ¢òÊúâÔºö</p><ul><li>Âà§Êñ≠‰∏Ä‰∏™ÈìæË°®ÊòØÂê¶‰∏∫ÂõûÊñáÁªìÊûÑÔºàpalindromeÔºâ</li><li>Â§çÂà∂Âê´ÊúâÈöèÊú∫ÊåáÈíàËäÇÁÇπÁöÑÈìæË°®</li><li>‰∏§‰∏™ÂçïÈìæË°®Áõ∏‰∫§ÁöÑÈóÆÈ¢ò</li></ul>]]></content>
    
    
    <categories>
      
      <category>algo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sorting</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>È¶ñÈ°µ</title>
    <link href="/2020/06/23/%E9%A6%96%E9%A1%B5/"/>
    <url>/2020/06/23/%E9%A6%96%E9%A1%B5/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    
    <categories>
      
      <category>uncategorized</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Âà©Áî®FlaskÊê≠Âª∫‰∏Ä‰∏™ÁÆÄÊòìÁöÑÂçöÂÆ¢ÁΩëÁ´ô(3)</title>
    <link href="/2020/06/20/%E5%88%A9%E7%94%A8flask%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%993/"/>
    <url>/2020/06/20/%E5%88%A9%E7%94%A8flask%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%993/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="http://manage.py">manage.py</a> Âíå <a href="http://configs.py">configs.py</a> ÁöÑÂ∫îÁî®</p><p>Êàë‰ª¨Áü•ÈÅìÂΩìÊàë‰ª¨ÂàõÂª∫Â•Ω appÊñá‰ª∂ÔºåÂç≥ÂÆåÊàê‰∏Ä‰∏™ÂèØ‰ª•ÂàõÂª∫Êñ∞ÁöÑflaskÂØπË±°ÁöÑÂáΩÊï∞Êó∂ÔºåÂú®ÂëΩ‰ª§Ë°åÊâßË°åËøô‰∏™ÂáΩÊï∞Êó∂ÔºåÂ∞±‰ºöËøõÂÖ•flaskÊúçÂä°Âô®„ÄÇ</p><p>Êàë‰ª¨ÂèØ‰ª•Êñ∞Âª∫‰∏Ä‰∏™manageÁöÑÊ®°ÂùóÊù•Êñπ‰æøÊàë‰ª¨Ë∞ÉËØïÊúçÂä°Âô®ÔºåÂç≥Âú®manage‰∏≠Êù•ÂêØÁî®Ëøô‰∏™create_appÁöÑÂáΩÊï∞ÔºåËøôÊ†∑Êàë‰ª¨ÂèØ‰ª•Ëá™ÂÆö‰πâÂ§öÁßçÂêØÂä®ÊúçÂä°Âô®ÁöÑÊñπÂºèÔºå‰æãÂ¶ÇÂºÄÂèëÊ®°ÂºèÊàñËÄÖÊµãËØïÊ®°Âºè„ÄÇ</p><p><a href="http://xn--configs-nw3kg06borhj9wf5am81dsf9c.py">Âú®ÂêåÁõÆÂΩï‰∏ãÊñ∞Âª∫configs.py</a></p><p>ÂÖ∑‰ΩìÁöÑËÆæÁΩÆÁúãÊ∫ê‰ª£Á†ÅÂ∞±ÂèØ‰ª•‰∫ÜÔºå‰∏ªË¶ÅÂåÖÂê´SECRET_KEY, FLASK_ENV Âíå‰∏Ä‰∫õMAIL_SERVERÁ≠âÁöÑËÆæÁΩÆ„ÄÇÊàë‰ª¨ÊääËøô‰∫õÈÖçÁΩÆÂÆö‰πâÂú®ÂÖ∑‰ΩìÁöÑÁ±ª‰∏ãÈù¢Ôºå ËøôÊ†∑ÂΩìËøô‰∏™Á±ªÂêçÈÄöËøáÊúÄÂêéËÆæÁΩÆÁöÑÂ≠óÂÖ∏ÁÆÄÂÜôÁöÑÊñπÂºè‰º†ÂÖ•create_app‰∏≠Ôºå <code>app.config.from_object(configs.get(config))</code> ËÆ©Á±ªÈáåÁöÑÈÖçÁΩÆÁõ¥Êé•‰º†ÂÖ•flaskÂØπË±°ÁöÑÈÖçÁΩÆ„ÄÇ</p><p>ÂÖ≥‰∫é‰∏Ä‰∫õ‰∏çËÉΩË¢´ÂÖ¨ÂºÄÁöÑÈÖçÁΩÆÔºå‰æãÂ¶ÇSECRETE_KEY, MAIL_PASSWORDÁ≠âÔºåÊàë‰ª¨ÂèØ‰ª•Áî®Âà∞‰∏Ä‰∏™dotenvÊèí‰ª∂Êù•Êñπ‰æøÊàë‰ª¨ÈÖçÁΩÆ„ÄÇ</p><p>Êü•‰∏Ä‰∏ãÂ¶Ç‰Ωïimport dotenvÔºåÊàë‰ª¨Âú®ÂΩìÂâçÊñá‰ª∂Â§πÊñ∞Âª∫.env Âíå .flaskenv„ÄÇ .envÂèØ‰ª•Áî®Êù•ÈÖçÁΩÆ‰∏Ä‰∫õÊ∂âÂØÜÁöÑÈÖçÁΩÆ‰ø°ÊÅØÔºåÂ¶ÇÊàë‰∏äËø∞„ÄÇ.flaskenvÊòØÁî®Êù•ÈÖçÁΩÆ‰∏Ä‰∫õÂÖ≥‰∫éflaskÊúçÂä°Âô®ÁöÑÈÖçÁΩÆÔºåÊòØÂèØÂÖ¨ÂºÄÁöÑ„ÄÇËøôÊ†∑Êàë‰ª¨ËÆæÁΩÆÂ•Ω‰∫Ü‰πãÂêéÔºåÁ≥ªÁªüÂ∞±‰ºöËá™Âä®Ê∑ªÂä†Ëøô‰∫õÈÖçÁΩÆ‰ø°ÊÅØÔºåÊàë‰ª¨Âú®configs.pyÂ∞±ÂèØ‰ª•Áî®Âà∞‰æãÂ¶Ç<code>MAIL_PASSWORD = os.getenv('MAIL_PASSWORD')</code> Êù•ÂæóÂà∞Êàë‰ª¨ÊÉ≥Ë¶ÅÁöÑÈÖçÁΩÆ‰ø°ÊÅØ„ÄÇ</p><p>ËÆ∞‰ΩèÔºåÂøÖÈ°ªÂú®manage.pyÊàñËÄÖconfigs.py‰∏≠ÂêØÁî®dotenvÊâçÂèØ‰ª•‰ΩøÁî®</p><p><code>from dotenv import load_dotenv   load_dotenv(override=True)</code></p><p>overrideÁ°ÆËÆ§‰∫Üenv‰∏≠‰ºöoverrideÁ≥ªÁªü‰∏≠ÁöÑÈÖçÁΩÆ‰ø°ÊÅØ„ÄÇ</p>]]></content>
    
    
    <categories>
      
      <category>Flask</category>
      
    </categories>
    
    
    <tags>
      
      <tag>flask</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ÈªòËÆ§Â∑•ÂÖ∑ÂåÖ</title>
    <link href="/2020/06/18/%E9%BB%98%E8%AE%A4%E5%B7%A5%E5%85%B7%E5%8C%85/"/>
    <url>/2020/06/18/%E9%BB%98%E8%AE%A4%E5%B7%A5%E5%85%B7%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    
    <categories>
      
      <category>uncategorized</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Âà©Áî®FlaskÊê≠Âª∫‰∏Ä‰∏™ÁÆÄÊòìÁöÑÂçöÂÆ¢ÁΩëÁ´ô(2)</title>
    <link href="/2020/06/17/%E5%88%A9%E7%94%A8flask%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%992/"/>
    <url>/2020/06/17/%E5%88%A9%E7%94%A8flask%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%992/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="app-py-ÁöÑÂÆûÁé∞ÂíåÂäüËÉΩ"><a class="header-anchor" href="#app-py-ÁöÑÂÆûÁé∞ÂíåÂäüËÉΩ">¬∂</a><a href="http://app.py">app.py</a> ÁöÑÂÆûÁé∞ÂíåÂäüËÉΩ</h2><p><a href="http://app.py">app.py</a> Âú®Êï¥‰∏™project ‰∏≠‰∏ªË¶Å‰ΩúÁî®ÊòØÊääÂêÑÁßçÊèí‰ª∂Ê∑ªÂä†ËøõFlask„ÄÇÂ§ßËá¥Â∞±ÊòØ ÂàõÂª∫‰∏Ä‰∏™FlaskÂØπË±°ÔºåÂπ∂ÊääÊâÄÊúâÊèí‰ª∂Ê≥®ÂÜåÂà∞Ëøô‰∏™ÂØπË±°‰∏äÔºåÂç≥‰∏Ä‰∏™Êèí‰ª∂ÊéßÂà∂Âô®„ÄÇ</p><figure class="highlight elm"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">import</span> sys<br><span class="hljs-title">sys</span>.path.append(<span class="hljs-string">&#x27;.&#x27;</span>)<br></code></pre></td></tr></table></figure><p>ËøôÈáåÊàë‰ª¨È¶ñÂÖàimportÂêÑÁßçflask ÁöÑÊèí‰ª∂:<br>1. pagedownÊòØcommentÈúÄË¶ÅÁöÑmarkdown Êèí‰ª∂<br>2. FlaskÊòØflaskÊú¨‰ΩìÔºå‰∏çËØ¥‰∫ÜÂêß<br>3. bootstrap ÊòØ‰∏Ä‰∏™ÊääÂêÑÁßçÂ∏∏Áî®blocksÔºàÂç≥ÂêÑÁßçCSSÂíåJSÁöÑÊ®°ÊùøÔºâÂåÖÂê´ÁöÑpackage,ËøôÊ†∑Âú®template‰∏≠ÂèØ‰ª•Áõ¥Êé•extend bootstrap ‰æãÂ¶ÇÔºö</p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-keyword">extends</span></span> &#x27;bootstrap/base.html&#x27; %&#125;</span><br><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-keyword">from</span></span> &#x27;bootstrap/wtf.html&#x27; import quick_form %&#125;</span><br></code></pre></td></tr></table></figure><p>ËøôÊ†∑templateÂ∞±ÂèØ‰ª•Êñπ‰æøÂú∞Ë∞ÉÁî®Ëøô‰∫õÊ®°Êùø</p><p>4. moment ÊòØ‰∏Ä‰∏™Êñπ‰æøÂà©Áî®Êó∂Èó¥ÁöÑÊèí‰ª∂<br>5. migrate ÊòØ‰∏∫databaseÊèê‰æõÁâàÊú¨Â§á‰ªΩÁöÑÊèí‰ª∂„ÄÇÂäüËÉΩÂèØ‰ª•Á≠â‰ª∑‰∫é git ‰πã‰∫écode<br>6. loginÊòØ‰∏Ä‰∏™ÁÆ°ÁêÜÁî®Êà∑ÁôªÂΩïÁöÑÊèí‰ª∂</p><p>app‰∏≠ÁöÑ register_blueprintÂáΩÊï∞Êääblueprint_list‰∏≠ÊâÄÊúâÁöÑËßÜÂõæmoduleÔºàÂåÖÂê´ÊâÄÊúâËßÜÂõæÂáΩÊï∞ÔºâÊ≥®ÂÜåÂà∞flask ÂØπË±°‰∏ä„ÄÇ</p><p>register_extensionsÂáΩÊï∞ÊääÊâÄÊúâ‰∏äËø∞ÁöÑÊèí‰ª∂Ê≥®ÂÜåÂà∞ÂØπË±°‰∏äÔºå‰πãÂêéÂú®Êàë‰ª¨ÂàõÂª∫‰∫ÜflaskÂØπË±°ÂêéÔºåË∞ÉÁî®Ëøô‰∏™ÂáΩÊï∞Âç≥ÂèØ„ÄÇ</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@login_manager.user_loader</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">user_loader</span>(<span class="hljs-params"><span class="hljs-built_in">id</span></span>):</span><br><span class="hljs-comment"># Âè™Êúâ‰∏ªÈîÆÊâçÂèØ‰ª•‰ΩøÁî® query.get ÊñπÊ≥ïÊü•ËØ¢</span><br><span class="hljs-keyword">return</span> User.query.get(<span class="hljs-built_in">id</span>)<br></code></pre></td></tr></table></figure><p>Ëøô‰∏™ÂáΩÊï∞‰ºöÂëäËØâlogin_managerÁôªÂΩïÁî®Êà∑ÁöÑ‰ø°ÊÅØÔºå Âç≥callbackÔºàÂõûË∞ÉÂáΩÊï∞ÔºâËøôÊ†∑Á≥ªÁªü‰æøËÉΩËØÜÂà´ÁôªÂΩïÁî®Êà∑ÁöÑË∫´‰ªΩ„ÄÇËøîÂõûÁöÑÊòØuserÂØπË±°„ÄÇ</p><p>create_app ÂáΩÊï∞ÂàôÊòØÁî®Êù• ÂàùÂßãÂåñÂØπË±°ÔºåÊ∑ªÂä†Áõ∏ÂÖ≥ÈÖçÁΩÆÔºå Âπ∂Ê≥®ÂÜåÊèí‰ª∂ÂíåËìùÂõæÔºåÊúÄÂêéËøîÂõûÂØπË±°„ÄÇ</p><p>ÂÖ≥‰∫éÊ∑ªÂä†Áõ∏ÂÖ≥ÈÖçÁΩÆÁöÑÊñπÊ≥ïÔºåÊàëÂú®‰∏ã‰∏ÄÁ´†‰ºöÊèêÂà∞„ÄÇ</p><p>ËøôÊ†∑‰∏Ä‰∏™ÊúÄ‰∏∫ÈáçË¶ÅÁöÑ‰∏Ä‰∏™ÁéØËäÇÂ∞±ÂÆåÊàê‰∫ÜÔºÅ[]<sub>(Ôø£‚ñΩÔø£)</sub>*Â∫ÜÁ•ù‰∏Ä‰∏ãÂêßÔºÅ</p>]]></content>
    
    
    <categories>
      
      <category>Flask</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Âà©Áî®FlaskÊê≠Âª∫‰∏Ä‰∏™ÁÆÄÊòìÁöÑÂçöÂÆ¢ÁΩëÁ´ô(1)</title>
    <link href="/2020/06/17/%E5%88%A9%E7%94%A8flask%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"/>
    <url>/2020/06/17/%E5%88%A9%E7%94%A8flask%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Flask_logo.svg/220px-Flask_logo.svg.png" alt=""></p><h2 id="‰∏ªË¶ÅÂü∫Êú¨ÁªìÊûÑ"><a class="header-anchor" href="#‰∏ªË¶ÅÂü∫Êú¨ÁªìÊûÑ">¬∂</a>‰∏ªË¶ÅÂü∫Êú¨ÁªìÊûÑ</h2><p>Flask ÊòØ‰∏Ä‰∏™Êñπ‰æøÁÆÄÊ¥ÅÁöÑwebÊê≠Âª∫ÁöÑpythonÊ°ÜÊû∂ÔºåÂ¶ÇÊûúÂàöÂàöÂ≠¶‰π†ÂÆåpythonÂü∫Á°ÄÔºåÂèØ‰ª•Â∞ùËØïÂà©Áî®Flask Êê≠Âª∫‰∏Ä‰∏™ÁÆÄÊòìÁöÑÂçöÂÆ¢ÁΩëÁ´ô„ÄÇ</p><p>Êú¨ÊñáÊó®Âú®Âà©Áî®Êàë‰∏∫Êï∞‰∏çÂ§öÁöÑpythonÁü•ËØÜÂíåÊê≠ÈÖçÁΩë‰∏äÁöÑÊïôÁ®ã Ôºà‰∏ªË¶ÅÊù•Ê∫ê‰∫éÂÆûÈ™åÊ•ºÁöÑÊïôÁ®ãÔºâÊèê‰æõ‰∏Ä‰∏™ËæÉ‰∏∫ÂÖ®Èù¢Ôºà‰∏çÔºâÁöÑself-reflection„ÄÇ ËøôÁØáÊñáÁ´†‰πüÁî®‰∫éÂ∏ÆÂä©ÊàëÁêÜÈ°∫Êê≠Âª∫ÊúçÂä°Âô®Êó∂ÁöÑÊÄùË∑ØÂíåÂÖ∑‰Ωì‰∏Ä‰∫õÂäüËÉΩÂÆûÁé∞ÁöÑÂÜçÊë∏Á¥¢„ÄÇ</p><p>È¶ñÂÖàÁ°ÆÂÆöËøô‰∏™ÊúçÂä°Âô®ÁöÑÂü∫Á°ÄÁªìÊûÑÔºö‰∏ãÈù¢ÊòØprojectÁöÑpackagesÁªìÊûÑÔºö</p><ul><li>handlers<ul><li><a href="http://init.py">init.py</a></li><li><a href="http://front.py">front.py</a></li><li><a href="http://user.py">user.py</a></li></ul></li><li>scripts<ul><li>generate_fake_data.py</li></ul></li><li>static</li><li>migrations</li><li>templates<ul><li>users</li><li>front</li></ul></li><li><a href="http://app.py">app.py</a></li><li><a href="http://config.py">config.py</a></li><li><a href="http://decorator.py">decorator.py</a></li><li>email_app.py</li><li><a href="http://forms.py">forms.py</a></li><li><a href="http://manage.py">manage.py</a></li><li><a href="http://models.py">models.py</a></li></ul><p>flaska ÊòØËá™Â∑±ÁªôËøô‰∏™ÊúçÂä°Âô®ÂèñÂæóÂêçÂ≠óÔºàÊó†ÊâÄË∞ìÔºâÔºå handlersÊòØÁî®Êù•Â§ÑÁêÜview function ÁöÑÊñá‰ª∂Â§πÔºå<a href="http://xn--user-4h0gi65f.xn--pyfront-9r4l.py">ÂåÖÊã¨user.pyÂíåfront.py</a>.</p><p>ËøôÈáåÈ°∫‰æøË°•ÂÖÖ‰∏Ä‰∏ã‰ªÄ‰πàÊòØview functionÔºå Â¶ÇÊûúË¶Å‰∫ÜËß£view function, Êàë‰ª¨ÈúÄË¶ÅÊáÇÂæó‰ªÄ‰πàÊòØMVT software design pattern. MVT means Model, View, and Template. It is a popular pattern or model to design a web server of software by using Flask or Django.</p><p>I can briefly introduce this concept by showing a picture, and this is more straightforward as well.</p><ul><li><p><img src="https://azumeow.com/wp-content/uploads/2020/06/MTV-Diagram.png" alt=""></p><p>A flowchart of how MVT works</p></li><li><p><img src="https://azumeow.com/wp-content/uploads/2020/06/mtv_drawing1.png" alt=""></p><p>Stack way of thinking MVT</p></li></ul><p>To talk about the view part in this chart, what I simply think about the <strong>view</strong> is the logic behind the webpage, which directs how will <strong>one link connects to another link</strong> in the webserver. Also, it is used to help to know in what circumstance the webpage is available to a certain user or not. Generally, it is the logic behind the webserver.</p><p>Model(Ê®°Âùó) refers to where ORM mapping located in the server framework.<br>Êàë‰ª¨ÊÉ≥Ë¶ÅÊääÊï∞ÊçÆÂ∫ìÁöÑÂÖ≥Á≥ªË°®ÔºàÊàë‰ΩøÁî®ÁöÑÊòØrelational databaseÔºâËÉΩÂ§üÁÆÄÊòìÂú∞Âú®py file ÈáåÂæóÂà∞‰ΩøÁî®ÔºåËøô‰∏™Êó∂ÂÄôÂ∞±Âæó‰ΩøÁî® ORM ÊääÂÖ≥Á≥ªÊò†Â∞ÑÂà∞Á±ªÈáå„ÄÇÊØîÂ¶ÇÊää‰∏Ä‰∏™Ë°®Êò†Â∞ÑÊàê‰∏Ä‰∏™Á±ª„ÄÇ</p><p>TemplateÔºàÊ†∑ÊùøÔºâÂ±û‰∫éÂâçÁ´ØÂÜÖÂÆπÔºåÂç≥Êàë‰ª¨Ë¶Å‰∏∫ÂÆ¢Êà∑ÂëàÁé∞‰ªÄ‰πàÊ†∑ÁöÑÂÜÖÂÆπÔºåÂÖ∑‰ΩìÂ∏ÉÂ±ÄÊòØÊÄéÊ†∑ÁöÑÔºåÊàë‰ª¨Â∞±ÈúÄË¶ÅÂà©Áî® htmlÔºåcssÔºåjsÊù•ÂÆûÁé∞„ÄÇÊàë‰ª¨Âú®viewÈáåË∞ÉÁî®Ê†∑ÊùøÔºåÊù•ËææÂà∞Êüê‰∏™ÁΩëÈ°µÈìæÊé•ÂëàÁé∞Êüê‰∏™È°µÈù¢ÁöÑÊïàÊûú„ÄÇ</p><p>Êï¥‰∏™ÁöÑÊµÅÁ®ãËÉΩÂ§üÈÄöËøáÂõæ‰∏ÄÊù•ÂæóÂà∞ÂÆåÊï¥ÁöÑËØ†Èáä„ÄÇÂç≥ modelÊòØÊï∞ÊçÆÂ∫ìÁöÑÊò†Â∞ÑÔºåtemplateÊòØÂÖ∑‰ΩìÁΩëÈ°µÁöÑÂëàÁé∞ÔºåviewÊòØÊúçÂä°Âô®ÂÜÖÈÉ®ÁöÑËøêÁî®templateÁöÑÈÄªËæë„ÄÇ</p><p>viewËøò‰ºöcreate, update, delete Êï∞ÊçÆÂ∫ìÔºåÊØîÂ¶ÇÊàë‰ª¨ÂàõÂª∫Êñ∞Áî®Êà∑Êó∂ÔºåÂ∞±ÊòØÂú®Êõ¥Êñ∞Êï∞ÊçÆÂ∫ì„ÄÇview‰πüÊèê‰æõÊï∞ÊçÆÁî®Êù•ÂëàÁé∞ÁªôÁî®Êà∑„ÄÇÂèçËøáÊù•Ê†∑Êùø‰ºö‰º†ÂÖ•Áî®Êà∑ÁöÑformÁî®‰ª•Êõ¥Êñ∞Êï∞ÊçÆÂ∫ì„ÄÇ</p><p>Â•Ω‰∫ÜÔºåhandlersÂíåtemplatesËß£ÈáäÂÆåÊØï„ÄÇscriptsÂú®ËøôÈáå‰∏ªË¶ÅÁî®‰∫éÊµãËØïÁî®„ÄÇstaticÊòØÈùôÊÄÅÊñá‰ª∂ÔºåÂç≥Êàë‰ª¨ÁΩëÁ´ôÁöÑÂõæÊ†áÂíåcssÊñá‰ª∂Â≠òÂÇ®‰∫éÊ≠§„ÄÇ</p><p>‰ªãÁªçÂÆå‰∫ÜÂü∫Êú¨ÁöÑpackage ÁªìÊûÑÔºå‰∏ªË¶ÅÁöÑÂá†‰∏™modules‰∏Ä‰∏ÄÊù•ËØ¥„ÄÇ</p>]]></content>
    
    
    <categories>
      
      <category>Flask</category>
      
    </categories>
    
    
    <tags>
      
      <tag>flask</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello, World!</title>
    <link href="/2020/06/13/hello-world-1/"/>
    <url>/2020/06/13/hello-world-1/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Hi, guys. I am Lucheng!</p><p>This is my first time of building a blog, and I am very excited with this!</p><p>I used to build a blog website with Flask model and python as the server. In fact, it is somehow not that easy to build from zero. However, it is very worthy to go through the process, which allows me to learn a lot regarding the basic structrue and flowchart for how the data be transmitted through the server, database, and the front side.</p><p>If you have any chance, please have a try! It must be a rewarding experience. I truely recommend to learn how database, html, css, and python ‚Ä¶ etc. At the end, you will probably have the same thought as me: the Wordpress saved my life!</p><p>I will update this blog as a place to store my pieces of knowledge such as programming experience, Anime recommendation and relating personal understanding, and anything that I would like to share with you! I would be very grateful for any recommendation or advice to build a better and stronger blog webiste! I hope you could enjoy here at AzuMeow!</p><blockquote><p>„Ç¢„Ç∫ÔΩû„Éã„É£ÔΩû„Éã„É£ÔΩû„Éã„É£„Éº</p><p><em>Azu<sub>Meow</sub>Meow<sub>Meow</sub></em></p><p>Âπ≥Êæ§ ÂîØ</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Miscellaneous</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Azumeow</tag>
      
      <tag>Introduction</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
